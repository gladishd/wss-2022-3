(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    546761,      10843]
NotebookOptionsPosition[    537316,      10672]
NotebookOutlinePosition[    537753,      10689]
CellTagsIndexPosition[    537710,      10686]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{
   RowBox[{"\"\<Vivax\>\"", "->", 
    RowBox[{
    "<|", Cell[
     "data...",ExpressionUUID->"33aa471a-7c9a-4890-bcc8-8e25f06b17ca"], 
     "|>"}]}], ",", 
   RowBox[{"\"\<Falciparum\>\"", "->", 
    RowBox[{
    "<|", Cell[
     "data...",ExpressionUUID->"dab10064-9b44-482c-bf4f-40c2922aacf4"], 
     "|>"}]}]}], "|>"}]], "Input",
 CellChangeTimes->{{3.868110974051296*^9, 3.8681109740562057`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"08c64d2c-ed50-4094-912b-def6686df134"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Vivax\"\>", "\[Rule]", 
    RowBox[{"Association", "[", 
     InterpretationBox[Cell[
      "data...",ExpressionUUID->"5826d680-451a-4cdb-a846-8e9452855e53"],
      TextCell["data..."]], "]"}]}], ",", 
   RowBox[{"\<\"Falciparum\"\>", "\[Rule]", 
    RowBox[{"Association", "[", 
     InterpretationBox[Cell[
      "data...",ExpressionUUID->"92f00f00-ec5c-411f-b4ce-a7720d29bd0a"],
      TextCell["data..."]], "]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8681109744919558`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"8f9938c5-3f36-46da-a516-553fe84cc802"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "rulify", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rulify", "[", "data_List", "]"}], ":=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
        RowBox[{
          StyleBox["\"Year: \"", "DateObjectLabel"], "\"2011\""}], 
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", "2011", "}"}], ",", "\"Year\""}], "]"}]},
       "DateObject",
       Editable->False], ",", 
      TemplateBox[{
        RowBox[{
          StyleBox["\"Year: \"", "DateObjectLabel"], "\"2012\""}], 
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", "2012", "}"}], ",", "\"Year\""}], "]"}]},
       "DateObject",
       Editable->False], ",", 
      TemplateBox[{
        RowBox[{
          StyleBox["\"Year: \"", "DateObjectLabel"], "\"2013\""}], 
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", "2013", "}"}], ",", "\"Year\""}], "]"}]},
       "DateObject",
       Editable->False], ",", 
      TemplateBox[{
        RowBox[{
          StyleBox["\"Year: \"", "DateObjectLabel"], "\"2014\""}], 
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", "2014", "}"}], ",", "\"Year\""}], "]"}]},
       "DateObject",
       Editable->False]}], "}"}], "->", "data"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.868110980805285*^9, 3.868110980810596*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"2116110f-e2d8-43ef-8d61-822b6f5c2c9a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plasmodiumVivaxPatients", "=", 
   RowBox[{"rulify", "[", 
    RowBox[{"{", 
     RowBox[{"38", ",", "70", ",", "75", ",", "56"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plasmodiumFalciparumPatients", "=", 
   RowBox[{"rulify", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "19", ",", "10", ",", "5"}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.868110986471409*^9, 3.86811098647513*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2611c52c-0467-41e2-b0af-7f70b7583846"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patientdata", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<VivaxPatients\>\"", "->", "plasmodiumVivaxPatients"}], ",", 
    RowBox[{
    "\"\<FalciparumPatients\>\"", "->", "plasmodiumFalciparumPatients"}]}], 
   "|>"}]}]], "Input",
 CellChangeTimes->{{3.868110989108467*^9, 3.8681109891133633`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"f215646e-4a24-4854-bbfd-96f144248ed6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"VivaxPatients\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{
         RowBox[{
           StyleBox["\"Year: \"", "DateObjectLabel"], "\"2011\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", "2011", "}"}], ",", "\"Year\""}], "]"}]},
        "DateObject",
        Editable->False], "\[Rule]", "38"}], ",", 
      RowBox[{
       TemplateBox[{
         RowBox[{
           StyleBox["\"Year: \"", "DateObjectLabel"], "\"2012\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", "2012", "}"}], ",", "\"Year\""}], "]"}]},
        "DateObject",
        Editable->False], "\[Rule]", "70"}], ",", 
      RowBox[{
       TemplateBox[{
         RowBox[{
           StyleBox["\"Year: \"", "DateObjectLabel"], "\"2013\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", "2013", "}"}], ",", "\"Year\""}], "]"}]},
        "DateObject",
        Editable->False], "\[Rule]", "75"}], ",", 
      RowBox[{
       TemplateBox[{
         RowBox[{
           StyleBox["\"Year: \"", "DateObjectLabel"], "\"2014\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", "2014", "}"}], ",", "\"Year\""}], "]"}]},
        "DateObject",
        Editable->False], "\[Rule]", "56"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"FalciparumPatients\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{
         RowBox[{
           StyleBox["\"Year: \"", "DateObjectLabel"], "\"2011\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", "2011", "}"}], ",", "\"Year\""}], "]"}]},
        "DateObject",
        Editable->False], "\[Rule]", "2"}], ",", 
      RowBox[{
       TemplateBox[{
         RowBox[{
           StyleBox["\"Year: \"", "DateObjectLabel"], "\"2012\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", "2012", "}"}], ",", "\"Year\""}], "]"}]},
        "DateObject",
        Editable->False], "\[Rule]", "19"}], ",", 
      RowBox[{
       TemplateBox[{
         RowBox[{
           StyleBox["\"Year: \"", "DateObjectLabel"], "\"2013\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", "2013", "}"}], ",", "\"Year\""}], "]"}]},
        "DateObject",
        Editable->False], "\[Rule]", "10"}], ",", 
      RowBox[{
       TemplateBox[{
         RowBox[{
           StyleBox["\"Year: \"", "DateObjectLabel"], "\"2014\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", "2014", "}"}], ",", "\"Year\""}], "]"}]},
        "DateObject",
        Editable->False], "\[Rule]", "5"}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.868110989410597*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"cc5176b0-0c4a-4272-8a2a-a5dbbc2ddbbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "patientdata", "]"}]], "Input",
 CellChangeTimes->{{3.868110991687845*^9, 3.868110991692759*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"385fe0a9-dc01-489e-a667-49fcb43cc9a1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.5028288*^9, 38.}, {3.5343648*^9, 70.}, {3.5659872*^9, 
         75.}, {3.5975232*^9, 56.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.5028288*^9, 2.}, {3.5343648*^9, 19.}, {3.5659872*^9, 
         10.}, {3.5975232*^9, 5.}}]}}}, {{}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5028288*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5028288*^9, 3.5975232*^9}, {0, 75.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"VivaxPatients\"", "\"FalciparumPatients\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.868110993125515*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"b06f7d1a-aa5a-467b-b89f-ec1eb7da5f90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"patientdata", ",", 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Vivax Patients\>\"", ",", "\"\<Falciparum Patients\>\""}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<2011\>\"", ",", "\"\<2012\>\"", ",", "\"\<2013\>\"", ",", 
        "\"\<2014\>\""}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.868110997197217*^9, 3.868110997202276*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6f132cf9-fd49-46e1-a193-5113c7b74e90"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.5800873998543336, 0.}, {8.939184268026219, 
     0.}}]}, {{}, {{{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
         Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.7439912600145666, 0.}, {1.64639475600874, 38.},
                 "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{20.24671633359226, 
               56.51560869637581}, {-14.048760970202522`, 88.97172611871369}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 38]& ,
            TagBoxNote->"38"],
           StyleBox["38", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[38, {}], "Tooltip"]& ]}, 
        {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{Opacity[0.644], 
         Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.7439912600145666`, 0.}, {2.64639475600874, 
                70.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{59.88407647411026, 
               96.1529688368938}, {-100.38180272928986`, 88.97172611871369}}],
             
             "DelayedMouseEffectStyle"],
            StatusArea[#, 70]& ,
            TagBoxNote->"70"],
           StyleBox["70", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[70, {}], "Tooltip"]& ]}, 
        {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], EdgeForm[{
         Opacity[0.644], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.7439912600145666`, 0.}, {3.64639475600874, 
                75.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{99.52143661462827, 
               135.7903289774118}, {-113.87134050414724`, 88.97172611871369}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 75]& ,
            TagBoxNote->"75"],
           StyleBox["75", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[75, {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{Opacity[0.644], 
         Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.7439912600145666`, 0.}, {4.64639475600874, 
                56.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{139.15879675514628`, 
               175.42768911792982`}, {-62.61109695968915, 88.97172611871369}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 56]& ,
            TagBoxNote->"56"],
           StyleBox["56", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[56, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
         Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.0367807720320465`, 0.}, {5.93918426802622, 2.},
                 "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{190.40156022886765`, 226.6704525916512}, {
               83.07591100877073, 88.97172611871369}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ]}, 
        {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{Opacity[0.644], 
         Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.0367807720320465`, 0.}, {6.93918426802622, 
                19.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{230.03892036938566`, 266.30781273216917`}, {
               37.211482574255584`, 88.97172611871369}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 19]& ,
            TagBoxNote->"19"],
           StyleBox["19", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[19, {}], "Tooltip"]& ]}, 
        {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], EdgeForm[{
         Opacity[0.644], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.0367807720320465`, 0.}, {7.93918426802622, 
                10.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{269.6762805099037, 305.9451728726872}, {
               61.4926505689989, 88.97172611871369}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{Opacity[0.644], 
         Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.036780772032046, 0.}, {8.939184268026219, 5.}, 
                "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{309.3136406504217, 345.5825330132052}, {
               74.9821883438563, 88.97172611871369}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, 
   
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.5800873998543336, 0.}, {9.106366205389659, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.7439912600145666, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.7439912600145666, 0.}]}], 
        LineBox[{{8.93918426802622, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {8.93918426802622, 
           0.}]}], {{}, {}, {}, {}, {
          LineBox[{{1.64639475600874, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.64639475600874, 0.}]}], 
          LineBox[{{1.7439912600145666`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.7439912600145666`, 
             0.}]}], LineBox[{{2.64639475600874, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.64639475600874, 0.}]}], 
          LineBox[{{2.7439912600145666`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.7439912600145666`, 
             0.}]}], LineBox[{{3.64639475600874, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.64639475600874, 0.}]}], 
          LineBox[{{3.7439912600145666`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.7439912600145666`, 
             0.}]}]}, {}, {}, {}, {}, {
          LineBox[{{5.93918426802622, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.93918426802622, 0.}]}], 
          LineBox[{{6.0367807720320465`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.0367807720320465`, 
             0.}]}], LineBox[{{6.93918426802622, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.93918426802622, 0.}]}], 
          LineBox[{{7.0367807720320465`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.0367807720320465`, 
             0.}]}], LineBox[{{7.93918426802622, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.93918426802622, 0.}]}], 
          LineBox[{{8.036780772032046, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {8.036780772032046, 
             0.}]}]}, {
          LineBox[{{4.64639475600874, 0.}, 
            Offset[{-1.102182119232618*^-15, -6.}, {4.64639475600874, 0.}]}], 
          LineBox[{{5.0367807720320465`, 0.}, 
            Offset[{-1.102182119232618*^-15, -6.}, {5.0367807720320465`, 
             0.}]}]}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"2011\"\>", Offset[{0, -2}, {1.1951930080116533, 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"2012\"\>", Offset[{0, -2}, {2.1951930080116533, 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"2013\"\>", Offset[{0, -2}, {3.1951930080116533, 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"2014\"\>", Offset[{0, -2}, {4.195193008011653, 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Vivax Patients\"\>", 
          Offset[{0, -17}, {2.6951930080116533, 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"2011\"\>", Offset[{0, -2}, {5.487982520029133, 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"2012\"\>", Offset[{0, -2}, {6.487982520029133, 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"2013\"\>", Offset[{0, -2}, {7.487982520029133, 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"2014\"\>", Offset[{0, -2}, {8.487982520029133, 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Falciparum Patients\"\>", 
          Offset[{0, -17}, {6.987982520029133, 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}]}, 
        "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5800873998543336, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.86811099791628*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"c693615a-7b72-4240-98cd-5e8bd738d7dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"populationdata", "=", 
  RowBox[{"rulify", "[", 
   RowBox[{"{", 
    RowBox[{"42879.69", ",", "44185.5", ",", "45531.5", ",", "46917.8"}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8681110007291603`*^9, 3.868111000734078*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"c819bfe6-a5fc-4bbb-ae1d-d6e400d2503c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      RowBox[{
        StyleBox["\"Year: \"", "DateObjectLabel"], "\"2011\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", "2011", "}"}], ",", "\"Year\""}], "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "42879.69`"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{
        StyleBox["\"Year: \"", "DateObjectLabel"], "\"2012\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", "2012", "}"}], ",", "\"Year\""}], "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "44185.5`"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{
        StyleBox["\"Year: \"", "DateObjectLabel"], "\"2013\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", "2013", "}"}], ",", "\"Year\""}], "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "45531.5`"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{
        StyleBox["\"Year: \"", "DateObjectLabel"], "\"2014\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", "2014", "}"}], ",", "\"Year\""}], "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "46917.8`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.868111000929449*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"e397239a-95fe-422a-85b5-a88edb8d744d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"populationdata", ",", 
   RowBox[{"PlotMarkers", "->", "Automatic"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Population in study area\>\""}], ",", 
   RowBox[{"Frame", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<\>\"", ",", "\"\<Population In Thousands\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8681110026902943`*^9, 3.868111002695283*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"879d61bd-929c-4411-8162-8983d6b7c285"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      LineBox[{{3.5028288*^9, 42879.69}, {3.5343648*^9, 44185.5}, {
       3.5659872*^9, 45531.5}, {3.5975232*^9, 46917.8}}]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[6.272]], {{{
      3.5028288*^9, 42879.69}}, {{3.5343648*^9, 44185.5}}, {{3.5659872*^9, 
      45531.5}}, {{3.5975232*^9, 46917.8}}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.5028288*^9, 42655.350555555655`},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Population In Thousands\"", TraditionalForm], None}, {
     FormBox["\"\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.4712928*^9, 
        FormBox[
         StyleBox["\"2010\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         StyleBox["\"2011\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         StyleBox["\"2013\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         StyleBox["\"2015\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4763904*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4816608*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4869312*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.492288*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4975584*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5079264*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5131968*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5184672*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.523824*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5290944*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5395488*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5448192*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5500896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5554464*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5607168*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5710848*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5763552*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5816256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5869824*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5922528*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6026208*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6078912*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6131616*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6185184*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6237888*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.4712928*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
         Rational[1, 72], 0}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4763904*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4816608*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4869312*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.492288*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4975584*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5079264*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5131968*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5184672*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.523824*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5290944*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5395488*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5448192*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5500896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5554464*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5607168*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5710848*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5763552*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5816256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5869824*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5922528*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6026208*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6078912*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6131616*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6185184*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6237888*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Population in study area\"", TraditionalForm],
  PlotRange->{{3.5028288*^9, 3.5975232*^9}, {42655.350555555655`, 46917.8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.868111003060625*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"4ccf57a2-9252-4b97-8058-28aba0f8977a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "*Chart "}]], "Input",
 CellChangeTimes->{{3.8681110060996723`*^9, 3.8681110061046352`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"c53cec10-2c69-4c97-b924-da0081c15fae"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["System`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["System`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["BarChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "BarChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InteractiveTradingChart", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "InteractiveTradingChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RectangleChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "RectangleChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BoxWhiskerChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "BoxWhiskerChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["KagiChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "KagiChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RenkoChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "RenkoChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BubbleChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "BubbleChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LineBreakChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "LineBreakChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SectorChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "SectorChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CandlestickChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "CandlestickChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PairedBarChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "PairedBarChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TradingChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "TradingChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DistributionChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "DistributionChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PieChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "PieChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["GeoBubbleChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "GeoBubbleChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PointFigureChart", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-159ec453-88a0-47d7-bafa-1951f95e1b87", {
                   "PointFigureChart", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.31666666666666665`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.868111006478056*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"ab84d77e-d72c-4a4c-87de-cdb55d18383b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ageGroupKeys", "=", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"StringRiffle", "[", 
      RowBox[{"#", ",", "\"\<to\>\""}], "]"}], "&"}], "]"}], "@", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "65", ",", "5"}], "]"}], ",", "2", ",", "1"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8681110478092747`*^9, 3.868111047815243*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"5877ca12-33f1-4aea-8d26-3dd5a414cd87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"0to5\"\>", ",", "\<\"5to10\"\>", ",", "\<\"10to15\"\>", 
   ",", "\<\"15to20\"\>", ",", "\<\"20to25\"\>", ",", "\<\"25to30\"\>", 
   ",", "\<\"30to35\"\>", ",", "\<\"35to40\"\>", ",", "\<\"40to45\"\>", 
   ",", "\<\"45to50\"\>", ",", "\<\"50to55\"\>", ",", "\<\"55to60\"\>", 
   ",", "\<\"60to65\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.868111048068331*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"e1f2c67d-172b-429e-8e5e-681ee1f6af18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"femaleMalariaCases", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{"ageGroupKeys", "->", 
    RowBox[{"{", 
     RowBox[{
     "3", ",", "1", ",", "2", ",", "4", ",", "3", ",", "1", ",", "2", ",", 
      "3", ",", "2", ",", "2", ",", "3", ",", "2", ",", "3"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.868111050023079*^9, 3.8681110500286217`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"43482e20-8497-450f-b2fd-df71ece8a1a1"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"0to5\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"5to10\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"10to15\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"15to20\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"20to25\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"25to30\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"30to35\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"35to40\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"40to45\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"45to50\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"50to55\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"55to60\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"60to65\"\>", "\[Rule]", "3"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8681110502577868`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"7ba945ce-97dd-42d5-ac4c-22455a2c53d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maleMalariaCases", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{"ageGroupKeys", "->", 
    RowBox[{"{", 
     RowBox[{
     "2", ",", "2", ",", "1", ",", "1", ",", "3", ",", "2", ",", "4", ",", 
      "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.868111052065585*^9, 3.8681110520713*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"523338af-9c2b-4580-8b54-1a7913a94f18"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"0to5\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"5to10\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"10to15\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"15to20\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"20to25\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"25to30\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"30to35\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"35to40\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"40to45\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"45to50\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"50to55\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"55to60\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"60to65\"\>", "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.86811105236519*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"effbf94e-5b96-4e67-969f-9ea7202dc57d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"confirmedMalariaCases", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Male\>\"", "->", "femaleMalariaCases"}], ",", 
    RowBox[{"\"\<Female\>\"", "->", "maleMalariaCases"}]}], "|>"}]}]], "Input",\

 CellChangeTimes->{{3.8681110544484*^9, 3.868111054455008*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"8a7dc86e-fb0c-4b1b-a693-fd4dd9e9a606"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Male\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"0to5\"\>", "\[Rule]", "3"}], ",", 
      RowBox[{"\<\"5to10\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"10to15\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"15to20\"\>", "\[Rule]", "4"}], ",", 
      RowBox[{"\<\"20to25\"\>", "\[Rule]", "3"}], ",", 
      RowBox[{"\<\"25to30\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"30to35\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"35to40\"\>", "\[Rule]", "3"}], ",", 
      RowBox[{"\<\"40to45\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"45to50\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"50to55\"\>", "\[Rule]", "3"}], ",", 
      RowBox[{"\<\"55to60\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"60to65\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}]}],
    ",", 
   RowBox[{"\<\"Female\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"0to5\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"5to10\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"10to15\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"15to20\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"20to25\"\>", "\[Rule]", "3"}], ",", 
      RowBox[{"\<\"25to30\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"30to35\"\>", "\[Rule]", "4"}], ",", 
      RowBox[{"\<\"35to40\"\>", "\[Rule]", "4"}], ",", 
      RowBox[{"\<\"40to45\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"45to50\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"50to55\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"55to60\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"60to65\"\>", "\[Rule]", "1"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8681110546723633`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"058a2a6f-491d-4465-a171-7e11327d81f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PairedBarChart", "[", 
  RowBox[{"(*", 
   RowBox[{"Data", " ", "to", " ", "compare"}], "*)"}], 
  RowBox[{
   RowBox[{"confirmedMalariaCases", "[", "\"\<Male\>\"", "]"}], ",", 
   RowBox[{"confirmedMalariaCases", "[", "\"\<Female\>\"", "]"}], ",", 
   RowBox[{"(*", 
    RowBox[{"Styling", " ", "Options"}], "*)"}], 
   RowBox[{"ChartStyle", "->", "\"\<Pastel\>\""}], ",", 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Male\>\"", ",", "\"\<Female\>\""}], "}"}], ",", "None", 
      ",", "ageGroupKeys"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", "\"\<Malaria Cases for Various Age Groups\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8681110568185863`*^9, 3.868111056824458*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"93a4a58b-40b4-4bba-9efe-f3571427e185"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
    Thickness[Small]}], {}, {{{}, {{}, {{{}, {}}, {
         {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.518], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {-3.3, 0.5344506517690875}], 
                 Offset[{0, 0}, {-0.3, 1.4655493482309123`}], 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{53.30182724252492, 168.3001661129568}, {
                86.80991103837967, 102.05695565650348`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.805717, 0.5760525, 0.952213], EdgeForm[{Opacity[0.518], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {-1.3, 1.5344506517690872`}], 
                 Offset[{0, 0}, {-0.3, 2.4655493482309123`}], 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{129.63405315614617`, 168.3001661129568}, {
                70.9715851185147, 86.21862973663852}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[
          0.8570441666666667, 0.6373188333333333, 0.8020406666666666], 
          EdgeForm[{Opacity[0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {-2.3, 2.5344506517690872`}], 
                 Offset[{0, 0}, {-0.3, 3.4655493482309123`}], 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{91.46794019933554, 168.3001661129568}, {
                55.133259198649725`, 70.38030381677353}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.898695, 0.686452, 0.6785475], EdgeForm[{Opacity[0.518], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {-4.3, 3.5344506517690872`}], 
                 Offset[{0, 0}, {-0.3, 4.465549348230912}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{15.1357142857143, 168.3001661129568}, {
                39.294933278784754`, 54.54197789690856}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 4]& ,
             TagBoxNote->"4"],
            StyleBox["4", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[4, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.927848, 0.742785, 0.6151383333333333], EdgeForm[{Opacity[
          0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {-3.3, 4.534450651769087}], 
                 Offset[{0, 0}, {-0.3, 5.465549348230912}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{53.30182724252492, 168.3001661129568}, {
                23.456607358919783`, 38.70365197704359}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.9473235833333333, 0.8098448333333333, 0.5921115], 
          EdgeForm[{Opacity[0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {-1.3, 5.534450651769087}], 
                 Offset[{0, 0}, {-0.3, 6.465549348230912}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{129.63405315614617`, 168.3001661129568}, {
                7.618281439054812, 22.865326057178606`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.9584254999999999, 0.877884, 0.5906629999999999], 
          EdgeForm[{Opacity[0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {-2.3, 6.534450651769087}], 
                 Offset[{0, 0}, {-0.3, 7.465549348230912}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{91.46794019933554, 
                168.3001661129568}, {-8.220044480810174, 7.027000137313635}}],
              
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[
          0.9563561666666667, 0.9300969166666667, 0.6107715833333334], 
          EdgeForm[{Opacity[0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {-3.3, 7.534450651769087}], 
                 Offset[{0, 0}, {-0.3, 8.465549348230912}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{53.30182724252492, 
                168.3001661129568}, {-24.05837040067513, -8.811325782551336}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.929162, 0.95034, 0.6648153333333333], EdgeForm[{Opacity[
          0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {-2.3, 8.534450651769086}], 
                 Offset[{0, 0}, {-0.3, 9.465549348230912}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{91.46794019933554, 
                168.3001661129568}, {-39.896696320540116`, \
-24.649651702416293`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.86116075, 0.930182, 0.758764], EdgeForm[{Opacity[0.518], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {-2.3, 9.534450651769086}], 
                 Offset[{0, 0}, {-0.3, 10.465549348230912`}], 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{91.46794019933554, 
                168.3001661129568}, {-55.7350222404051, -40.48797762228128}}],
              
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.7418018333333334, 0.8731135, 0.8727881666666666], 
          EdgeForm[{Opacity[0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {-3.3, 10.534450651769086`}], 
                 Offset[{0, 0}, {-0.3, 11.465549348230912`}], 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{53.30182724252492, 
                168.3001661129568}, {-71.57334816027006, \
-56.326303542146235`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.5809143333333334, 0.7937378333333334, 0.9531305], 
          EdgeForm[{Opacity[0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {-2.3, 11.534450651769086`}], 
                 Offset[{0, 0}, {-0.3, 12.465549348230912`}], 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{91.46794019933554, 
                168.3001661129568}, {-87.41167408013504, -72.16462946201122}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[0.518], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {-3.3, 12.534450651769086`}], 
                 Offset[{0, 0}, {-0.3, 13.465549348230912`}], 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{53.30182724252492, 
                
                168.3001661129568}, {-103.25000000000003`, \
-88.0029553818762}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {
              Directive[]}], 
            "Tooltip"]& ]}}}, {}, {}}, {}, {}}, {{}, {{}, {{{}, {}}, {
         {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.518], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {0.3, 0.5344506517690875}], 
                 Offset[{0, 0}, {2.3, 1.4655493482309123`}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{190.69983388704316`, 267.5320598006644}, {
                86.80991103837967, 102.05695565650348`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.805717, 0.5760525, 0.952213], EdgeForm[{Opacity[0.518], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {0.3, 1.5344506517690872`}], 
                 Offset[{0, 0}, {2.3, 2.4655493482309123`}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{190.69983388704316`, 267.5320598006644}, {
                70.9715851185147, 86.21862973663852}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[
          0.8570441666666667, 0.6373188333333333, 0.8020406666666666], 
          EdgeForm[{Opacity[0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {0.3, 2.5344506517690872`}], 
                 Offset[{0, 0}, {1.3, 3.4655493482309123`}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{190.69983388704316`, 229.36594684385378`}, {
                55.133259198649725`, 70.38030381677353}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.898695, 0.686452, 0.6785475], EdgeForm[{Opacity[0.518], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {0.3, 3.5344506517690872`}], 
                 Offset[{0, 0}, {1.3, 4.465549348230912}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{190.69983388704316`, 229.36594684385378`}, {
                39.294933278784754`, 54.54197789690856}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.927848, 0.742785, 0.6151383333333333], EdgeForm[{Opacity[
          0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {0.3, 4.534450651769087}], 
                 Offset[{0, 0}, {3.3, 5.465549348230912}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{190.69983388704316`, 305.69817275747505`}, {
                23.456607358919783`, 38.70365197704359}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.9473235833333333, 0.8098448333333333, 0.5921115], 
          EdgeForm[{Opacity[0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {0.3, 5.534450651769087}], 
                 Offset[{0, 0}, {2.3, 6.465549348230912}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{190.69983388704316`, 267.5320598006644}, {
                7.618281439054812, 22.865326057178606`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.9584254999999999, 0.877884, 0.5906629999999999], 
          EdgeForm[{Opacity[0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {0.3, 6.534450651769087}], 
                 Offset[{0, 0}, {4.3, 7.465549348230912}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{190.69983388704316`, 
                343.86428571428564`}, {-8.220044480810174, 
                7.027000137313635}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 4]& ,
             TagBoxNote->"4"],
            StyleBox["4", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[4, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[
          0.9563561666666667, 0.9300969166666667, 0.6107715833333334], 
          EdgeForm[{Opacity[0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {0.3, 7.534450651769087}], 
                 Offset[{0, 0}, {4.3, 8.465549348230912}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{190.69983388704316`, 
                343.86428571428564`}, {-24.05837040067513, \
-8.811325782551336}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 4]& ,
             TagBoxNote->"4"],
            StyleBox["4", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[4, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.929162, 0.95034, 0.6648153333333333], EdgeForm[{Opacity[
          0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {0.3, 8.534450651769086}], 
                 Offset[{0, 0}, {1.3, 9.465549348230912}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{190.69983388704316`, 
                229.36594684385378`}, {-39.896696320540116`, \
-24.649651702416293`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.86116075, 0.930182, 0.758764], EdgeForm[{Opacity[0.518], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {0.3, 9.534450651769086}], 
                 Offset[{0, 0}, {1.3, 10.465549348230912`}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{190.69983388704316`, 
                229.36594684385378`}, {-55.7350222404051, \
-40.48797762228128}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.7418018333333334, 0.8731135, 0.8727881666666666], 
          EdgeForm[{Opacity[0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {0.3, 10.534450651769086`}], 
                 Offset[{0, 0}, {1.3, 11.465549348230912`}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{190.69983388704316`, 
                229.36594684385378`}, {-71.57334816027006, \
-56.326303542146235`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.5809143333333334, 0.7937378333333334, 0.9531305], 
          EdgeForm[{Opacity[0.518], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {0.3, 11.534450651769086`}], 
                 Offset[{0, 0}, {1.3, 12.465549348230912`}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{190.69983388704316`, 
                229.36594684385378`}, {-87.41167408013504, \
-72.16462946201122}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              Directive[]}], "Tooltip"]& ]}, 
         {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[0.518], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[
                 Offset[{0, 0}, {0.3, 12.534450651769086`}], 
                 Offset[{0, 0}, {1.3, 13.465549348230912`}], "RoundingRadius" -> 
                 0]},
               
               ImageSizeCache->{{190.69983388704316`, 
                229.36594684385378`}, {-103.25000000000003`, \
-88.0029553818762}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              Directive[]}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              Directive[]}], 
            "Tooltip"]& ]}}}, {}, {}}, {}, {}}}, {}, {}}, {{{{{{{{{{{}, {}}, \
{}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, 
       InsetBox["\<\"Male\"\>", Offset[{0, 4}, {-2.3, 13.465549348230912}], 
        ImageScaled[{0.5, 0}]]}, {}}, {{{{{{{{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, \
{}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, 
       InsetBox["\<\"Female\"\>", Offset[{0, 4}, {2.3, 13.465549348230912}], 
        ImageScaled[{0.5, 0}]]}, {}}}, {}}, {}, {
    TagBox[{
      StyleBox[{
        LineBox[{
         Offset[{0, 0}, {-0.3, 0.017206703910614518`}], 
          Offset[{0, 0}, {-4.515, 0.017206703910614518`}]}], 
        StyleBox[{{
           LineBox[{{
             Offset[{0, 0}, {-0.3, 0.017206703910614518`}], 
              Offset[{0, -4.}, {-0.3, 0.017206703910614518`}]}, {
             Offset[{0, 0}, {-2.3, 0.017206703910614518`}], 
              Offset[{0, -4.}, {-2.3, 0.017206703910614518`}]}, {
             Offset[{0, 0}, {-4.3, 0.017206703910614518`}], 
              Offset[{0, -4.}, {-4.3, 0.017206703910614518`}]}}], 
           LineBox[{{
             Offset[{0, 0}, {-0.8, 0.017206703910614518`}], 
              Offset[{0., -2.5}, {-0.8, 0.017206703910614518`}]}, {
             Offset[{0, 0}, {-1.3, 0.017206703910614518`}], 
              Offset[{0., -2.5}, {-1.3, 0.017206703910614518`}]}, {
             Offset[{0, 0}, {-1.7999999999999998`, 0.017206703910614518`}], 
              Offset[{0., -2.5}, {-1.7999999999999998`, 
               0.017206703910614518`}]}, {
             Offset[{0, 0}, {-2.8, 0.017206703910614518`}], 
              Offset[{0., -2.5}, {-2.8, 0.017206703910614518`}]}, {
             Offset[{0, 0}, {-3.2999999999999994`, 0.017206703910614518`}], 
              Offset[{0., -2.5}, {-3.2999999999999994`, 
               0.017206703910614518`}]}, {
             Offset[{0, 0}, {-3.7999999999999994`, 0.017206703910614518`}], 
              Offset[{0., -2.5}, {-3.7999999999999994`, 
               0.017206703910614518`}]}}]}, 
          
          StyleBox[{{{
              InsetBox["0", Offset[{0., -7.}, {-0.3, 0.017206703910614518}], 
               ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
              InsetBox["2", Offset[{0., -7.}, {-2.3, 0.017206703910614518}], 
               ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
              InsetBox["4", Offset[{0., -7.}, {-4.3, 0.017206703910614518}], 
               ImageScaled[{0.5, 1.}], Automatic, {1, 
               0}]}, {{}, {}, {}, {}, {}, {}}}, {}}, "GraphicsLabel",
           StripOnInput->False]}, "GraphicsTicks",
         StripOnInput->False]}, "GraphicsAxes",
       StripOnInput->False,
       Antialiasing->False], 
      StyleBox[{
        LineBox[{
         Offset[{0, 0}, {0.3, 0.017206703910614518`}], 
          Offset[{0, 0}, {4.515, 0.017206703910614518`}]}], 
        StyleBox[{{
           LineBox[{{
             Offset[{0, 0}, {0.3, 0.017206703910614518`}], 
              Offset[{0, -4.}, {0.3, 0.017206703910614518`}]}, {
             Offset[{0, 0}, {2.3, 0.017206703910614518`}], 
              Offset[{0, -4.}, {2.3, 0.017206703910614518`}]}, {
             Offset[{0, 0}, {4.3, 0.017206703910614518`}], 
              Offset[{0, -4.}, {4.3, 0.017206703910614518`}]}}], 
           LineBox[{{
             Offset[{0, 0}, {0.8, 0.017206703910614518`}], 
              Offset[{0., -2.5}, {0.8, 0.017206703910614518`}]}, {
             Offset[{0, 0}, {1.3, 0.017206703910614518`}], 
              Offset[{0., -2.5}, {1.3, 0.017206703910614518`}]}, {
             Offset[{0, 0}, {1.7999999999999998`, 0.017206703910614518`}], 
              Offset[{0., -2.5}, {1.7999999999999998`, 
               0.017206703910614518`}]}, {
             Offset[{0, 0}, {2.8, 0.017206703910614518`}], 
              Offset[{0., -2.5}, {2.8, 0.017206703910614518`}]}, {
             Offset[{0, 0}, {3.2999999999999994`, 0.017206703910614518`}], 
              Offset[{0., -2.5}, {3.2999999999999994`, 
               0.017206703910614518`}]}, {
             Offset[{0, 0}, {3.7999999999999994`, 0.017206703910614518`}], 
              Offset[{0., -2.5}, {3.7999999999999994`, 
               0.017206703910614518`}]}}]}, 
          
          StyleBox[{{{
              InsetBox["0", Offset[{0., -7.}, {0.3, 0.017206703910614518}], 
               ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
              InsetBox["2", Offset[{0., -7.}, {2.3, 0.017206703910614518}], 
               ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
              InsetBox["4", Offset[{0., -7.}, {4.3, 0.017206703910614518}], 
               ImageScaled[{0.5, 1.}], Automatic, {1, 
               0}]}, {{}, {}, {}, {}, {}, {}}}, {}}, "GraphicsLabel",
           StripOnInput->False]}, "GraphicsTicks",
         StripOnInput->False]}, "GraphicsAxes",
       StripOnInput->False,
       Antialiasing->False], {}},
     Deploy,
     DefaultBaseStyle->"Deploy"], {{GraphicsGroupBox[
       StyleBox[{{
          LineBox[{
           Offset[{0, 0}, {-0.3, 0.017206703910614518`}], 
            Offset[{0, 0}, {-0.3, 13.465549348230914`}]}], 
          StyleBox[{}, "GraphicsLabel",
           StripOnInput->False]}, 
         StyleBox[{{
            LineBox[{
             Offset[{0, 0}, {-0.3, 0.5344506517690875}], 
              Offset[{3., 0.}, {-0.3, 0.5344506517690875}]}], 
            LineBox[{
             Offset[{0, 0}, {-0.3, 13.465549348230914`}], 
              Offset[{3., 0.}, {-0.3, 
               13.465549348230914`}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {
              LineBox[{
               Offset[{0, 0}, {-0.3, 1.4655493482309123`}], 
                Offset[{1., 0.}, {-0.3, 1.4655493482309123`}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 1.5344506517690875`}], 
                Offset[{1., 0.}, {-0.3, 1.5344506517690875`}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 2.4655493482309128`}], 
                Offset[{1., 0.}, {-0.3, 2.4655493482309128`}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 2.5344506517690872`}], 
                Offset[{1., 0.}, {-0.3, 2.5344506517690872`}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 3.4655493482309128`}], 
                Offset[{1., 0.}, {-0.3, 3.4655493482309128`}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 3.5344506517690872`}], 
                Offset[{1., 0.}, {-0.3, 3.5344506517690872`}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 4.465549348230913}], 
                Offset[{1., 0.}, {-0.3, 4.465549348230913}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 4.534450651769087}], 
                Offset[{1., 0.}, {-0.3, 4.534450651769087}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 5.465549348230912}], 
                Offset[{1., 0.}, {-0.3, 5.465549348230912}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 5.534450651769087}], 
                Offset[{1., 0.}, {-0.3, 5.534450651769087}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 6.465549348230912}], 
                Offset[{1., 0.}, {-0.3, 6.465549348230912}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 6.534450651769087}], 
                Offset[{1., 0.}, {-0.3, 6.534450651769087}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 7.465549348230912}], 
                Offset[{1., 0.}, {-0.3, 7.465549348230912}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 7.534450651769087}], 
                Offset[{1., 0.}, {-0.3, 7.534450651769087}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 8.465549348230912}], 
                Offset[{1., 0.}, {-0.3, 8.465549348230912}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 8.534450651769088}], 
                Offset[{1., 0.}, {-0.3, 8.534450651769088}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 9.465549348230914}], 
                Offset[{1., 0.}, {-0.3, 9.465549348230914}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 9.534450651769088}], 
                Offset[{1., 0.}, {-0.3, 9.534450651769088}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 10.465549348230914`}], 
                Offset[{1., 0.}, {-0.3, 10.465549348230914`}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 10.534450651769088`}], 
                Offset[{1., 0.}, {-0.3, 10.534450651769088`}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 11.465549348230914`}], 
                Offset[{1., 0.}, {-0.3, 11.465549348230914`}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 11.534450651769088`}], 
                Offset[{1., 0.}, {-0.3, 11.534450651769088`}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 12.465549348230914`}], 
                Offset[{1., 0.}, {-0.3, 12.465549348230914`}]}], 
              LineBox[{
               Offset[{0, 0}, {-0.3, 12.534450651769088`}], 
                Offset[{1., 0.}, {-0.3, 12.534450651769088`}]}]}, {}}}, 
           StyleBox[{}, "GraphicsLabel",
            StripOnInput->False]}, "GraphicsTicks",
          StripOnInput->False]}, "GraphicsAxes",
        StripOnInput->False,
        Antialiasing->False]], GraphicsGroupBox[
       StyleBox[{{
          LineBox[{
           Offset[{0, 0}, {0.3, 0.017206703910614518`}], 
            Offset[{0, 0}, {0.3, 13.465549348230914`}]}], 
          StyleBox[{}, "GraphicsLabel",
           StripOnInput->False]}, 
         StyleBox[{{
            LineBox[{
             Offset[{0, 0}, {0.3, 0.5344506517690875}], 
              Offset[{-3., 0.}, {0.3, 0.5344506517690875}]}], 
            LineBox[{
             Offset[{0, 0}, {0.3, 13.465549348230914`}], 
              Offset[{-3., 0.}, {0.3, 
               13.465549348230914`}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {
              LineBox[{
               Offset[{0, 0}, {0.3, 1.4655493482309123`}], 
                Offset[{-1., 0.}, {0.3, 1.4655493482309123`}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 1.5344506517690875`}], 
                Offset[{-1., 0.}, {0.3, 1.5344506517690875`}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 2.4655493482309128`}], 
                Offset[{-1., 0.}, {0.3, 2.4655493482309128`}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 2.5344506517690872`}], 
                Offset[{-1., 0.}, {0.3, 2.5344506517690872`}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 3.4655493482309128`}], 
                Offset[{-1., 0.}, {0.3, 3.4655493482309128`}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 3.5344506517690872`}], 
                Offset[{-1., 0.}, {0.3, 3.5344506517690872`}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 4.465549348230913}], 
                Offset[{-1., 0.}, {0.3, 4.465549348230913}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 4.534450651769087}], 
                Offset[{-1., 0.}, {0.3, 4.534450651769087}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 5.465549348230912}], 
                Offset[{-1., 0.}, {0.3, 5.465549348230912}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 5.534450651769087}], 
                Offset[{-1., 0.}, {0.3, 5.534450651769087}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 6.465549348230912}], 
                Offset[{-1., 0.}, {0.3, 6.465549348230912}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 6.534450651769087}], 
                Offset[{-1., 0.}, {0.3, 6.534450651769087}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 7.465549348230912}], 
                Offset[{-1., 0.}, {0.3, 7.465549348230912}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 7.534450651769087}], 
                Offset[{-1., 0.}, {0.3, 7.534450651769087}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 8.465549348230912}], 
                Offset[{-1., 0.}, {0.3, 8.465549348230912}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 8.534450651769088}], 
                Offset[{-1., 0.}, {0.3, 8.534450651769088}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 9.465549348230914}], 
                Offset[{-1., 0.}, {0.3, 9.465549348230914}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 9.534450651769088}], 
                Offset[{-1., 0.}, {0.3, 9.534450651769088}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 10.465549348230914`}], 
                Offset[{-1., 0.}, {0.3, 10.465549348230914`}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 10.534450651769088`}], 
                Offset[{-1., 0.}, {0.3, 10.534450651769088`}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 11.465549348230914`}], 
                Offset[{-1., 0.}, {0.3, 11.465549348230914`}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 11.534450651769088`}], 
                Offset[{-1., 0.}, {0.3, 11.534450651769088`}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 12.465549348230914`}], 
                Offset[{-1., 0.}, {0.3, 12.465549348230914`}]}], 
              LineBox[{
               Offset[{0, 0}, {0.3, 12.534450651769088`}], 
                Offset[{-1., 0.}, {0.3, 12.534450651769088`}]}]}, {}}}, 
           StyleBox[{}, "GraphicsLabel",
            StripOnInput->False]}, "GraphicsTicks",
          StripOnInput->False]}, "GraphicsAxes",
        StripOnInput->False,
        Antialiasing->False]]}, 
     StyleBox[{
       InsetBox["\<\"0to5\"\>", {0, 1.}, 
        ImageScaled[{Rational[1, 2], Rational[1, 2]}], Automatic, {1, 0}], 
       InsetBox["\<\"5to10\"\>", {0, 2.}, 
        ImageScaled[{Rational[1, 2], Rational[1, 2]}], Automatic, {1, 0}], 
       InsetBox["\<\"10to15\"\>", {0, 3.}, 
        ImageScaled[{Rational[1, 2], Rational[1, 2]}], Automatic, {1, 0}], 
       InsetBox["\<\"15to20\"\>", {0, 4.}, 
        ImageScaled[{Rational[1, 2], Rational[1, 2]}], Automatic, {1, 0}], 
       InsetBox["\<\"20to25\"\>", {0, 4.999999999999999}, 
        ImageScaled[{Rational[1, 2], Rational[1, 2]}], Automatic, {1, 0}], 
       InsetBox["\<\"25to30\"\>", {0, 5.999999999999999}, 
        ImageScaled[{Rational[1, 2], Rational[1, 2]}], Automatic, {1, 0}], 
       InsetBox["\<\"30to35\"\>", {0, 6.999999999999999}, 
        ImageScaled[{Rational[1, 2], Rational[1, 2]}], Automatic, {1, 0}], 
       InsetBox["\<\"35to40\"\>", {0, 7.999999999999999}, 
        ImageScaled[{Rational[1, 2], Rational[1, 2]}], Automatic, {1, 0}], 
       InsetBox["\<\"40to45\"\>", {0, 9.}, 
        ImageScaled[{Rational[1, 2], Rational[1, 2]}], Automatic, {1, 0}], 
       InsetBox["\<\"45to50\"\>", {0, 10.}, 
        ImageScaled[{Rational[1, 2], Rational[1, 2]}], Automatic, {1, 0}], 
       InsetBox["\<\"50to55\"\>", {0, 11.}, 
        ImageScaled[{Rational[1, 2], Rational[1, 2]}], Automatic, {1, 0}], 
       InsetBox["\<\"55to60\"\>", {0, 12.}, 
        ImageScaled[{Rational[1, 2], Rational[1, 2]}], Automatic, {1, 0}], 
       InsetBox["\<\"60to65\"\>", {0, 13.}, 
        ImageScaled[{Rational[1, 2], Rational[1, 2]}], Automatic, {1, 0}]}, 
      "GraphicsLabel",
      StripOnInput->False], {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Null, Null}, {{{-0.3, 
       FormBox["0", TraditionalForm], {0.01, 0.}}, {-1.3, 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {-2.3, 
       FormBox["2", TraditionalForm], {0.01, 0.}}, {-3.3, 
       FormBox["3", TraditionalForm], {0.01, 0.}}, {-4.3, 
       FormBox["4", TraditionalForm], {0.01, 0.}}, {-0.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-0.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.8999999999999999, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-1.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-1.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-1.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.9000000000000001`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-2.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-2.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.6999999999999997`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-2.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.0999999999999996`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-3.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.6999999999999997`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-3.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-4.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-4.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-4.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.8999999999999995`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-5.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {-5.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.3, 
       FormBox["0", TraditionalForm], {0.01, 0.}}, {1.3, 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {2.3, 
       FormBox["2", TraditionalForm], {0.01, 0.}}, {3.3, 
       FormBox["3", TraditionalForm], {0.01, 0.}}, {4.3, 
       FormBox["4", TraditionalForm], {0.01, 0.}}, {0.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.8999999999999999, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9000000000000001`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.6999999999999997`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.0999999999999996`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6999999999999997`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.8999999999999995`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}, {{-0.3, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}}, {-1.3, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}}, {-2.3, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}}, {-3.3, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}}, {-4.3, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}}, {-0.5, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-0.7, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-0.8999999999999999, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-1.1, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-1.5, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-1.7, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-1.9000000000000001`, 
       
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-2.1, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-2.5, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-2.6999999999999997`, 
       
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-2.9, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-3.0999999999999996`, 
       
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-3.5, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-3.6999999999999997`, 
       
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-3.9, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-4.1, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-4.5, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-4.7, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-4.8999999999999995`, 
       
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-5.1, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-5.3, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {0.3, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}}, {1.3, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}}, {2.3, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}}, {3.3, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}}, {4.3, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}}, {0.5, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {0.7, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {0.8999999999999999, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {1.1, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {1.5, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {1.7, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {1.9000000000000001`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {2.1, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {2.5, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {2.6999999999999997`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {2.9, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {3.0999999999999996`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {3.5, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {3.6999999999999997`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {3.9, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {4.1, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {4.5, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {4.7, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {4.8999999999999995`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {5.1, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {5.3, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox[
   "\"Malaria Cases for Various Age Groups\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->Scaled[0.02]]], "Output",
 CellChangeTimes->{3.8681110573586073`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"f28ece34-07d9-4c73-8310-282e44a5d3f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"malariaPatientOccupations", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Labor\>\"", "->", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<NumberOfHouses\>\"", "->", "40"}], ",", 
       RowBox[{"\"\<NumberOfPatients\>\"", "->", "100"}]}], "|>"}]}], ",", 
    RowBox[{"\"\<Agricultural\>\"", "->", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<NumberOfHouses\>\"", "->", "18"}], ",", 
       RowBox[{"\"\<NumberOfPatients\>\"", "->", "70"}]}], "|>"}]}], ",", 
    RowBox[{"\"\<Business\>\"", "->", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<NumberOfHouses\>\"", "->", "14"}], ",", 
       RowBox[{"\"\<NumberOfPatients\>\"", "->", "30"}]}], "|>"}]}], ",", 
    RowBox[{"\"\<Jobholders\>\"", "->", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<NumberOfHouses\>\"", "->", "11"}], ",", 
       RowBox[{"\"\<NumberOfPatients\>\"", "->", "20"}]}], "|>"}]}], ",", 
    RowBox[{"\"\<Other\>\"", "->", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<NumberOfHouses\>\"", "->", "7"}], ",", 
       RowBox[{"\"\<NumberOfPatients\>\"", "->", "30"}]}], "|>"}]}]}], 
   "|>"}]}]], "Input",
 CellChangeTimes->{{3.868111060659411*^9, 3.868111060664095*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"63084c81-0a30-451b-9db2-8e4d9d45e96e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Labor\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"NumberOfHouses\"\>", "\[Rule]", "40"}], ",", 
      RowBox[{"\<\"NumberOfPatients\"\>", "\[Rule]", "100"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Agricultural\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"NumberOfHouses\"\>", "\[Rule]", "18"}], ",", 
      RowBox[{"\<\"NumberOfPatients\"\>", "\[Rule]", "70"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Business\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"NumberOfHouses\"\>", "\[Rule]", "14"}], ",", 
      RowBox[{"\<\"NumberOfPatients\"\>", "\[Rule]", "30"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Jobholders\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"NumberOfHouses\"\>", "\[Rule]", "11"}], ",", 
      RowBox[{"\<\"NumberOfPatients\"\>", "\[Rule]", "20"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Other\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"NumberOfHouses\"\>", "\[Rule]", "7"}], ",", 
      RowBox[{"\<\"NumberOfPatients\"\>", "\[Rule]", "30"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.868111060920347*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"c8228a9a-ceac-4530-b0da-8e36dc4d9aa3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"malariaPatientOccupations", ",", 
   RowBox[{"(*", "Options", "*)"}], 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Labor\>\"", ",", "\"\<Agricultural\>\"", ",", "\"\<Business\>\"", 
        ",", "\"\<Jobholders\>\"", ",", "\"\<Other\>\""}], "}"}], ",", 
      "None"}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Number of Houses\>\"", ",", "\"\<Number of Malaria Patients\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Frame", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\>\"", ",", "\"\<% of malaria cases and number of houses\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.868111063154078*^9, 3.868111063159165*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"4ca3f15d-8d2b-4823-9243-9be770888bc1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.5465859564164649, 0.}, {11.96004842615012, 
       0.}}]}, {{}, {{{}, {{}, {{
           RGBColor[0.982864, 0.7431472, 0.3262672], 
           EdgeForm[{
             Opacity[0.63], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{0.7703793381759484, 0.}, {1.6622276029055691`, 
                  40.}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{51.154117647058825`, 75.62122670649333}, {
                 3.676352831466673, 79.2118594055914}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 40]& , TagBoxNote -> 
              "40"], 
             StyleBox["40", {}, StripOnInput -> False]], Annotation[#, 
             Style[40, {}], "Tooltip"]& ]}, {
           RGBColor[0.4992, 0.5552, 0.8309304], 
           EdgeForm[{
             Opacity[0.63], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{1.7703793381759485`, 0.}, {2.662227602905569, 
                  100.}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{78.02764536166458, 
                 102.49475442109909`}, {-108.87690702972039`, 
                 79.2118594055914}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 100]& , TagBoxNote -> "100"], 
             StyleBox["100", {}, StripOnInput -> False]], Annotation[#, 
             Style[100, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           RGBColor[0.982864, 0.7431472, 0.3262672], 
           EdgeForm[{
             Opacity[0.63], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{3.0948345439870866`, 0.}, {3.986682808716707, 
                  18.}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{113.62042904178406`, 
                 138.08753810121857`}, {44.94588144723527, 
                 79.2118594055914}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 18]& , TagBoxNote -> "18"], 
             StyleBox["18", {}, StripOnInput -> False]], Annotation[#, 
             Style[18, {}], "Tooltip"]& ]}, {
           RGBColor[0.4992, 0.5552, 0.8309304], 
           EdgeForm[{
             Opacity[0.63], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{4.094834543987086, 0.}, {4.986682808716707, 
                  70.}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{140.4939567563898, 
                 164.96106581582433`}, {-52.60027709912687, 
                 79.2118594055914}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 70]& , TagBoxNote -> "70"], 
             StyleBox["70", {}, StripOnInput -> False]], Annotation[#, 
             Style[70, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           RGBColor[0.982864, 0.7431472, 0.3262672], 
           EdgeForm[{
             Opacity[0.63], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{5.419289749798224, 0.}, {6.311138014527845, 
                  14.}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{176.0867404365093, 200.5538494959438}, {
                 52.44943210464775, 79.2118594055914}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 14]& , TagBoxNote -> 
              "14"], 
             StyleBox["14", {}, StripOnInput -> False]], Annotation[#, 
             Style[14, {}], "Tooltip"]& ]}, {
           RGBColor[0.4992, 0.5552, 0.8309304], 
           EdgeForm[{
             Opacity[0.63], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{6.419289749798224, 0.}, {7.311138014527845, 
                  30.}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{202.96026815111503`, 
                 227.42737721054957`}, {22.43522947499786, 
                 79.2118594055914}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 30]& , TagBoxNote -> "30"], 
             StyleBox["30", {}, StripOnInput -> False]], Annotation[#, 
             Style[30, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           RGBColor[0.982864, 0.7431472, 0.3262672], 
           EdgeForm[{
             Opacity[0.63], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{7.743744955609363, 0.}, {8.635593220338983, 
                  11.}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{238.55305183123454`, 263.020160890669}, {
                 58.0770950977071, 79.2118594055914}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 11]& , TagBoxNote -> 
              "11"], 
             StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
             Style[11, {}], "Tooltip"]& ]}, {
           RGBColor[0.4992, 0.5552, 0.8309304], 
           EdgeForm[{
             Opacity[0.63], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{8.743744955609362, 0.}, {9.635593220338983, 
                  20.}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{265.42657954584024`, 
                 289.89368860527475`}, {41.194106118529035`, 
                 79.2118594055914}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 20]& , TagBoxNote -> "20"], 
             StyleBox["20", {}, StripOnInput -> False]], Annotation[#, 
             Style[20, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           RGBColor[0.982864, 0.7431472, 0.3262672], 
           EdgeForm[{
             Opacity[0.63], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{10.0682001614205, 0.}, {10.96004842615012, 7.},
                   "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{301.0193632259597, 325.48647228539426`}, {
                 65.58064575511958, 79.2118594055914}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 7]& , TagBoxNote -> 
              "7"], 
             StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
             Style[7, {}], "Tooltip"]& ]}, {
           RGBColor[0.4992, 0.5552, 0.8309304], 
           EdgeForm[{
             Opacity[0.63], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{11.0682001614205, 0.}, {11.96004842615012, 
                  30.}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{327.89289094056545`, 
                 352.35999999999996`}, {22.43522947499786, 
                 79.2118594055914}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 30]& , TagBoxNote -> "30"], 
             StyleBox["30", {}, StripOnInput -> False]], Annotation[#, 
             Style[30, {}], 
             "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {False, False}, AxesLabel -> {None, None}, 
    AxesOrigin -> {0.5465859564164649, 0.}, 
    CoordinatesToolOptions :> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}, DisplayFunction -> Identity, 
    Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
       FormBox[
       "\"% of malaria cases and number of houses\"", TraditionalForm], 
       None}, {
       FormBox["\"\"", TraditionalForm], None}}, 
    FrameTicks -> {{Automatic, Automatic}, {{{1.2163034705407587`, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        2.2163034705407587`, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        2.878531073446328, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
        1.7163034705407587`, 
         FormBox["\"Labor\"", TraditionalForm], {0, 0}}, {3.5407586763518966`, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        4.540758676351897, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        5.202986279257466, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
        4.040758676351897, 
         FormBox["\"Agricultural\"", TraditionalForm], {0, 0}}, {
        5.865213882163035, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        6.865213882163035, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        7.5274414850686036`, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
        6.365213882163035, 
         FormBox["\"Business\"", TraditionalForm], {0, 0}}, {
        8.189669087974172, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        9.189669087974172, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        9.851896690879741, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
        8.689669087974172, 
         FormBox["\"Jobholders\"", TraditionalForm], {0, 0}}, {
        10.51412429378531, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        11.51412429378531, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        11.01412429378531, 
         FormBox["\"Other\"", TraditionalForm], {0, 0}}}, {{
        1.2163034705407587`, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        2.2163034705407587`, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        2.878531073446328, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
        3.5407586763518966`, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        4.540758676351897, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        5.202986279257466, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
        5.865213882163035, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        6.865213882163035, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        7.5274414850686036`, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
        8.189669087974172, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        9.189669087974172, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        9.851896690879741, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
        10.51412429378531, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
        11.51412429378531, 
         FormBox[
          TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}}, 
    PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {None, 
       Scaled[0.05]}}, Ticks -> {None, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Number of Houses\"", "\"Number of Malaria Patients\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.868111063624468*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"95e8553a-d0eb-41ac-acc7-b9e4fce2fc49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"freq", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#1", ",", "#2", ",", 
       RowBox[{"Splice", "[", "#3", "]"}]}], "}"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"(*", "Year", "*)"}], 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<2011\>\"", ",", "\"\<2012\>\"", ",", "\"\<2013\>\"", ",", 
        "\"\<2014\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"543", ",", "682", ",", "376", ",", "600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "26", ",", "26", ",", "21", ",", "24", ",", "24", ",", "34", ",", 
          "45", ",", "84", ",", "103", ",", "92", ",", "36", ",", "28"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "8", ",", "65", ",", "89", ",", "74", ",", "89", ",", "68", ",", 
          "32", ",", "43", ",", "67", ",", "74", ",", "53", ",", "20"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "9", ",", "12", ",", "37", ",", "27", ",", "48", ",", "23", ",", 
          "45", ",", "27", ",", "37", ",", "35", ",", "58", ",", "18"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "30", ",", "36", ",", "51", ",", "93", ",", "111", ",", "30", ",", 
          "30", ",", "35", ",", "60", ",", "36", ",", "59", ",", "29"}], 
         "}"}]}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868111066403676*^9, 3.868111066408497*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"790ce8b4-39a0-4f7f-9ac4-e0750290fd67"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"2011\"\>", ",", "543", ",", "26", ",", "26", ",", "21", ",", 
     "24", ",", "24", ",", "34", ",", "45", ",", "84", ",", "103", ",", "92", 
     ",", "36", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2012\"\>", ",", "682", ",", "8", ",", "65", ",", "89", ",", 
     "74", ",", "89", ",", "68", ",", "32", ",", "43", ",", "67", ",", "74", 
     ",", "53", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2013\"\>", ",", "376", ",", "9", ",", "12", ",", "37", ",", 
     "27", ",", "48", ",", "23", ",", "45", ",", "27", ",", "37", ",", "35", 
     ",", "58", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2014\"\>", ",", "600", ",", "30", ",", "36", ",", "51", ",", 
     "93", ",", "111", ",", "30", ",", "30", ",", "35", ",", "60", ",", "36", 
     ",", "59", ",", "29"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.868111066649378*^9, 3.8688264088812313`*^9, 
  3.86882695661796*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"c3c4fa1f-7683-4d57-8782-d59b7fa4054a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"freq", ",", 
   RowBox[{"TableHeadings", "->", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Year\>\"", ",", "\"\<Total\>\"", ",", "\"\<Jan\>\"", ",", 
        "\"\<Feb\>\"", ",", "\"\<Mar\>\"", ",", "\"\<Apr\>\"", ",", 
        "\"\<May\>\"", ",", "\"\<Jun\>\"", ",", "\"\<Jul\>\"", ",", 
        "\"\<Aug\>\"", ",", "\"\<Sep\>\"", ",", "\"\<Oct\>\"", ",", 
        "\"\<Nov\>\"", ",", "\"\<Dec\>\""}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.868111068702463*^9, 3.8681110687084084`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"9a7e64b2-c847-4960-aa81-3b4b378fea40"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Year\"\>",
       HoldForm], 
      TagBox["\<\"Total\"\>",
       HoldForm], 
      TagBox["\<\"Jan\"\>",
       HoldForm], 
      TagBox["\<\"Feb\"\>",
       HoldForm], 
      TagBox["\<\"Mar\"\>",
       HoldForm], 
      TagBox["\<\"Apr\"\>",
       HoldForm], 
      TagBox["\<\"May\"\>",
       HoldForm], 
      TagBox["\<\"Jun\"\>",
       HoldForm], 
      TagBox["\<\"Jul\"\>",
       HoldForm], 
      TagBox["\<\"Aug\"\>",
       HoldForm], 
      TagBox["\<\"Sep\"\>",
       HoldForm], 
      TagBox["\<\"Oct\"\>",
       HoldForm], 
      TagBox["\<\"Nov\"\>",
       HoldForm], 
      TagBox["\<\"Dec\"\>",
       HoldForm]},
     {"\<\"2011\"\>", "543", "26", "26", "21", "24", "24", "34", "45", "84", 
      "103", "92", "36", "28"},
     {"\<\"2012\"\>", "682", "8", "65", "89", "74", "89", "68", "32", "43", 
      "67", "74", "53", "20"},
     {"\<\"2013\"\>", "376", "9", "12", "37", "27", "48", "23", "45", "27", 
      "37", "35", "58", "18"},
     {"\<\"2014\"\>", "600", "30", "36", "51", "93", "111", "30", "30", "35", 
      "60", "36", "59", "29"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"Year", "Total", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", 
       "Aug", "Sep", "Oct", "Nov", "Dec"}}]]]], "Output",
 CellChangeTimes->{3.868111068946549*^9},
 CellLabel->
  "Out[24]//TableForm=",ExpressionUUID->"58d874bf-1847-4ecf-895e-\
d06bc5f672b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Table 5.1:\>\"", ",", "Bold"}], "]"}], ",", 
       "\"\< Frequency of Suspected Malaria Cases in Mubarakpur\>\""}], "}"}],
      "]"}], ",", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Year\>\"", ",", "\"\<Total\>\"", ",", "\"\<Jan\>\"", ",", 
          "\"\<Feb\>\"", ",", "\"\<Mar\>\"", ",", "\"\<Apr\>\"", ",", 
          "\"\<May\>\"", ",", "\"\<Jun\>\"", ",", "\"\<Jul\>\"", ",", 
          "\"\<Aug\>\"", ",", "\"\<Sep\>\"", ",", "\"\<Oct\>\"", ",", 
          "\"\<Nov\>\"", ",", "\"\<Dec\>\""}], "}"}], "}"}], "~", "Join", "~",
        "freq"}], ",", 
      RowBox[{"Background", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"None", ",", "LightOrange"}], "}"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Dividers", "->", 
       RowBox[{"{", 
        RowBox[{"False", ",", 
         RowBox[{"{", 
          RowBox[{"True", ",", "True", ",", 
           RowBox[{"{", "False", "}"}], ",", "True"}], "}"}]}], "}"}]}], ",", 
      
      RowBox[{"Spacings", "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.868111070822702*^9, 3.868111070827211*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"677ff07c-4564-4f55-8be5-5d67d5689fd4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       StyleBox["\"Table 5.1:\"", Bold, StripOnInput -> False], 
       "\" Frequency of Suspected Malaria Cases in Mubarakpur\""},
      "RowDefault"]},
    {
     TagBox[GridBox[{
        {"\<\"Year\"\>", "\<\"Total\"\>", "\<\"Jan\"\>", "\<\"Feb\"\>", \
"\<\"Mar\"\>", "\<\"Apr\"\>", "\<\"May\"\>", "\<\"Jun\"\>", "\<\"Jul\"\>", \
"\<\"Aug\"\>", "\<\"Sep\"\>", "\<\"Oct\"\>", "\<\"Nov\"\>", "\<\"Dec\"\>"},
        {"\<\"2011\"\>", "543", "26", "26", "21", "24", "24", "34", "45", 
         "84", "103", "92", "36", "28"},
        {"\<\"2012\"\>", "682", "8", "65", "89", "74", "89", "68", "32", "43",
          "67", "74", "53", "20"},
        {"\<\"2013\"\>", "376", "9", "12", "37", "27", "48", "23", "45", "27",
          "37", "35", "58", "18"},
        {"\<\"2014\"\>", "600", "30", "36", "51", "93", "111", "30", "30", 
         "35", "60", "36", "59", "29"}
       },
       AutoDelete->False,
       GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{None, 
            RGBColor[1, 0.9, 0.8]}}},
       GridBoxDividers->{
        "Columns" -> {{False}}, "Rows" -> {True, True, {False}, True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
      "Grid"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.868111071065166*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"9ca8386b-6691-4881-bf25-5a8850c3058f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patientfreq", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"freq", "//", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{"ReplacePart", "[", 
        RowBox[{"2", "->", "Nothing"}], "]"}], "/*", 
       RowBox[{"(", 
        RowBox[{"Apply", "[", 
         RowBox[{
          RowBox[{"#1", "->", 
           RowBox[{"{", "##2", "}"}]}], "&"}], "]"}], ")"}]}], "]"}]}], ")"}],
    "//", 
   RowBox[{"Apply", "[", "Association", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.868111072606938*^9, 3.868111072613338*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"77a1ea58-a060-4f09-9d99-3a9144952df3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"2011\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "26", ",", "26", ",", "21", ",", "24", ",", "24", ",", "34", ",", "45", 
      ",", "84", ",", "103", ",", "92", ",", "36", ",", "28"}], "}"}]}], ",", 
   
   RowBox[{"\<\"2012\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "8", ",", "65", ",", "89", ",", "74", ",", "89", ",", "68", ",", "32", 
      ",", "43", ",", "67", ",", "74", ",", "53", ",", "20"}], "}"}]}], ",", 
   RowBox[{"\<\"2013\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "9", ",", "12", ",", "37", ",", "27", ",", "48", ",", "23", ",", "45", 
      ",", "27", ",", "37", ",", "35", ",", "58", ",", "18"}], "}"}]}], ",", 
   RowBox[{"\<\"2014\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "30", ",", "36", ",", "51", ",", "93", ",", "111", ",", "30", ",", "30", 
      ",", "35", ",", "60", ",", "36", ",", "59", ",", "29"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.868111072905849*^9, 3.8688264045625*^9, 
  3.868826964338975*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"c00eb06c-3577-4169-8491-533de3716e16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["patientfreq"], "Input",
 CellChangeTimes->{{3.86811530248169*^9, 3.8681153038532343`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"43f1de13-719d-42e4-a349-6591ef8df1c9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"2011\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "26", ",", "26", ",", "21", ",", "24", ",", "24", ",", "34", ",", "45", 
      ",", "84", ",", "103", ",", "92", ",", "36", ",", "28"}], "}"}]}], ",", 
   
   RowBox[{"\<\"2012\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "8", ",", "65", ",", "89", ",", "74", ",", "89", ",", "68", ",", "32", 
      ",", "43", ",", "67", ",", "74", ",", "53", ",", "20"}], "}"}]}], ",", 
   RowBox[{"\<\"2013\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "9", ",", "12", ",", "37", ",", "27", ",", "48", ",", "23", ",", "45", 
      ",", "27", ",", "37", ",", "35", ",", "58", ",", "18"}], "}"}]}], ",", 
   RowBox[{"\<\"2014\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "30", ",", "36", ",", "51", ",", "93", ",", "111", ",", "30", ",", "30", 
      ",", "35", ",", "60", ",", "36", ",", "59", ",", "29"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.868115304160447*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"e5876439-019f-4608-9792-320c0bbe26c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patientsPerMonth", "=", 
  RowBox[{"KeyValueMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"DateObject", "/*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", "\"\<MonthName\>\"", "]"}], "&"}], ")"}]}], 
          "]"}], "@", 
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ToExpression", "[", "#1", "]"}], ",", 
            RowBox[{"Range", "[", "12", "]"}]}], "}"}], "]"}]}], ",", "#2"}], 
       "}"}], "]"}], "&"}], ",", "patientfreq"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8681110745529346`*^9, 3.868111074557967*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"3cc72c7e-c96a-4070-a3dc-2f09fe4dfcde"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"January\"\>", ",", "26"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"February\"\>", ",", "26"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"March\"\>", ",", "21"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"April\"\>", ",", "24"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"May\"\>", ",", "24"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"June\"\>", ",", "34"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"July\"\>", ",", "45"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"August\"\>", ",", "84"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"September\"\>", ",", "103"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"October\"\>", ",", "92"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"November\"\>", ",", "36"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"December\"\>", ",", "28"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"January\"\>", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"February\"\>", ",", "65"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"March\"\>", ",", "89"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"April\"\>", ",", "74"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"May\"\>", ",", "89"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"June\"\>", ",", "68"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"July\"\>", ",", "32"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"August\"\>", ",", "43"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"September\"\>", ",", "67"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"October\"\>", ",", "74"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"November\"\>", ",", "53"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"December\"\>", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"January\"\>", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"February\"\>", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"March\"\>", ",", "37"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"April\"\>", ",", "27"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"May\"\>", ",", "48"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"June\"\>", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"July\"\>", ",", "45"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"August\"\>", ",", "27"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"September\"\>", ",", "37"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"October\"\>", ",", "35"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"November\"\>", ",", "58"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"December\"\>", ",", "18"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"January\"\>", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"February\"\>", ",", "36"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"March\"\>", ",", "51"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"April\"\>", ",", "93"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"May\"\>", ",", "111"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"June\"\>", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"July\"\>", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"August\"\>", ",", "35"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"September\"\>", ",", "60"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"October\"\>", ",", "36"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"November\"\>", ",", "59"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"December\"\>", ",", "29"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8681110749473333`*^9, 3.8681154283532963`*^9, 
  3.868115527443164*^9, 3.868826374126742*^9, 3.868826970441277*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"c69a6308-ab59-4813-bcbe-6102f094559a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"patientsPerMonth", ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<2011\>\"", ",", "\"\<2012\>\"", ",", "\"\<2013\>\"", ",", 
      "\"\<2014\>\""}], "}"}]}], ",", 
   RowBox[{"PlotMarkers", "->", "Automatic"}], ",", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Figure 5.2:\>\"", ",", "Bold"}], "]"}], ",", 
       "\"\< Annual Frequency of Suspected Malaria Cases in the Study \
Area\>\""}], "}"}], "]"}]}], ",", 
   RowBox[{"Frame", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<\>\"", ",", "\"\<Number of Patients\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.868111077062151*^9, 3.868111077066839*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"a2b327e3-0702-4ba2-af7e-2a9b06be4a70"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.849984*^9, 26.}, {3.8526624*^9, 26.}, {3.8550816*^9, 
         21.}, {3.85776*^9, 24.}, {3.860352*^9, 24.}, {3.8630304*^9, 34.}, {
         3.8656224*^9, 45.}, {3.8683008*^9, 84.}, {3.8709792*^9, 103.}, {
         3.8735712*^9, 92.}, {3.8762496*^9, 36.}, {3.8788416*^9, 28.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.849984*^9, 8.}, {3.8526624*^9, 65.}, {3.8550816*^9, 
         89.}, {3.85776*^9, 74.}, {3.860352*^9, 89.}, {3.8630304*^9, 68.}, {
         3.8656224*^9, 32.}, {3.8683008*^9, 43.}, {3.8709792*^9, 67.}, {
         3.8735712*^9, 74.}, {3.8762496*^9, 53.}, {3.8788416*^9, 20.}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.849984*^9, 9.}, {3.8526624*^9, 12.}, {3.8550816*^9, 
         37.}, {3.85776*^9, 27.}, {3.860352*^9, 48.}, {3.8630304*^9, 23.}, {
         3.8656224*^9, 45.}, {3.8683008*^9, 27.}, {3.8709792*^9, 37.}, {
         3.8735712*^9, 35.}, {3.8762496*^9, 58.}, {3.8788416*^9, 18.}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.849984*^9, 30.}, {3.8526624*^9, 36.}, {3.8550816*^9, 
         51.}, {3.85776*^9, 93.}, {3.860352*^9, 111.}, {3.8630304*^9, 30.}, {
         3.8656224*^9, 30.}, {3.8683008*^9, 35.}, {3.8709792*^9, 60.}, {
         3.8735712*^9, 36.}, {3.8762496*^9, 59.}, {3.8788416*^9, 29.}}]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[6.272]], {{{3.849984*^9, 26.}}, {{3.8526624*^9, 26.}}, {{
         3.8550816*^9, 21.}}, {{3.85776*^9, 24.}}, {{3.860352*^9, 24.}}, {{
         3.8630304*^9, 34.}}, {{3.8656224*^9, 45.}}, {{3.8683008*^9, 84.}}, {{
         3.8709792*^9, 103.}}, {{3.8735712*^9, 92.}}, {{3.8762496*^9, 
         36.}}, {{3.8788416*^9, 28.}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[6.72]], {{{3.849984*^9, 8.}}, {{3.8526624*^9, 65.}}, {{
         3.8550816*^9, 89.}}, {{3.85776*^9, 74.}}, {{3.860352*^9, 89.}}, {{
         3.8630304*^9, 68.}}, {{3.8656224*^9, 32.}}, {{3.8683008*^9, 43.}}, {{
         3.8709792*^9, 67.}}, {{3.8735712*^9, 74.}}, {{3.8762496*^9, 53.}}, {{
         3.8788416*^9, 20.}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[8.16]], {{{3.849984*^9, 9.}}, {{3.8526624*^9, 12.}}, {{
         3.8550816*^9, 37.}}, {{3.85776*^9, 27.}}, {{3.860352*^9, 48.}}, {{
         3.8630304*^9, 23.}}, {{3.8656224*^9, 45.}}, {{3.8683008*^9, 27.}}, {{
         3.8709792*^9, 37.}}, {{3.8735712*^9, 35.}}, {{3.8762496*^9, 58.}}, {{
         3.8788416*^9, 18.}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[
                
                NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                  1, 1 - 3^Rational[1, 2]}}, {{0, 
                  1}, {-1, -0.7320508075688772}, {
                  1, -0.7320508075688772}}]]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[7.6]], {{{3.849984*^9, 30.}}, {{3.8526624*^9, 36.}}, {{
         3.8550816*^9, 51.}}, {{3.85776*^9, 93.}}, {{3.860352*^9, 111.}}, {{
         3.8630304*^9, 30.}}, {{3.8656224*^9, 30.}}, {{3.8683008*^9, 35.}}, {{
         3.8709792*^9, 60.}}, {{3.8735712*^9, 36.}}, {{3.8762496*^9, 59.}}, {{
         3.8788416*^9, 29.}}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.849984*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Number of Patients\"", TraditionalForm], None}, {
        FormBox["\"\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       TemplateBox[{
         StyleBox["\"Figure 5.2:\"", Bold, StripOnInput -> False], 
         "\" Annual Frequency of Suspected Malaria Cases in the Study \
Area\""}, "RowDefault"], TraditionalForm], 
     PlotRange -> {{3.849984*^9, 3.8788416*^9}, {0, 111.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"2011\"", "\"2012\"", "\"2013\"", "\"2014\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 6.272}, {20, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 6.72}, {20, 6.72}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.72}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.051309523809523805`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 8.16}, {20, 8.16}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.16}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.03009803921568628] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 7.6}, {20, 7.6}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 7.6}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.002105263157894735] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "6.72`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "8.16`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "7.6`", "]"}]}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.868111077703539*^9, 3.868115530831053*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"a8d3c2e0-e68b-4a16-af18-1544977e6f64"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SuspectedMalariaCase", "=", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<January\>\"", ",", "50"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<February\>\"", ",", "29"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<March\>\"", ",", "30"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<April\>\"", ",", "36"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<May\>\"", ",", "51"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<June\>\"", ",", "93"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<July\>\"", ",", "111"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<August\>\"", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<September\>\"", ",", "90"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<October\>\"", ",", "78"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<November\>\"", ",", "89"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<December\>\"", ",", "78"}], "}"}]}], "}"}], "}"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RainFall", "=", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<January\>\"", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<February\>\"", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<March\>\"", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<April\>\"", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<May\>\"", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<June\>\"", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<July\>\"", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<August\>\"", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<September\>\"", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<October\>\"", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<November\>\"", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<December\>\"", ",", "0"}], "}"}]}], "}"}], "}"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.868111082822537*^9, 3.868111082827786*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"ebfb9b8c-8a7c-4549-ad9f-d98f156dcf6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"SuspectedMalariaCase", ",", "RainFall"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Suspected Malaria Cases\>\"", ",", "\"\<Rain FAll\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Frame", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<\>\"", ",", "\"\<Number of Patients\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.868111084763735*^9, 3.8681110847688828`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"502c01d3-97ae-4b67-81ac-d4ffc290edd0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.849984*^9, 50.}, {3.8526624*^9, 29.}, {3.8550816*^9, 
         30.}, {3.85776*^9, 36.}, {3.860352*^9, 51.}, {3.8630304*^9, 93.}, {
         3.8656224*^9, 111.}, {3.8683008*^9, 100.}, {3.8709792*^9, 90.}, {
         3.8735712*^9, 78.}, {3.8762496*^9, 89.}, {3.8788416*^9, 78.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.849984*^9, 0.}, {3.8526624*^9, 0.}, {3.8550816*^9, 0.}, {
         3.85776*^9, 1.}, {3.860352*^9, 3.}, {3.8630304*^9, 1.}, {
         3.8656224*^9, 1.}, {3.8683008*^9, 1.}, {3.8709792*^9, 1.}, {
         3.8735712*^9, 1.}, {3.8762496*^9, 2.}, {3.8788416*^9, 
         0.}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.849984*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Number of Patients\"", TraditionalForm], None}, {
        FormBox["\"\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.849984*^9, 3.8788416*^9}, {0, 111.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Suspected Malaria Cases\"", "\"Rain FAll\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.868111085071418*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"2bd2435f-9068-4ab5-bc16-fe4426e70938"]
}, Open  ]],

Cell["Edits begin here.", "Text",
 CellChangeTimes->{{3.86811128234114*^9, 
  3.868111291615735*^9}},ExpressionUUID->"a539b3da-2029-460a-8de2-\
e897fa8ee01e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"patientsPerMonth", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<2011\>\"", ",", "\"\<2012\>\"", ",", "\"\<2013\>\"", ",", 
      "\"\<2014\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotMarkers", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FilledDiamond]", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[FilledSquare]", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[FilledUpTriangle]", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[MathematicaIcon]", ",", "10"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Figure 5.2:\>\"", ",", "Bold"}], "]"}], ",", 
       "\"\< Annual Frequency of Suspected Malaria Cases in the Study \
Area\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<\>\"", ",", "\"\<Number of Patients\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Joined", "->", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8681135232045727`*^9, 3.868113534765736*^9}, 
   3.868114308738296*^9, {3.868115117115925*^9, 3.86811511920989*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"277cd5cb-2741-4137-95c3-f183b7804914"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3fd3FNmdN/49z/d8z/n+9Jzvv/Ccs/Z6d+3d9Xo9yWN7vB7b43Eejz27
tncYkkTOzAwZJHLOQw4iCJGFhCICIYIAIQECgSSEUE6d1DlW6fmg21zVdFK1
1N23w/t1dDioVF316VvVVfXuqrr1f8bN/Cjtf/3d3/3d3P+P/vlo7Bc/mTNn
7II//v/0y59mzJ2cPmPihF/OmDcxfeKct8b9PzTwf9E///v//bu/e/X/AQAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAE
dOHChZPD0Wq1NGZ9fT0fYjAYRBc+ci0tLfeC6OjoGPblnZ2dpaWl1AhHjhy5
fPnyw4cPJUmKSGG9vb2seWmyEZlgjJnNZlZ/iGa8fv36sOubRqOJZdkprr29
PScnZ/Xq1UuXLt28eXOIxqfle+PGDVpA69evX7Jkye7duy9duvTgwYNIrf/x
xmKxRGpSRqORrdtdXV0hRsvNzWWjnTp1KkSrVlRUsNHy8/PDKkPNJzQsDocj
OzubJtjc3ByRCTINDQ3Hjh3btGnT4sWLV65cuXfv3uLiYrvdHsFZxFLEW0m5
ZlZVVdGU8/LyIjLl0MLdAsT+ExSuRN/nAgBAtM2aNSttOHTcQmPSroQPiexx
UYzt2LEj2DulyBDihU6nc//+/f6vomO5iBx5nj59mk+zu7t79BOMsc7OTlb8
vXv3go1DWWzY9e3Zs2exLDuV6fX6efPmKRs/2MFtfX39559/HnB5bd26NYKH
xPGAmmXPnj0UByI1wba2NtZWFCtCjDZnzhzeqk+fPg04jsfj4RvtL7/8Mqwy
1HxCw0INxSZ4/fr1iEyQctCKFSsCrmb0risrKyMylxiLYCv5r5lHjhyhKdNn
c5RTHlZYWwBRn6BwJfo+FwAAoi0Fk/L8+fODvdPQSXnfvn3BXkiHrDabbTRV
0QHw3LlzVVYSn8JKykuCa21tjWXZqay4uJgtjuXLl585c+b8+fMBR6PPe3p6
Ohtz8eLFBw4cOHHixK5du6ZPn84GLlq0yGw2x7j46KEjf3pT69ati9QER5CU
jx07FnCcR48eKTc7YZUR50n56dOn06ZNYxOkVWvv3r20TlI70NrFBtJKePfu
3dHPKMYi2Er+a2ZsknK4WwBRn6CwJME+FwAAok2ZlLcGwb5rvXHjxsLX6IhL
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
dUXIt5zKpMyv2l29erXPM4LZc4iUtzMrl5T6F6pMyio3FAHxPsmD9XHEVzP2
TF6V87JarU+fPi0vL1duB1paWvhF5rS6ql++alZaf/GQlPmlxf59F9BKRbHO
5+lISuFuAQLWqXJfE9YnaATbxnD3ucHWfJXtOZpPBAAAxIPRJGVlB1l0IEdH
s3QkRnt55W04fA/In6+Rpug4xedJlwGTsnJPRIcl7F4kNse2traBwYvr+FMk
aA9Le89gb0EZdZcuXUo7QZ+BixYtYlmbsga7TZtfU0dHXMrr92juRV+n/HKY
2off6P3ixYtg9fAz1MGi5bFjx9gILClEPCmzOEnvRXnnOD8m4cuOdWZOBw/K
bklcLhd/FgmbUQyS8sDrY3haFj73BvKLSNmC4Oubz8O/du3axYazvEaJif2q
vLvN4/Hwt8ZPgKqcr8rG58eWPod2/Opo/oBvKoadSuNf8vh03eOPT8QnYPKu
9rZs2cKGqEnK7e3t7FW01HxOBw8MXhVJx8Npg/d4sjCisknZ6Rt6U6wTLYam
wMZhx7HKJ88q1z3+dQe/1ULl0lHZ7Oz5L8pL91VOn1Ie+9UnU/AYGFZSpkZT
3hXLn2gz8PWkTNNkI/jcSsmDNo8nPp9Q9S9UmZRVbigC4v1ZUSP4dyJNlfMt
P7sUX+W8+BL3+WKTX1zBHtmgcvmqWWn9RTAp+6+ZKpMyj2Y+3wZQU7MvYUKc
zQ93CxCwTpX7mrA+QSPYNoa7zw225qtsz9F8IgAAIB6MJikPqOjKmO8B6SXK
4cuWLfN/tPGwSXng6z2ATZ06lY5k2J1NzLx580LcbEX7cfYNNkeHmspfedrl
19TRDpoN4X1vBkNvh89IzfOU+V4+4Lk/hj/UhgIjHSRHPCnzq+bWrl1L86Km
vnPnDv+igy87/tjo/Px81hNUd3e38vbGkpKSgVglZR6BlyxZQrlGlmWtVsuv
WKAmZbcxUnPx5ymXlZXRgYrD4VBePM8O+Wg0/ugTag1qAWqHPXv2+Iymfr4q
G5+WPn0E0gYPoqg8em1/fz81IzszQu9aeXWEsuyAdx/7oGVEqYpNvLS0lNYu
epsUf9j6RgdyrCPfAdX3KSufbb13794rV67U19dTYKGDSRYx0hSfFJVNym95
oAlSe9KraP3hnQTSC5WNljZ4+piaiJrl2bNn7I3QtosfGKtcOiqbnV/VScft
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
60u6tapui4CUIskyrRtsJSmqbBZdDgBAjCApw2joK4eeiuvzSFz1KAR1nHqP
T6f70p9H0MtxPNAv+jMLZaZDGaJriQvGx4cUF9h/y/L8wmimZmsrbz3wDW9v
YOd+pfJrGclm1ox/gy0X1/NHoykAIPk0dxomri5iCWjC6iL01wTBHLxUy9aT
NUcrRdcCABAjSMowYo6+R60Hv8mSi7ZiVP08v+oV+eIfhh4edPqnIR4eFJ+G
zl1SImuuE12OYLIsK3viajvyL7b2itFP1lh7kE+zr3SKyqu49Ys/8V4SX3xi
9DUAJI1urWXqhlIWf8ZmFtQ+7xNdEcSvBw29fFWxOXAbOwCkBCRlGBlZcnWd
+5A/6Uly9I9ygpLb1leSPvT0qONvqO8cLB4Ydy94fT/s30TXIhitG5prc7+2
KCP3IDBN+dCUDfe3qHkJ72bNuGdhpMoASHQGs2POtqv85tNbtcn2aHuILIfL
M35lIVtbbj7C2gIAKQFJGUamv3obDyzW5sKITFOWJd2tZUMnIg//s/VlUUSm
HG1Sv1Yz8S3v04gqckWXI9Kr52UruqruzPlJZC8PkN2O7osfhbXu2a6dY4tG
9/nvIlgJQOKyOVyL9lTwmFx4+4XoiiABbMu5z1aYHWeqRdcCABALSMowAi59
Y+uhf+R9cEV24sbHB/ntqPQf05MjkZ1+NFjzDrIspp36nuxI3W5jB6+i/z2P
sV0XfuuxaSI/F2svf35325HvOLVPQ4/vbqnnF8ZLZtyGCanO5fasPlLJY/Kp
0meiK4LEcONhO1tnJq0t9kiS6HIAAKIOSRnCJctS96WPvTkl67sea+RvbbM2
F7YeHnp6lO72CpppxOcSKbIk6eb/xvvQ3hMbRZcjjNvYyjtCp5+egv+RnNHq
RNfR95CvIR2nfkQJPcTIssetSfsBW0DORzejVBJAQpBkefvpah6T9154mNDP
5oNY6jc7+JrzCHe1A0AKQFKGcCk7NDY3no/SXBw9Ne3Hvj/UfVNJuuSO02c4
Oh5U8FOW7s4UvYjRqXnSfvzNoad9XZ0pe5xRnaPl+YWhVJ7/37IUqocZw+rx
bAFZLuyJalUAce5I/mMedjaeuIczgxCWlYdvs5WHViTRtQAARB2SMoTFbWpv
O/IdFk96Cz6N6rxcxpbO0z8denrUxY9CnzoUpX/zDJbC+teli65FDHvHrbaj
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
KTudzmXLlv34xz8me4rllFtaWlavXk0WJufn5xcWFqI3yOmbzVK9W4JTpoK9
7SJ54GpLImjLCRE4s0E9/gUh+23+CdpygBCBaW0kExVYXUDjFYNTDg1Q82bB
rkJsBPacrKYtJ3zx/oLinCbTtejWxDe67xn5sCp3kl0ByQe9gjHJScxSecxT
LkNTX3u6GPbbNVn4GjlXLQ+gRiCs0ZnssZnXrHZXYE737rvvIlv6wAMP2Gzd
+0u/+uorbFpVqs75LZs2bcIf9+7d67kbctD33nsv2v7hhx96bkf+9L777sOH
/OQnP+nHKd++fXv48OF4B3TIj370I7GcstVqXbhwIfKVEydOnDNnDnbKZWVl
2DVv2OBtjvVgA5xy4OEYe2vCq0IAkOMvcS4rbUUhgi3rqOBoJv6Vs0m18woI
NniO00x+CVctR1VBIE9tvpHQfuoj/LozOvNQV0TZF9BXgVQC+EN1fQcJWHRb
oactJ3zxxik7dQ3aC0vlRx7vtkPL0ZH6ik2MuY3unyA5OscFIh/pWmj2Bufs
MxjRrsQqfI1sO14ZSIVA2NLSYZq5NR9Vue/2FgVmqs8nn3zy6KOPvvbaaz2/
Qh4Tu9crV67gPbHn1em6R6Z94403sMl1Ot2zLx5//HF8+PTp07OysvpxysnJ
yfjbP/7xj6WlpS+//LJYThmdF5nKtWvXms3m8vJy7JTR9rq6uhkzZqCPCoXC
/7MEHnDKgUdXto48fPufjwR4D8/z2kWfYDtjPrKathwgpDBsmISrliVxJ0UZ
qAFPnDLPBagPHPCfdTEXYQ1mMNCPU9aVb7Q2ZirTPuv5VfvpTyw3U3gWpgT7
iKk2lvxndmSN5Xmu191KrirwZfLtmiwXA7HRgKGlrkkzcV026cOcsSVfrjRS
1DN69GhsjbH//cMf/oA+Dhs2rOeeixcvxla3psadr/yJJ5744IMPKioq0PvC
wsL+nfLvfve7zZs3W62d43QiOuXdu3cjU9nU1ITeezplRFRUFPpYWSnJTjBw
ygHGqa4hK54GDAgJeI+ztoxMkWWaIWAOICaWpF24ahk2TKQow2VoJMPK5rpj
FJUA3tPSYSKNsYrr7bTlhDX9OGX5kSe6b4wahp7R6JFNW3UooL2wxN0pUba2
133MNueXEcKVcumGMsAKgbCitKb1m1WZ5M6MXxPWZdc29hdTeuhIT0/H3vb5
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
PikqKkKmcv78+WVlnZN55syZgz5WVVUplcrly5ej91evXqWt0RfAKYsIuqvL
Y57Ct3Rzw0nackINVqtUj3022BL0AGGILfe4EH39u+DKX8zatfKoP8OAWoBZ
ebgE2+R1MRdpawlfeMbRdvJdoaco+gnGKKOtCBAB1qG/HvkC/lmbDj3iUFbS
VgQAQO+wLBsREYF85bRpnXEUk5KSPGNfo40mk4m2Rl8ApywiNsV50vnJWlW0
5YQaluR9Qiyv6a/zLidtOUD44rpdQ1YBcDYzbTl3QeYrthx9FhaABIDGVgMZ
UL7c0EFbTviivbAU0kKFJKWl5xsO/Jnc1hgzBGEAgCBFq9XGx8dv2LABvbfb
7du3b8c2ecqUKXigWYqAUxYRbfFyYd5X6qe0tYQaPMtoZr2NvYnlxA7acoCw
hnc51d+OwrXRWRtcN3/GJJdFPoxvRKbaGNpyQp89J6uxTZ63s5DnedpywhSb
/CyxyZrCubTlAGJitDjWrF/fdPAh/Pu2pXzAMZKMoAsAYYhara6vr7dYLLSF
+A44ZRFpTXgV38mNl/fR1hJqOCryyCge29FCWw4Q7ugjvsC10XrmMG0t3VGf
nY1vROiOxPMcbTmhjM5k/3plBnbK+RXNtOWEKaxNTdLvKo6/xDklOcEP6IfV
R0oPbp4FObIBIDhpbm5OTEzcuHHj9u3bU1JSzObgmmvnJ+CUxcKpvUFu4y4d
hGUWGcOGSdiYGDbDIxKgjzl2Pa6Qxh2zaWvpjlN9zT0N9dYZ2nJCmYS8OmyT
J67PdrhY2nLCEZ7nOzK/6sqP9rBDWUVbESA+mSW30VV2Zsen7sDml3bRFgUA
QCdlZWWTJ0/2XJI8a9YshUJBW5dogFMWC0P1HqFP+9hfaWsJNdj2ZjKg7LhU
SFsOAPxgL04XVs3Pepu2ll7oyPxaWAly6mPaWkIWZI0nrc/BThlZZtpywhTj
lYNu91S9m7YcYEho15g7k5WvSCnZ8wr5ua3NubR1AUC4wzAM8sXIS86cOXP/
/v2rVq3CZnnz5s20pYkGOGWxaD/9Cb5760pX0dYSapiPbcGuRDvnPZ6DgRuA
Pkybu/eG1Sppy+mOvbWUtCdtivO05YQmeRXN2CZ/FZGhNdppywlHnJrrssNd
aaFSP4WnQwizcPc5dK1NXRl3K+oZkgvPqa2nrQsAwpqrV68iIzl16tT29na8
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
rYZyzvk9d1PKgvTVTHxWqgfXttgJ7b1MweK3kVOctiCZa4swro9Wrwi884Ux
i9dbXeIqdttPKN6KXPV4QuerOwCUBRookt2tXJtjQ6TlPmhyktSMcLakQ6DY
cyUXDGUX7I0YbEHZ/HUleYZM1cnuB3EWgARGcrjvy+8FpixU9GyaDQcPCE1R
kkNLmOt56USis5mtljF9oGlaenwF81UvfptofcC1RSOBaG80hSdv+8o3biq8
bS8mfADUov3tSSlshkp5xbFUyi65ayhC3X71LWZZOX0N2h5ftBl+FVcz5lo4
nBTzBR7MFygP3G97ezGYQYmPj7cQm9yHjo4Oru0dCW6llGmKRJXf2U346bAY
lq6MOTPBg1VbmsG1RRjXBwznogvWItlS1RLF+ik0OimK6vJLmakjnK8qEEpB
r8lL4NoWG0JppW2BrzHrmCXDdgCgKDo+9+FP+xJRXuutviZHzdyac63dsh4x
8+sX1fmjt/xTP+Nk1M05lpQynLIIeh1FR7KCKjHEFNeT6ty1zh0fUtyD0nKK
d8yh9U4WfmIIT972NXPBeLybEP8jmvNs6cnnxCSBRI26l/o2OxUjkFcHmZaV
JQ/hRp6wFPVgHSJLC9zK25eMXoJvER0P7WIyBjMAiYmJWCm7EpqOPDRaIFU9
XJtjczS58aAXZbrTJRN0lTjXDcYe5NVeRI/7tPKDNjpLc3cuOkvKvd02Oovt
kJ5i0h8pQi3lb3EBUE2i9pB/UYPH3/WnvUe+y/cuGsSC19GwYOSoeTNnYX9H
TfNrLyhttlrrskW4BmNIpayoZzNzMsFrFCx5hwm6P7LM3cpJcIK2MMVUiuua
k4WfyH13IeOrw81nvS5waNX2i9mwh7meWmufM1KEpj10fP+Eh0FpX8EvJKFk
m4XDaY1KuGYac9+dWGV7ezFsolAodu3aNWnSpGefffY3v/nNmDFj5syZU1Q0
QPV5iqKCgoImTpz4hz/84Xe/+9306dP37dsnl8sttw/64cmTJz/++OMREVal
JPLw8HjmmWeAPSP4LOBc1CDo9fq4uLilS5dCmRwaGgq2jOAUnONWSlmcvw/5
nnFti80xlCk0pn0QeLyrqxngHsRgWKep+y6qiXktaz5J2bBjBDIcDbSaurJt
dyJboIrxZeI69y7g2hbbQig6UR5FWVWANYeQFBWT0/Dj3gSkkZceSk4pKr+U
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
4BqK+FPg3DfYNGh1VS/dSLdXZcgHgBXi7kqZX3KY8m1mWKt9I4YZrjI7SnTh
R4uehth3q6owkZDCw+oFaPXKR/kfUyNzbOn/7LVkKVdN5zaeoXtBARnrSjtu
OSE3jseg1smQeJl7wrxhqaJdwHNB7jcOYkyrOeC081IP61j7t2z1yTZzvbZf
z997i0U/Ep3TqXakJ7YYvUGDk/gFZr7iaJFC6JTjMWuo0V5U62uXPkmSlPXE
cR7/i1YE6s+iOl97PXT9w/gpaVOq9+JxLKfhlL2qQusnR1X5sZJbeywmlqSi
EajQa/VsLCVVEoiqnOvWjPKqo4u+ps8OYfmf9I7nMW2XuyJT8dD9azEqGx1n
pNKZuzPIEfnFNZgN2mjEzqwcXLx9xi7ganrpCX/Djy5t2G4se3jetK9w37uE
HB6tA4ARt1bKJGHAvpO8L8m2TggJH0lg8bUtFp0N0YWfkHy2tlCL94DUKw57
s3smnwlhW1zpRvrEHZL7XvvoMwghfi7IG0eaDn9u3ewspi1yb+r6wvGH2TGa
4pyTSkPOPD186LfL5jLZrB0PLO0dFTjHJDqsFh/8maC70glnFDcFzGWi/geh
WW3qZp14iJf1I30peTL1c82M/WOSdXpVUsVW/FkVtFyyOWEOqVUjqSuPvWU5
5IlycY/8h7/zNW13vSTgiLa9SnTxZ9GljYYZrqaBJfl9lzL/iX3fnTMRydl4
pw9+Bljd88D5Fc89CXqegcUN/ZVpA90V9pQ08GnzpoXD9c4bBc9K+qQKywXZ
V8MMaycaxNqj/oy/uxFelbWdGPiTuHCYPM7P7kYCgDvi1kpZPVmHnRy9wrpi
KMayGhUZktt7+dteWexsCE99ZYxSm4CI3+WYFvcGpJsySJQ4Zj5Fiq9zLDU0
93363P2k5MdxfpMjTucxVPcE4Y+rtOMW0+a4PQRpiC/71X8u15xEMe74M5KR
oanLa2RjXZKIao2OgQdHPZyc+XXSxtPOOalBJeBE/ZUa8CWtQTb3QxI6Sct9
duRL8zI56iVJWwjpgNBoCo1OjtOD2zBaGvgTquJkY11CS2UXZvNmvC65c0BV
mGCYHtcNtBnXkauzpfdPqFgJxp3LfvtEZ7+TBp9R5cfKwi876D06FK1OUdEV
YJafKqv+mEQJD7FXBboyl1pQxsvK6DVMm+nGTPLlj9LbNvssKCm13TcvrqCH
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
Qh5sl8feEhz6aLH7MbNt7dTxf/JCPiV1kO7DGSg1wuCct/1NBTtc9JqhQxD6
lqF4bPNcEshNU6Iupk2zG+P8JuxgPyn5kcFcxF4LV9CME6nlNJ5e4X/1jArO
hVTQPZ/9foXlLRyLnoxBNI3HPf2Es/NoZdLqjg1wC518dos8VymPx76iGHbg
ozxCIlBXZkqDT1t+eGuss/CK+Pp2ZU6UnrPSqO++8Xx8IYXkvCuQDjnOfgbR
G9S1vQ9xBnWqpdbsE8pGmTYNAFyXsUnJvaSmTQv18q6bBc9K+mXKJdMv8EuP
tkf9eZWBTwhVYQIe3JBbbuubAAB3xQWVMvIuFMkPhCe+sOCBbN8guXNg8s7r
7FCjRyRpC2HaWG8ht/EMDmZ2I69GpRUXtV4LSF9Ld8wKWi4p1HymTVstMhUv
NPd96h0F57wjUXCZtshLoee46x3PW/7FfLHqfnIz3dvZcjU3vqBn+dUB4dH/
UAMgEmh2tf05NA0+wW+ttOOWM0+9DMsrZX75SUJj/40hJEHohrsU6Q/FPr8t
tXwsOPihLOyipp5FKG1ZG+0ay6DFwHwokrOf/z9uRT+XFV7wKX0ojir87/BU
OdN2AYB7MDEjD01t3eyTa5bUAs0g9A07GJ14mB3+wuPkf1C3W3rtIdvOS+r1
wtNfm0rJXNuyujcBAO6H6yhlw/S4MitCdO4Hy5Werm9TFT8lZCKtsB87Rc7M
0+LNsGfqsW9T2/uQaXOsZkbS/7RyO91De5D9RuNANOMlrmxGb9DGl/0693bW
jE7b+KwYWD3ou4gp/h4/spCrLFej0+gMKaX9267l0Z0cv7iGKcHza/tK758w
5VSJuWlv85dkUth+L2O9/1zdMde5WVZYJcouEAopUr6ysEtIBS8lkJF2VqSF
Ih1Nrrp6Vystc1pY/n+kSsdGjzsNzxuBAYApZkTKyKyOrQunEvRrdHYn+pPZ
i/llx6qe/AW7CjYPKXgTEGqaBtaq3wQAuBOMK2VCzFex4sVXN1mu9HTxZ2Xu
Y4NgCr9e0hpMeUTcxHcYNNt7QEIgqvC/eAnAfQv19nMLFq9ojExVMG2XLbBa
fPC7aOiPZNocbwcJASwqU2v2LX5BXdfEYf9iumNz8kFZ28D0CvtX5piqKouv
/GpXw5dErZXgmyU4522JcsI5510JJElMZX43lf4V1cZj1xsjruM2TKb9dyrj
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
tcO9o0ePDi179+69Ye9rgBSpSTms0s+aNSu82V66dCnZIa7SP/XUU/HPGAFG
jRrV1NSU7PPss8+Gxp07d+Z58JB/GzZsCP/t48aNS+5E8dxzz4WWhQsXJvvE
aRKi8eXLl5ONixcvTm6JjtNqxIgRqfMIhjlJGe7AnDlzwkR45ZVXBurQ2dkZ
Z9aBAwd6enri17YhICc7rF+//oknnnj77bdvSMoAKT7zjF5h9f7w4cMhESxY
sCBk5NBh7Nix8a4YAX7961+n9i8tLS0Z4AAZGGLGjx8f/ttnzZpVc0tcS3no
oYeS24XjNJk2bVrqA48cOVJy8ziFG7eSclgzKcALgHuVpAx34I033sg8EZqa
muLMqqqqivtBPfbYYwN1lpQBkvol5fAWGne37qdfUu4XAeJhm5IyQ97p06fT
Z0dSRUVF7BanyWuvvZb62Lh+MmrUqBu3knK/eQTD3GCS8osvvigpQ6ply5aF
ifD0008P1OHEiRNxZjU0NOzatSvcmDhx4kCdJWVg2Dp16tS777574MCBZEv8
KnLBggXhdktLSzyR76OPPjp37tyQfEP//fv3pyflsK6SulhJmWFi4cKFcTq8
9sfCKkpoHz9+fOwWp0m/feE+/vjj0Pjss8/euJWUp0+fnv+XAPeIvr6+tWvX
hjmVPJAhrMbH9flr167duBWEZ8yYkfqoeLCPpAxJ8cOl5NZhyOniNaQef/zx
MOnitRvGjRuX2iG0t7a2xpkoKQPDVnwDTN3XeurUqSW3Tsm7d+/ekpsnQoxn
R4zWrVsXGseMGRP/lJQZtrq6uuJpTyorK/vddfDgwbiiEi9eE6dJCNS9vb3J
PmVlZaFxzpw5NyRluHnxmtQtyEFVVVVsCXMt/Bk3fsVT8kZhfT5eeUFShqQw
L+KBcpMmTUr90IlOnz4dr2kS1gDDnxcuXAi3f/7zn6eeJWPnzp3JNT1JGRi2
tmzZEt4AH3744fjFY3V1dTyxw/bt22/cWusYNWpUS0tL7F9XV/fII4+U3Lz6
QGyRlBm24rpEmDLJCZIUVk7COka494033riRcu7r5KVgz58/H1P2tm3bbkjK
cFOcNQsXLmxvb+/p6Ymn5E0ev3/s2LGSmye+C6v6sSVelE1Shn4aGhriPoHP
P/98PKP1jZsJOnziPPTQQ3EjckdHR2x85pln4te28apSXV1d8bon8YvcVatW
pR89BDActLW1xeQbxDfVkpun5wrtN26+08bgPHbs2Pnz58+YMSO+wcZ1lXi2
IkmZYSseIBlW5j/z3nikWJhBzc3NqddTnjp1aljliNesnD17duwsKUNQXl4e
p8mDDz6Y/LhJfpR0d3fHz6lRo0a98MILIUEnp5WkDP2cPn06OYnGjBkTInPy
zxCT6+rqkj3j6SVLbh4xFNbfHn744bgN5cKFC+HeioqKeO/jjz8erxsFMHyc
OHHiySefTObfsPqR3PMt2LNnTzJBB+HeM2fOxP7xDTPuof273/0udZkhCITG
LVu25PvFQL5cv349ToqB1hySh1hWVlYmTxE/ZcqU5BdTCxYsCGv+sXPsUFpa
msdXAPecMCOSm4lLbp4iY+3atakdwgdQ3P4V8/K8efOWLl0aboePqhu3vnHK
cHEcGFZCWJ45c2bc1zo5p957773W1tZ+PY8fPx532I4mTJjwySefxLva2tqS
Z3aNh+YBDCuJRCKk49ra2s7OzvR7e3t7wzp/eL+NO+oAtyt114sQsevq6uJO
bkC68ElUX19/8eLFgTo0NTWFyJz8ognIoKur6/z582EdL6zpZf7oaW5urqmp
ST1gOSk0trS0+OQCALLrMw9SAAAAgGFLUgYAAIBU+/btGzlypMOQAQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGj4/+FTG9U=
    
    "], {{0, 385.}, {647., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{647., 385.},
  PlotRange->{{0, 647.}, {0, 385.}}]], "Output",
 CellChangeTimes->{3.8688276369707108`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"7c9ff6d2-5674-4457-b176-18a380b0312e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.868151175005286*^9, 3.868151199109458*^9}, 
   3.868151233789269*^9},ExpressionUUID->"b6da5e69-2318-49a6-a63c-\
fab8946de393"],

Cell[CellGroupData[{

Cell[BoxData["patientsPerMonth"], "Input",
 CellChangeTimes->{{3.8681151978872757`*^9, 3.8681151992704153`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"ac0c2f44-3c90-4732-82dc-277aa6fdea59"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"January\"\>", ",", "26"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"February\"\>", ",", "26"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"March\"\>", ",", "21"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"April\"\>", ",", "24"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"May\"\>", ",", "24"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"June\"\>", ",", "34"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"July\"\>", ",", "45"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"August\"\>", ",", "84"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"September\"\>", ",", "103"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"October\"\>", ",", "92"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"November\"\>", ",", "36"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"December\"\>", ",", "28"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"January\"\>", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"February\"\>", ",", "65"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"March\"\>", ",", "89"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"April\"\>", ",", "74"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"May\"\>", ",", "89"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"June\"\>", ",", "68"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"July\"\>", ",", "32"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"August\"\>", ",", "43"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"September\"\>", ",", "67"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"October\"\>", ",", "74"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"November\"\>", ",", "53"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"December\"\>", ",", "20"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"January\"\>", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"February\"\>", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"March\"\>", ",", "37"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"April\"\>", ",", "27"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"May\"\>", ",", "48"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"June\"\>", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"July\"\>", ",", "45"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"August\"\>", ",", "27"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"September\"\>", ",", "37"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"October\"\>", ",", "35"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"November\"\>", ",", "58"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"December\"\>", ",", "18"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"January\"\>", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"February\"\>", ",", "36"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"March\"\>", ",", "51"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"April\"\>", ",", "93"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"May\"\>", ",", "111"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"June\"\>", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"July\"\>", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"August\"\>", ",", "35"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"September\"\>", ",", "60"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"October\"\>", ",", "36"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"November\"\>", ",", "59"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"December\"\>", ",", "29"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.868115199424637*^9, 3.8681155603867826`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"65c5d49f-08ef-4244-a047-6812df5b71c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["populationdata"], "Input",
 CellChangeTimes->{{3.868115265290518*^9, 3.868115266947044*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"c187a99a-d848-49ed-8728-967aa3dcd46b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      RowBox[{
        StyleBox["\"Year: \"", "DateObjectLabel"], "\"2011\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", "2011", "}"}], ",", "\"Year\""}], "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "42879.69`"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{
        StyleBox["\"Year: \"", "DateObjectLabel"], "\"2012\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", "2012", "}"}], ",", "\"Year\""}], "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "44185.5`"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{
        StyleBox["\"Year: \"", "DateObjectLabel"], "\"2013\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", "2013", "}"}], ",", "\"Year\""}], "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "45531.5`"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{
        StyleBox["\"Year: \"", "DateObjectLabel"], "\"2014\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", "2014", "}"}], ",", "\"Year\""}], "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "46917.8`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8681152671873283`*^9, 3.868115559493637*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"7c715b76-bfe0-4934-b318-b2d071ce7967"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Range", "[", "9", "]"}], ",", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868115782302269*^9, 3.8681157823129*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"33e4c614-4d7b-4210-bd59-566601bbe19f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.868115782672213*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"0ef1b9bb-4cc6-4a78-937d-440225ebc3ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8681157858583927`*^9, 3.868115785863469*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"199dbd48-bc1f-4b31-a5ae-04897e294dfb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.868115786153018*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"4d1777c7-b350-4dbd-851f-84d21353d91d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.86811578901077*^9, 3.8681157890164833`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"39a717e7-deec-4750-99fa-8a256f8c93ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "5", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{3.868115789293016*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"c15795c4-1f36-475a-a304-4e49bee50920"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.868115792266741*^9, 3.868115792273641*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"bca9d98a-8964-48c8-b1b1-079cb34137fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "6", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.8681157925539083`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"295300c3-2d79-4786-8d18-99a185b0a636"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patientsPerMonth", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.868115863409287*^9, 3.868115865641973*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"2a637d53-2449-4073-bfb0-01fd1d254d51"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"January\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"February\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"March\"\>", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"April\"\>", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"May\"\>", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"June\"\>", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"July\"\>", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"August\"\>", ",", "84"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"September\"\>", ",", "103"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"October\"\>", ",", "92"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"November\"\>", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"December\"\>", ",", "28"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.868115865925644*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"116a07e0-88be-4af0-92ad-4261d6d2a3d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patientsPerMonth", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.868115883186512*^9, 3.8681158947405024`*^9}, 
   3.868115963761654*^9, {3.86811604021001*^9, 3.8681160422672377`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"0d27218a-a193-426d-ba18-2761cd465c4a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"January\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"January\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"January\"\>", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"January\"\>", ",", "30"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.868115885913364*^9, 3.8681158951444893`*^9}, 
   3.8681159642574253`*^9, 3.8681160427519073`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"d690a032-7312-4ed6-80fa-a0fbed488c69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datapts", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"x", "+", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", "datapts", "]"}]}], "Input",
 CellChangeTimes->{3.8681495178929157`*^9, 3.8681495800699368`*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"244212b0-c437-4918-b994-7616fb3690d8"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7Bt0wnSn2m2xhwo4KKxc8Pj9jdf7IVwOhyuK
a64JSHE4QPgCQHpRUsC3p1B5EYcENTMtl14BqLyEQ0TCq956Tz4oX8bhz0LB
P3cU2aF8BQcp4//LLfxkoXwlh3vOYTq1jkpQvooD2/3VwV871KF8NYc70yf8
vG2pAOVrOHDyzrX2YNGA8rUc/q+oXsbCrwrl6zgstbFft3YWjK/nIO8zdfd/
NgMo38ChQyXsd4KbGpRv6KCxOSf3vLMRlG/kYMsRtivLwBDKN3a4w3X/3dGj
ML6Jg12kV0z8V5h5pg4RNXk8XFvMHAA0H0+q
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 21}, {-0.8702315755702195, 22.703278328870823`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.868149581340762*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"4ac0a1c1-1cdd-44f1-8fda-940891f2bf44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["datapts"], "Input",
 CellChangeTimes->{{3.868149584538637*^9, 3.868149585338711*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"c51d4830-91ca-4b62-9d20-8a6ac9f01e29"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.07907993656970014`", ",", 
   RowBox[{"-", "0.8702315755702195`"}], ",", "3.0127274295120774`", ",", 
   RowBox[{"-", "0.686317627565586`"}], ",", "4.137955340914772`", ",", 
   "3.7858878218794807`", ",", "2.89153477600871`", ",", "7.326388001395367`",
    ",", "9.127908120661171`", ",", "11.767496695261354`", ",", 
   "8.113006400013482`", ",", "12.008363593026404`", ",", 
   "10.529332354159576`", ",", "10.802106328219745`", ",", 
   "16.027339672040508`", ",", "11.13745866228625`", ",", 
   "18.26488384155087`", ",", "17.18912853813548`", ",", "17.77255146928188`",
    ",", "16.95848633589889`", ",", "22.703278328870823`"}], "}"}]], "Output",\

 CellChangeTimes->{3.8681495856347723`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"98945524-c976-4aa9-8987-74524c6709a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"patientsPerMonth", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.868149726863665*^9, 3.868149757110118*^9}, {
   3.86814984711061*^9, 3.868149864519149*^9}, {3.868149929186192*^9, 
   3.8681499956115847`*^9}, {3.868150099322383*^9, 3.868150119987111*^9}, {
   3.8681501519951277`*^9, 3.868150163706411*^9}, 3.868150211412138*^9},
 CellLabel->"In[67]:=",ExpressionUUID->"329426bc-353d-460c-a060-48e2fb63b272"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{1., 26.}, {2., 8.}, {3., 9.}, {4., 30.}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 4}, {0, 30.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.868149733443519*^9, 3.8681497576096067`*^9}, {
   3.868149849103413*^9, 3.8681498648539352`*^9}, {3.868149952664548*^9, 
   3.868149995894061*^9}, 3.868150099631464*^9, 3.868150212541506*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"6188bbf8-d355-4d36-a2a8-49fd0f0d7383"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"patientsPerMonth", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"020079fd-3254-495a-aaba-b8550f7a702a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"26", ",", "8", ",", "9", ",", "30"}], "}"}]], "Output",
 CellChangeTimes->{3.8681502175913687`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"07a535b0-cc10-44d9-9fd6-71725bf6a1de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{"26", ",", "8", ",", "9", ",", "30"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{
  3.868150233292535*^9, {3.868150284346686*^9, 3.868150324582305*^9}, {
   3.8681503919127703`*^9, 3.86815039966086*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"01a0c44e-976e-4adf-a54c-4ce159cd3c68"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{1., 26.}, {2., 8.}, {3., 9.}, {4., 30.}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 4}, {0, 30.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.868150228089864*^9, 3.868150233831304*^9}, {
  3.868150392555962*^9, 3.8681504004018707`*^9}},
 CellLabel->"Out[73]=",ExpressionUUID->"793f17db-1096-4a3f-a302-4603e9c82950"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"BarChart", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Labeled", "[", 
        RowBox[{"#", ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"patientsPerMonth", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "index"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
         RowBox[{"[", "n", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "4"}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{
       RowBox[{
        RowBox[{"patientsPerMonth", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "index"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"ChartStyle", "->", "\"\<DarkRainbow\>\""}], ",", 
     RowBox[{"ChartLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<2011\>\"", ",", "\"\<2012\>\"", ",", "\"\<2013\>\"", ",", 
        "\"\<2014\>\""}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{
      "{", "\"\<Same-Month Frequency\nof Suspected Malaria Cases\nin the \
Study Area\>\"", "}"}]}], ",", 
     RowBox[{"Frame", "->", "True"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"index", ",", "1", ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.868150490157406*^9, 3.868150598197085*^9}, {
   3.8681506384721727`*^9, 3.868150685036672*^9}, {3.868150737620109*^9, 
   3.868150826493189*^9}, {3.868151019783424*^9, 3.8681510257681217`*^9}, {
   3.8681510943787727`*^9, 3.8681511127666073`*^9}, {3.86815123985254*^9, 
   3.868151247224271*^9}, {3.868151281297373*^9, 3.86815129771067*^9}, {
   3.8681513349237423`*^9, 3.8681513884607286`*^9}, {3.868151425869001*^9, 
   3.868151494379108*^9}, 3.868151528123077*^9, {3.8681515649922857`*^9, 
   3.868151615247884*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"0203d8d7-1d87-4c48-a8fa-1287bf8356d1"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QtQVGee//9Ec5lUrK1J7dyym1Tyr636zexULjOb2qmt/LOp/Gd25reZ
qUxqNvWrTE3VzOT3q1kJiAJeQRERcDSguXjBJHhXZEgwxAEUcTDGG6ISJUoE
UW7BgUFFsLnYIM3/+flUTp2c7n5yOA2cS79fRVn000+fbuznOZ8+59vnnP/n
/yT81/Qpd9xxx5yviX/+638v+P9mz/7fKS99Xdz4X7PmxMbM+u8/PD9r7n/H
/Pfsf/s/U0XjX++6446/E13/7++jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiD7l5eU7d+4U/9r9QgAA
4+/jjz/e+VWuXLlifoEDAwPyUS0tLRP3sgEAAAA40N/+9je5OVBWVjYRy795
82ZBQYFYflNTk2ypqqoSN/fu3TsRTwcA0EtLS5s+fbr41+4XAgAYf6+//vr0
r3L+/HnzC7xy5Yp81JEjRybuZQMAAABwoPfee0/bjujo6Bj35Xd3d8uFf/zx
x7LlnXfeETcXL1487s8FADCgUgAAHqZVChaH19raan6BVAoAwKt2794tvyb6
pz/9aWRkJFy3Q4cOyW6lpaWT9toGBwflkzY3N0/akwIADG7dujVnzhytUlBY
WDjuT0GlAABsRKUAADxMVgpmzZo1XgukUgAAXjV79mxt589nn30Wss+tW7cS
ExNln+Tk5El7bdeuXZNPevjw4Ul7UgCAwSeffCLXxqmpqeJfkQh+v398n2Jk
ZOTChQsNDQ0+n0+2UCkAgEmjrhQMDQ2Jj+V9fX1fuRzRZ2BgYLxelcnn7e3t
VXzfCQBguVJw/fp1sSoObg+uFIieX7kqjnx1LZZgJmXIBQCwTF8p2L59e8g+
tbW1Wh8qBQAQbdasWSNWxfPmzaupqTH/9SGxvfCVBQXFx3gqBQAwaUJWCpqa
mtauXZuSkhITEyNX/vPnz9+9e7e21+jGjRviIWJF3dHR8f7774tfZLdFixaV
lpbqV+9FRUXiXrE0w/MWFhaK9vXr14/peXt6etJu+/TTT9PT00WHOXPmbNu2
TZ5Ao7Ky0vAsnZ2d8q5Tp06Ny38XALjLWCsFDQ0NK1euTEhIEI969dVXly5d
um/fPv1aXasUiFXupk2bkpKSxO/x8fHZ2dn66x2EW11fu3ZNxkddXZ3+ebu6
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
uNFXCoJ7ajtqFKvr0tLS4DjQygeyUiA2MeSxyZLYrNCuZSP3VgldXV3qJ5LI
BQAwyVApEBsIiYmJ2ip03rx52oHJ+kpB5EeBaVecN5wgbu/evbL94sWLVAoA
wBbaSn7z5s2KbkuXLpXdPv30U32lQNK+7SM2K7SiM5UCALBdY2OjvISxlJCQ
IFa5hrrwkSNHZKlXiouL27Bhg/gQLrcI5KVnenp6Qq7SQ7aL9b+8/I0kllBW
VrZ//37xe1ZW1pie9+rVq/Jew6Uw9eSJjEQSDQwMjNf/GwC41OrVq7VV6FcK
BAIfffSRflUsZGdni+zQ+mgf3Y8fP75kyRKtW3Jy8rlz57RuitW1eJby8nLt
4LKYmJjly5d3dXXJ0vCZM2e0J1q3bp3+laSkpJw8ebKpqUm/U4hcAIDxYqgU
CNu2bdNWwoWFhVq7vlIQ+VFgt27dkoESGxtbWVk5NDQktikqKipkJVosVgQH
lQIAsIV2Tcnz588rusk9PNNvFxS0Nfaf/vSn9PR0/Yd5+aUgKdzHeG3Frl3U
Rp4fY+nSpRPxBwIAuru7P/vss/b2du17QQbDw8MdHR2iz1//+lftcIMI9ff3
NzQ0iAWKj/rh+kT+vOIvmjdvnggRESURvFgAiGri87lYYzc1NcmrGCv09PSI
rQYRK2N9CrG6Fqt68SzyjHPh3Lhx49KlSxcuXDCc0WJMT0QuAIAZwZUC8bFc
28MjQkFr11cKxuUosPr6+vj4eHmv9vDpt7871NzcPMp1CgDAPQxr7OvXr4s0
6ejoCLcDCgCACVJdXS0jSTuiDQAQzcgFADBJ1lXz8vK0lpGREVk+0K5KLK1d
u1Y0pqamypvjchRYZ2dnTk6OVlwQli9fLssEo+GPaPb5fLJdO/cpAMBe4Wq7
AABMjs8//3z37t2FhYXyMOeMjAy7XxEAwE7kAgBMssiPAhP8fn9zc7NYSG9v
7zi+NgDApKFSAACwV1VVlf4gZf3B0QCAKEQuAAAAAJOPSgEAwF7Nzc2JiYny
spja1TABAFGLXAAAAAAmX19f32u3nTt3zu7XAgCIXkNDQ3a/BACAg5ALAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAwESbDsCL7F61AAAAAAAAAHANL+1R9Mbf4va/wu2vX3L7X+H21w8A
AOxi5xcdAEwYu1ctcA27hyqACWH3qgWu4aXR4o2/xe1/hdtfv+T2v8Ltrx+T
yc4PKwAmjN2rFkyekZGRo0ePbtu2bf369Xv37m1ubg7uU1dXl5+fn5ubW1xc
XF9fr16gl8aPN/4Wt/8Vbn/9ktv/Cre/fkwmL40Wb/wtbv8r3P76Jbf/FW5/
/ZhMjBbAe5jXMM9Lo8Ubf4vb/wq3v37J7X+F218/zBscHFy2bJmhTlRZWanv
U1paauhQVlamWKaXik3e+EPc/le4/fVL7v0rqCBjrLw0Wrzxt7j9r3D765fc
/le4/fVjMjFaAO9hXsM8L40Wb/wtbv8r3P76Jbf/FW5//TBv+/bt4u1OSkoq
Ly9vaGjYuXOn3CXY2NgoO7S3t8fGxsbExOzbt6+tra2kpER2OHv2bLhlMn4A
72FewzxGC+A9zGuYx2gBvId5DfMYLYD3MK+jxNDQ0MyZM8XbXV5erjXKQwx2
7dolb+bk5IibBQUFWofCwkLRsnr16nCLZfwA3sO8hnmMFsB7mNcwj0MRAS/h
+GKMFaMF8B7mdZQYHBysqKjYunXrwMCA1rhjxw4xALZs2SJ+9/v9MTEx4mZL
S4vWoa2tTbSIdv2j9Bg/gPcwr2EeowXwHuY1zGO0AN7DvIZ5jBbAe5jXUaux
sTEhIUEMgJMnT4qbzc3NsigQCAT03WJjY0V7U1NTyIUwfgDvYV7DPL54BngJ
3ybFWDFaAO9hXsM8PjYAXsK2QNQqKytbsGCBfPe3bNkyPDwsGuvq6sTNOXPm
GDqLFsWlChg/gPcwr2EeowXwHuY1zGO0AN7DvIZ5jBbAe5jXUSgrK0urE23f
vr2vr0801tbWipspKSmGzmlpaaK9pqYm5KIYP4D3MK9hHqMF8B7mNcxjtFjz
0Pe/5a4fu//DMKmY1zCP0QJ4D/M6Cl27du3KlSvl5eXz588XA2D58uWi8dy5
c+L3hQsXGjqnpKSI9tra2pCLYvwA3sO8hnmMFsB7mNcwj9FizUPf/9b/Sv+J
W36oFEQb5jXMY7QA3sO8jmanTp2SRxb09PS0t7eLXxISEgx95LUMGhoaQi5h
us7Ev15g3Pz7N/7edT8T+h8y/csm9LngJYwWa2z/dijfJoUC8xrmMVqsoVIA
J2NewzxGC1zK9t07TtsjpMe8jhJ+v//SpUt1dXX6xuHh4ZkzZ4oxUF1d7fP5
5B5C0VPrcPPmTdnY1dUVcrGMH7iUWM1W/Pv/66IfcgHOxGixhn1EcDLmNcxj
tFhDCsDJmNcwj9ECl2KPkALzOkpcunRJvNexsbEDAwNao/hdtIj2+vr60S8u
XnzixAmtQ3V1tWhJSkoKt1jGD1yKXFBgXsM8DkKxhn1EcCaOLMNYMVqsIQXg
ZMxrmMdogUuxR0iBeR0ltMMHduzYcevWLdEi/t24caM845A8jqC0tFTczMzM
7O/vFzfFvxkZGaKlpKQk3GIZP3ApckGBeQ3zGC3WsI8ITsa8hnmMFmtIATgZ
8xrmMVrgUuwRUmBeR48jR47I74nNmTNnw4YNixcvljdPnjwpO/h8PnlVguTk
5Ly8PPGv+D09PV1WFkJi/MClyAUF5jXMY7RYwz4iOBnzGuYxWqwhBeBkzGuY
x2iBS7FHSIF5HVWOHTsmTzEkLVq0yHDlgs7OzszMTK1DRkZGe3u7YoGMH7gU
uaDAvIZ5jBZr2EcEJ2NewzxGizWkAJyMeQ3zGC1wKfYIKTCvo83IyEhXV1dj
Y2Nvb2+4Pj6fr7W19erVq4FAQL00TmYLlyIXQuIM1dGgo6OjvLz83Xff3bhx
Y0VFxeDgoKFDXV1dfn5+bm5ucXGxvIqNAqPFGvYRwcmY1zCPjw3WkAJwJrYF
MFYMGLgUe4RCIgUQOcYPXIpcUGBee1hVVdWMGTOm68yfP7+7u1vrIC9Yo1dW
VqZYIKPFGvYRwcmY1zCP0WINKQAnY17DPEYLXIo9QgrMa0SC8QOXIhcUmNde
1dHRERMTI97fjRs3NjQ0VFRUzJs3T9xcu3at7NDe3h4bGyv67Nu3r62traSk
RBYLzp49G26ZfOXAGvYRwZn4HlE0qKmp2blz57p16woKCj755JPgDhxZNglI
ATgZ8xrmMVrgUuwRUmBeIxKMH7gUuaDAvPaqLVu2iDd35cqVIyMjsqWmpka0
xMXFDQ0NiZs5OTniZkFBgfaQwsJC0bJ69epwy2S0WMM+IjgZ89qrxMp/3bp1
hgPHRIsWCqMcWTZZSAE4GfMa5jFa4FLsEVJgXiMSjB+4FLmgwLz2JL/fHxsb
K97crq4urXFkZOT06dONjY2BQEB0kEcctLS0aB3a2tpEi2gfGBgIuVhGizXs
I4KTMa+96qOPPpKr9A8++KChoUH8K3OhsrJSdrB2ZNlkvXxPIQXgZMxrmMdo
gUuxR0iBeY1IMH7gUuSCAvPakzo7O8U7u3DhwqGhodra2qKiovfff//UqVPa
V0mbm5vlHiTDtezlfqSmpqaQi2W0WMM+IjgZ89qr1qxZI97c3NxcreWdd94R
LW+++aa8yZFlk4YUgJMxr2EeowUuxR4hBeY1IsHJbOFS5EJInKHaw+rr68U7
m5WVJXcEabKzs2/cuDF6+8TU4uacOXMMDxQtii+UMlqsYR8RnIx57VWrV68W
b+6WLVu0lqKiIhkEo7cPPePIsklDCsDJmNcwj9ECl2KPkALzGpFg/MClyAUF
5rUnVVVVadWBjRs3VldXFxcXx8XFiZt5eXmiQ21trfg9JSXF8MC0tDTRXlNT
E3KxjBZr2EcEJ2Nee1VlZaV4cxMSEi5evDh6+1CyuXPnalci4MiyyUQKwMmY
1zCP0QKXYo+QAvMakWD8wKXIBQXmtScdPnxYlgmKioq0RrnXSLh27dq5c+fk
6YkMD0xJSRHttbW1IRerPzxhAl+957CPCE5juIit3S8HE2JwcHDz5s3yLU5I
SJC/5OTkcGTZ5CMF4GTMa5jHaIFLsUdIgXmNSDB+4FLkggLz2pPOnj0rdwrJ
PUJSb2+vPNeEuLe9vV3uOzI8UO5NamhoCLlYRos17COCkzGvvaqnp0deqkCv
sLBwaGholCPLJhcpACdjXsM8Rgtcij1CCsxrRILxA5ciFxSY154kCwHC4OCg
vj01NVXuAvL5fLKD3+/X7r1586Zs7OrqCrlYRos17COCkzGvveqNN94Qb+6i
RYvq6urEOl/8KyPg9ddfF/dyZNlkIgXgNBxZBmsYMHAp9giFRAogcowfuBS5
oMC89qTBwUF5VQL9GSREY3x8vGi8fv366BenmDhx4oTWobq6WrQkJSWFWyyj
xRr2EcHJmNee1N/f/+qrr8bExLS3t2uNnZ2d8jIEvb29HFk2mUgBOBnzGuYx
WuBS7BFSYF4jEhSb4FLkQkhUkL1t586d8swS8gREgUAgPz9f/w3S0tJScTMz
M7O/v3/09m6ljIwM0VJSUhJumYwWa9hHBCdjXnvS6dOnxTs7d+5cQ7tcz1dV
VXFk2WQiBeBkzGtvq6mpERsF69atKygo+OSTT4I71NXViW2E3Nzc4uLi+vp6
9dIYLXAp9ggpMK8RCcYPXIpcUGBee9W1a9dmz54t3t/ExMS333572bJl4ve4
uDjtm6I+n09+dzQ5OTkvL0/8K35PT0+/detWuGUyWqxhHxGcjHntSY2NjeKd
jY2N1RcCRkZG5s+fL9pPnz49ypFlk4gUgJMxr71KrPPXrVtnONOUaBHtWh/5
xSG9srIyxTIZLXAp9ggpMK8RCcYPXIpcUGBee1h3d/eqVavkVYyFjIyMM2fO
6Dt0dnZmZmZqmwaig/48FcE4CMUa9hHBmTiyzMMGBwdnzpwp3tzNmzcHAgHZ
WFZWJssHvb29oxxZNolIATgZ89qrPvroI/Hmig2BDz74oKGhQfwrT0BXWVkp
O4iP/aJFdNi3b19bW5tY+ctPBfqTlxowWuBS7BFSYF4jEowfuBS5oMC89jy/
3y8+/Mv9QiH5fL7W1tarV69qe5PCYbRYwz4iOBnz2qsOHTok9/mkpqZu2rRp
+fLl8mZ5ebnswJFlk4YUgJMxr71qzZo14s3Nzc3VWt555x3R8uabb8qbOTk5
4mZBQYHWobCwULSsXr063DIZLXAp9ggpMK8RCcYPXIpcUGBewzxGizXsI4KT
Ma897OTJk/J0Q9KcOXOOHj2q72DhyLIJfsneRArAyZjXXrV69Wrx5m7ZskVr
KSoqEi3Z2dmjt79KJI87bmlp0Tq0tbXJwxAGBgZCLpPRApdij5AC8zqqjIyM
HD9+XF6/ZseOHR9//PHw8LC+w5kzZ/YFEQ8Jt0DGD1yKXFBgXsM8Ros17COC
kzGvPe/69eutra3d3d3hOnBk2UQjBeBkzGuvqqysFG9uQkLCxYsXxc3m5ua5
c+dqVyIQN2VRwLDml2coampqCrlMRgtcij1CCszr6KGda1QvNTX12rVrWp+l
S5dODyIeFW6ZnMwWLkUuhMQZqjFWjBZr2EcEJ2NewzxGizWkAJyMee1Vg4OD
mzdvlpt78lxzQk5Ozo0bN8S9dXV18lgzw6Pkxe7DXaqA0QKXYo+QAvM6emzY
sEG83YmJibt27WpoaCgpKZEV5FWrVskOw8PDsl6cn59fqLN///5wy7Rl/Hzj
oR+47mfy/5egRi4okAswj9FiDfuI4GTMa5jHaLGGFICTMa+9qqenR16qQK+w
sHBoaEjcW1tbK26mpKQYHpWWlibaa2pqQi6T0QKXYo+QAvM6SoiVf1xcnHi7
9bv9jx07JtOhr69P3GxtbQ1ZRFawq1Lw7y+vcdEPlQIHIhcUyAWYx0Eo1rCP
CM7EkWUYK0aLNaQAnIx57VVvvPGGeHMXLVpUV1fn8/nEv6mpqaLl9ddfF/ee
O3dO/L5w4ULDo1JSUkR7bW1tyGXqiw4T/gcA44c9QgaGGuKEPhccoqOjIy0t
LSkpqbe3V2u8efOmHAOtra3i5pEjR8Tvb731lvnFUimgUuBS5IICuQDzGC3W
sI8ITsa8hnmMFmtIATgZ89qT+vv7X3311ZiYGP116js7O+VpJXp7e0W7PCuR
4YHyPEUNDQ0hF8togUuxR0iBeR3NZNVYhIXf7xc3CwoKxM21a9du3bp1+fLl
r7/+elFRkTxnXThUCqgUuBS5oEAuwDxGizXsI4KTMa9hHl88s4YUgDPxbVIP
O336tHhn586da2iX17Ksqqry+Xzy3Zd7hyTty6VdXV0hF8togUuxR0iBeR21
+vv75Rnn1qxZI1uys7OnB5k9e3Zzc3O4hVApoFLgUuSCArkA8xgt1rCPCE7G
vIZ5jBZrSAE4GfPakxobG8U7Gxsbqy8EjIyMzJ8/X7SfPn169IuLF584cULr
UF1dLVqSkpLCLZbRApdij5AC8zo6DQ4OyrrArFmzuru7RUsgEBC/i5bU1NRT
p051dHSIUJg3b55oSUtLk9e4CUalgEqBS5ELCuQCzGO0WMM+IjgZ8xrmMVqs
IQXgZMxrTxocHJw5c6Z4czdv3hwIBGRjWVmZLB/Ik1SXlpaKm5mZmf39/aO3
v1wqjzgoKSkJt1hGC1yKPUIKzOso1NPTk5WVJd76uLi4uro62SjCora29sCB
A/oLGTQ1NcXExIie58+fD7koKgVUClyKXFAgF2Aeo8Ua9hHByZjXMI/RYg0p
ACdjXnvVoUOH5IkjUlNTN23atHz5cnmzvLxcdvD5fPKqBMnJyXl5eeJf8Xt6
evqtW7fCLZPRApdij5AC8zradHZ2yhW+iIBwV6XRW7JkiehcWVkZ8l5bLo1N
pQCRIxcMDKcdm9DngpcwYKxhHxGciRTAWDFarCEF4GTMaw87efKkPN2QNGfO
nKNHj+o7dHZ2ZmZmah0yMjL0V0AOxmiBS7FHSIF5HVU+//xzeeq55OTky5cv
6+8aGhrq6OhoaWkxPEQefaCoFEzUaw2PSgEiRy4okAswj9FiDfuI4GTMa5jH
aLGGFICTMa897/r1662trfI01CH5fD7R4erVq9p5isJhtMCl2COkwLyOHu3t
7YmJieIdz8rK6unpMdwrL3AjtLW1aY19fX3x8fGiUTtJkQGVAioFLkUuKJAL
MI/RYg37iOBkzGuYx2ixhhSAkzGvYR6jBS7FHiEF5nWUCAQCK1asEG/3kiVL
fD7frS8bvX1MwYwZM0SH3Nzc4eFh0SL+zcvLkwcgcEVjKgUeQy4okAsedubM
mX1Bjh8/ru9TV1eXn58vsqC4uLi+vl69QEaLNewjgpMxr2Eeo8UaUgBOxryG
eYwWuBR7hBSY11GipqZmengXL14UfQ4cOCBvJiUlvfvuu4sXLxa/x8bGnjlz
JtxiqRRQKXApckGBXPCwpUuXBkdARkaG1qG0tNRwb1lZmWKBjBZr2EcEJ2Ne
wzxGizWkAJyMeQ3zuLwRXIo9QiFpOwEm4blgu5KSEkWl4NKlS7LboUOH5IUM
pCVLljQ1NSkWS6WASoFLkQsK5IJXDQ8Px8bGivc3Pz+/UGf//v2yQ3t7u+gQ
ExOzb9++trY2LTjOnj0bbpmMFmvYRwQnY17DPEaLNaQAnIx5DfMYLXAp9ggp
MK9hMDIycuXKldbW1v7+/q/sbEuxiUoBIkcuhEQF2dvEil28uXPmzAnXIScn
R3QoKCjQWgoLC0XL6tWrwz2EAWMN+4jgTKQAxooBYw0pAGciBTBWjBa4FHuE
FJjXiATHFFApcClyQYFc8KojR46IN/ett94Kea/f74+JiREdWlpatMa2tjbR
ItoHBgZCPorRYg37iOBkzGuYx2ixhhSAkzGvYR6jxRqxXnXXj93/YeOPPUIK
zGtEgkoBlQKXIhcUyAWvKigoEG/u2rVrt27dunz58tdff72oqOjGjRvy3ubm
ZlkUCAQC+kfJExaFOxMdo8Ua9hHByZjXMI/RYg0pACdjXsM8Ros1pIDt2COk
wLxGJKgUUClwKXJBgVzwquzs7ODr1MyePbu5uVncW1dXF/LcRPLiNeEuVcBo
sYatAzgZ8xrmMVqsIQXgZMxrmMdosYYUsB17hBSY14gElQIqBS5FLiiQC54U
CARmzZol3tzU1NRTp051dHRUV1fPmzdPtKSlpQ0NDdXW1orfU1JSDA8U94r2
mpqakItltFjD1gGcjHkN8xgt1pACcDLmNcxjtFhDCtiOPUIKzGtEgkoBlQKX
IhcUyAVPCgQCtbW1Bw4c6O3t1RqbmprktQnOnz9/7tw58cvChQsND0xJSRHt
4rEhF8tosYatAzgZ8xrmMVqsIQXgZMxrmMdosYYUsB17hBSY14iEPHnFJD8p
lQJEjlwISTsjzSQ8FxxiyZIl4h2vrKxsb28XvyQkJBg6iBbR3tDQEPLh+hMZ
TfyL9Q62DuA0hvOS2f1y4BqMFmtIATgZ8xrmMVqsIQVsxx4hBeY1IsExBVQK
XIpcUCAXPGloaKijo6OlpcXQnpWVJSsFPp9P7iH0+/3avTdv3pSNXV1dIRfL
aLGGrQM4GfMa5jFarCEF4GTMa5jHaLGGFLAde4QUmNeIBJUCKgUuRS4okAue
1NjYKPf5t7W1aY19fX3x8fGisa6ubvSLixefOHFC61BdXS1akpKSwi2W0WIN
WwdwMuY1zGO0WEMKwMmY1zCPQxGtIQVsxx6hkDi+GJGjUkClwKXIBQVywZOG
hoZmzJgh3tzc3Nzh4WHRIv7Ny8sTLcnJyeJe0VJaWipuZmZm9vf3i5vi34yM
DNFSUlISbrGMFmvYOoCTMa9hHqPFGlIATsa8hnmMFmtIAduxR0iBeY1IUCmg
UuBS5IICueBVBw4ckN8QSEpKevfddxcvXix+j42NPXPmjOzg8/nkVQmSk5Pz
8vLEv+L39PT0W7duhVsmo8Uatg7gZMxrmMdosYYUgJMxr2Eeo8UaUsB27BFS
YF4jElQKqBS4FLmgQC542KFDh+QphqQlS5Y0NTXpO3R2dmZmZmodMjIy2tvb
FQtktFjD1gGcjHkN8xgt1pACcDLmNcxjtFhDCtiOPUIKzGtEwpYTWFEpQOTI
hZA4K100GBkZuXLlSmtrqzzFUEg+n090uHr1aiAQUC+NAWMNWwdwJlIAY8WA
sYYUgDORAhgrRos1pIDt2COkwLxGJDimgEqBS5ELCuQCzGO0WMPWAZyMeQ3z
GC3WkAJwMuY1zGO0WEMK2I49QgrMa0SCSgGVApciFxTIBZjHaLGGrQM4GfPa
2zo6OsrLy999992NGzdWVFQMDg4aOtTV1eXn5+fm5hYXF9fX16uXxmixhhSA
kzGvYR6jxRpSwHbsEVJgXiMSVAqoFLgUuaBALsA8Ros1bB3AyZjXHlZVVTVj
xozpOvPnz+/u7tY6lJaWTv+ysrIyxQIZLdaQAnAy5jXMY7RYQwrYjj1CCsxr
RIJKAZUClyIXFMgFmMdosYatAzgZ89qrOjo6YmJixPu7cePGhoaGioqKefPm
iZtr166VHdrb22NjY0Wfffv2tbW1lZSUyGLB2bNnwy2T0WINKQAnY17DPEaL
NaSA7dgjpMC8jiojIyPHjx/fuXPnunXrduzY8fHHHw8PDxv6OP+IYyoFiBy5
oEAuwDxGizVsHcDJmNdetWXLFvHmrly5UmwRyJaamhrREhcXNzQ0JG7m5OSI
mwUFBdpDCgsLRcvq1avDLZPRYg0pACdjXsM8Ros1pIDt2COkwLyOHv39/RkZ
GYYDilNTU69du6b1ccURx1QKEDlyQYFcgHkyKex+Fe7D1gGcSfv4Z/cLwfjz
+/2xsbHize3q6tIaR0ZGTp8+3djYGAgERAd5xEFLS4vWoa2tTbSI9oGBgZCL
ZbRYQwrAyZjXMI/RYg0pYDv2CCkwr6PHhg0bxNudmJi4a9euhoaGkpKSuXPn
ipZVq1bJDm454phKASJHLiiQCzCP0WINWwdwMua1J3V2dop3duHChUNDQ7W1
tUVFRe+///6pU6e04wuam5tlUSAQCOgfKOsLTU1NIRfLaLGGFICTMa9hHqPF
GlLAduwRUmBeRwmxURAXFyfe7v3792uNx44dk7WAvr6+UatHHE/+EKJSgMiR
CyHxbVKMFaPFGrYO4GTMa0+qr68X72xWVpb8wK/Jzs6+cePG6O0TkIqbc+bM
MTxQtCi+OMRosYYUgJMxr2EeG4/WkAK2Y49QSOwRiiodHR1paWlJSUm9vb1a
482bN+UYaG1tddERx1QKEDlyQYFcgHmMFmvYOoCTMa89qaqqStv627hxY3V1
dXFxsfweUV5enuhQW1srfk9JSTE8UGxBiPaampqQi2W0WEMKwMmY197W0dFR
Xl7+7rvviiyoqKgYHBw0dHD+lSs9gBSwHXuEFJjX0ezcuXOyEOD3+110xDGV
AkSOXFAgF2Aeo8Uatg7gZMxrTzp8+LAsExQVFWmNlZWVsvHatWtyu2DhwoWG
B6akpIj22trakIvVH54wga/ec0gBOM30L7P75WCiVFVVzZgxQ/9ez58/v7u7
W+vgiitXegApYDv2CCkwr6NWf3+//I7QmjVrRl11xDGVAkSOXFAgF2Aeo8Ua
tg7gZMxrTxIf5uU+H3muIam3t1ceUyzubW9vF78kJCQYHihaRHtDQ0PIxTJa
rCEF4GTMa6/q6OiQ6/yNGzeKtXpFRcW8efPEzbVr18oObrlypQeQArZjj5AC
8zo6DQ4OZmdni3d/1qxZsoLsoiOOqRQgcuSCArkA8/jimTVsHcCZ+Daph8lC
gGA40URqaqr8qO/z+WQHv9+v3audqrSrqyvkYhkt1pACcDLmtVdt2bJFvLkr
V67UrmUvVv6iJS4ubmhoaNTqlSsn+mV7EilgO/YIKTCvo1BPT09WVpZMhLq6
Otlo+YjjiX2toVApQOTIBQVyAeYxWqxh6wBOxrz2pMHBQXlVAv1XQ0VjfHy8
aLx+/froF4cSnzhxQutQXV0tWpKSksItltFiDSkAJ2Nee5Lf75dnltZXfkdG
Rk6fPt3Y2BgIBFx05UoPIAVsxx4hBeZ1tOns7ExOTpYHF+uPI7Z8xPHkf/2M
SgEiRy4YGE5HOaHPBS9htFjD1gGcjHntVTt37pRHEMsTEAUCgfz8fP03heTp
qTMzM/v7+0dvn6o0IyNDtJSUlIRbJqPFGlIATsa89qTOzk65wh8aGqqtrS0q
Knr//fdPnTqlHV/goitXegApYDv2CCkwr6PK559/Lr8slJycfPnyZf1dLjri
mEoBIkcuKDg/F8T6asmSJc8+++yDDz543333Pf744y+//LL+O5Aa8dF369at
zzzzzDe/+c0HHnjg+eefz8rK0p+iOSTx8fi5556bMmXKrl27vvLF/OUvf5k6
deoTTzxh8Y+xz+HDh/Py8i5cuGBor6ury8/Pz83NLS4urq+vVy/E+aPFmdg6
gJM5f16TAtZcu3Zt9uzZ4v1NTEx8++23ly1bJg8x1r4RJP5j5XeExJaCCAj5
5aL09PRbt26FW6bzR4szkQJwMufPa1LAAvGpXryz4s+XpxjSZGdny/8QF125
0gNIAduxR0jB+fOaFBgv7e3tYrtApkNPT09wB7cccUylAJEjFxTGZV6LYW/h
x8ySxXrp29/+9h1BxGrc8Ml2eHj4F7/4RXDPp5566sqVK4qnWLx4sexZWFio
fjEtLS0PPfSQ6PnP//zPZl68czQ3N7/66qvivT58+LC+XX6hVK+srEyxHOd/
inAmtg7gZKSAh1Ogu7t71apV8vwSQkZGxpkzZ/QdOjs7MzMztQgQHcQWhGKB
pIA1pACcjBTwZApUVVVp6/aNGzeK/8bi4mJ5Vrq8vLxRV1250gNIAduxR0iB
FPBkCgQLBAIrVqwQb/eSJUt8Pt+tL5N93HLEMZUCRI5cUBivXJiImdLT0/Po
o4/KlfYLL7ywc+fOPXv2iI+v999/v2zcvn271lnEhGx88sknxedh0Vk8RLb8
8Ic/NBxXK4koWbhwoZYg6lz49NNP/+mf/kn2dFcu+P1+eQlLQ6Wgvb09NjY2
JiZm3759bW1tYuUv+4T7EtEoWwdWsXUAJyMFoiEFxEq+t7c3XAexsdDa2nr1
6tWQ/0t6pIA1pACcjBTwZAqIz/zyg31RUZHWWFlZKRuvXbvmoitXegApYDv2
CCmQAp5MgWDyovbhXLx4cdQ9RxxTKUDkyAUFJ+fCa6+9JtfDc+fO1befPn36
3nvvFe0PP/ywbOns7Pza174mWh5//HFtZ4jIgj/84Q9yCRUVFYaFf/LJJz/4
wQ/u0AmXC36/f8mSJXfffbfW0125INJTW//rKwXyYOSCggKtRfwPiJbVq1eH
W5RcyMS+XC9i6wDOpK0ZIl8UKRAliABrSAE4GSngyRQ4e/asjHj9aTfE/4w8
ykzc66IrV3oAKWA79ggZGPYSR75AUsD5tK+GhnTp0iXZzRVHHFMpQOTIBQUn
58LPf/5zsRKeNm3awMCA4a5XXnlFrqLldVVWrlwpb65fv17fTazlpk6dKtpf
fPFFffuyZcvuuusu+ZB77rlHkQtihfnYY4/JDuIhd955p7ty4cyZM7IinJ2d
ra8UiLCTWwotLS1a57a2tum3L20W/B8usVFgDVsHcDJSwNspML5IAWtIATgZ
KeDJFJCFAGFwcFDfLg80rqmpcdGVKz2AFLAde4QUSAFPpkCExnTE8eRHA5UC
RI5cCMn5FeSXXnrpe9/73k9+8pPgu5KTk+W6Wh4bK3rKNXx3d7eh509/+lO5
Std/DH7iiSfkw2fNmlVeXq7IhQ8++EDe++ijj1ZVVT333HMuyoXe3l55Ocv6
+vo1a9boKwXNzc2yKGBY88fGxor2pqamkAtk68Aatg7gZKSAh1Ng3PE9UmtI
ATgT2wIeToHBwUF5VQL9aUVFY3x8vGi8fv36qHuuXOkBpIDt2COkQAp4MgUm
DccUUClwKXJBwcm5oPDMM8/IIJBr+0ceeUTc/P73vx/cc9GiRXLFrv+c/OST
T/7yl788efKk+P3gwYPqXPjOd76zatUqeUkXd+WCrA6899572u9apaCurk7c
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
qFmrFFy5cmXlypXyrTdUCsR/Y2xsbExMzL59+9ra2kpKSmS3s2fPhlsa+4io
FLgUuaDg5Fz42c9+JtfYjz32WHoYYlUmO//ud7+TnWfMmCFWfTdv3ty2bds9
99wj1+qiJdyzKHJhTC8gGpACVApcihRQIAVIAfPYQWSNB1KASgEpoEYKRAlS
wBoPpIDbkQIKpIB7U8BCpaCysjI+Pl4rEhkqBTk5OaKxoKBAaxH/J6Jl9erV
4RZoSwXZA/uIYDtyISSHV5DPnz9/hwmHDh2S/S9cuPDwww/LxjvvvFMmwh23
z0dXVFSkeKJwuTDWFxANSAEqBS5FCoRECkikgHnsI7LGAylApcCTKSCRAqSA
eaSANR5IAbcjBRRIAfemgIVKQUxMjHjHV6xYsX37dkOlwO/3y3tbWlq0xra2
NtEi2gcGBkIukG+TUilwKXJBYbxywcKPepklJSVmVstHjx7VHtLV1fX888/f
dddd2r3f/e53xXLUTyRW7LKzIT4svADPIwWoFLgUKaBACpAC5rGPyBoPpACV
AlJAjRSIEqSANR5IAbcjBRRIAfemgIVKwYoVK6qrq0dGRvbu3WuoFDQ3N8ui
QCAQ0D8kNjZWtDc1NYVcIPuIqBS4FLmg4L3Pe4ODg8ePH6+srGxsbAy+8H1U
EX+++K/YuXPnunXrduzY8fHHHw8PDxv6cF17KgVsHTjwhxSIBCkwcbw3WiaH
B1KASgEp4CKkwMTx3miZHB5IAbcjBRS8N6+jJwUsX9FYEA80VArq6upEy5w5
cww9RYviUgXsI6JS4FLkgoL3cgFSf39/RkaG4bL1qamp165d0/pwXXsqBWwd
OPOHFIAzMVqs8UAKUCkgBYBRRotVHkgBtyMFFJjX7jW+lYLa2lrRkpKSYuiZ
lpYm2mtqakIuh31EVApcilxQIBe8asOGDeLNTUxM3LVrV0NDQ0lJydy5c0XL
qlWrZAdr17XnOgVUCtyIFAhpHK9TgCjBgLHGAylApYAUAEbZcrTKAyngdqSA
AvPavca3UnDu3DnRsnDhQkPPlJQU0V5bWxtyOVQKqBS4FLmgQC540tDQUFxc
nHhz9+/frzUeO3ZMbg/29fWNWr2u/YS+7JA8kAJsHdiOFFAgBWAeo8UaD6QA
lQJSABhltFjlgRRwO1JAgXntXuNbKWhvbxctCQkJhp6iRbQ3NDSEXI7+DBXW
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
/fr1+m4iL6ZOnSraX3zxRX37smXL7rrrLvmQe+65J1wuPP/886JdLOH69ev6
9oMHD8qHrFu3zvz/kgeQAlGbAm5HCiiQAl5Ngfb29sTERPH+ZmVl9fT0BHeQ
u4P0Z3mtrq4WLUlJSeGWSQpEbQqwLUAKqJECDuf2q9XYvmInBUgBUkCNFLAF
lQK3/JALtv+QC2Pi5Fx46aWXvve97/3kJz8Jvis5OVmumeW5lEVPuYaXH331
fvrTn4q7RArovzb5xBNPyIeLT8vl5eXhcuHs2bNbtmx58803De179+4NGUOe
x5FlUZsCbkcKhOT8I8tIAcv+f/buPbiK+77/v+1c23j6TdI0jTPNpJ22k05i
120zkz86/mUyk2kmaSdpU//haWaS9I/OAQEWV4GEQBcuQVwE5mIJEBgEFhdb
IAMSyMJgbgYEwoBB3JGQLIyQuAlJ6IKk83v3vKvPLOe6KwmdXZ3nY3aYw57d
PZ/dc/R5nc9nP2e3r68vJydH3tzMzMzW1taeJ+kypaWlssDs2bPb29v9geGm
s2bNkjm7du2KtFnaAgmbArQFRmQKKFJgRKaAFXerIQVIAVIgyNO4Ww0pMPw4
U+CViVyI+0QuOOLmXIjilVde0SDQ2v673/2u/Pf73/9+6JLp6elah1t/Rfvy
yy//6le/OnnypN9yOjjs/WtCPX78WM8si7q6usHsheeQAgmbAl5HCkRBCozI
FDh16pQvsmvXrvkDFyDSuxJIU6ugoEBvZ5CVlWVOJYQiBRI2BWgLkALRkQKu
xd1qSAFSwE8KREUKeDcFhvxMwZkzZ94Pcfz48SirkAvkgicmcsERL+ZCWVmZ
VsvmDjJ6R5sf//jHoQvn5ubqwnv27DEz7969ax7bzIVHjx4dPXo0IyPDnH1+
7bXXBrwLHkUKJGwKeB0pEAUpMCJTYNeuXVHOFJhLqjY2Ns6ePdvMnzVrVkND
Q5TNkgIJmwK0BUiB6EgBd+JuNaQAKaBIgShIAe+mwB//8R+/8847Q7jB7Ozs
0IaDNBCirEIukAuemMgFRzyXC5cvX/7GN77xTOBicceOHfMHTulqRf3rX/86
dPl169bps9u2bQu7QZu5YLaj/uu//quvr29gu+BdpEDCpoDXkQJRkAKkQGtr
a11d3Z07d2LuESmQsClAW4AUiI4UcCHuVkMKkAIGKRAFKeDdFPinf/qn9PT0
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
NjZ++ctfljkvvfRSS0uLzpQs+J//+R/dQkVFRdDGP/7443/4h394xiJ6LsjW
fvazn5mFPZ0LpAApQAq4fCIFFCnwlFRXV8v7HjQQyx9oYUUfUEoKkAKemEgB
R0iBBEwB2gKkACng8okUUKTAsGEcEblALrh8IhfUv/7rv0oN/Pzzz4d+X/3v
//5vrZ+bmprkv4sWLdL/5ufnWxeTvPjc5z4n8//93//dOn/u3Lmf//zndZUv
fvGLdnLhjTfekGWeffbZEZALpAApQAq4fCIFFCnwlJw9e1be97S0tKD5GRkZ
Mv/UqVORVhxJKSD7MgJSQPbC0ykg5R8BKSB7QQqQAt5CW4C2gEtSgLYAKRAd
KTBsGEdELpALLp/IBfXqq69K9fvTn/409KnU1FStn8+ePatLag1/7969oCX/
5V/+RZ6SFOjq6jIz//7v/15XT05OLi8vj5kLUjHqGepJkyb95Cc/8XoukAKk
ACng8okUUKTAU3L+/Hl536dPnx40Py0tTebrIQ3LB2AkGnytQgp4C20B2gK0
BVw+0RZQpMCwYRzR/8c4Infkgo9xROTCQL3yyisaBFrbf/e735X/fv/73w9d
Mj09Xat965fel19++Ve/+tXJkyfl8YEDB6LnQmdnp+bID37wA3k8AnKBFCAF
SAFSwCAFEjAFGhoa5H0fP3580HyZI/MvX74cl1JFIpWq56agXZB61VtT6Lsg
9aq3pqDyD+xOi/GdntZf1NNBCngLbQHaArQFaAsYtAUSMAVCMY4IgNXga5Vh
zoWysjKtyf/5n/9Z5+gdbX784x+HLpybm6sL79mzx8y8e/eueRwzF/TOOJJB
p0+flv+OgFwgBQBYDb5WIQW8pbW1Vd9669gqafjoTP0RNwDYRwp4C20BAFaD
r1VIAa9jHBHjiBhH5P7paf1FPR3DmQtSR33jG9+Qmvlzn/vcsWPH/IEb1mvF
/utf/zp0+XXr1umz27ZtC7vB6Lmwb98+vRLdvHnzdM4IyAVSgBQgBdw/Pa2/
qKeDFPAcvcTEiRMnzJzKykqZM3HixDiWCoBHkQLeQluAtgBtAfdPT+sv6ukg
BbyOcUQAhtaw5cKNGzf0Z2UiJSVFZ7a1tWnV/dvf/jZ0lZKSEl1+48aNYbcZ
JRfu3bv3F3/xF/LUK6+80tvbqzNHQC6QAgCGFingOaWlpVLhz549u729Xf4r
/86aNUvm7Nq1K95FA+A9pIC30BYAMLRIgRGAcUQAhtDw5MKpU6e+9a1vaR3+
6quvPn78WOf39PQ899xzMvM3v/lN6FpFRUW6SnFxcdjNRsmF1157TeY///zz
NTU1ZubIyAVSAMAQIgU8p7W1VceOpqamFhQUyL/yOCsrSw5mvIsGwHtIAc+h
LQBgCJECIwDjiAAMoWHIhd27d0v9rBW41P8mFNQLL7wg83/+85+Hrrh8+XJd
q6KiIuyWI+XChg0bdP6aNWus80dGLpACAIYQKeBFjY2NkgLmErWSAg0NDfEu
FABPIgU8h7YAgCFECowAjCMCMISedi6sWrXqc5/7nNbS06ZN6+vrC1rghz/8
oTz1ox/9KHTd7OxsXbGysjLsxiPlwssvv6zz//ZJX/ziF58JXBNP/1tWVmZ/
R9yDFAAwhEgB75I4qKuru3PnTuhRBQCbSAHPoS0AYAiRAiMD44gADJWnmgtS
O2n9LFVxfn5+2GV++ctfygLf/OY3zbXjjN///vfy1HPPPffw4cOw60bKhZde
eukZG4qKimzuiNuQAgCGCikAAImMFPAi2gIAhgopMJIwjgjA4D29XFiyZIlW
v88///yePXsiLZaenq6L7d+/3zq/s7Pzq1/9qsx/8cUXI60bKRfeeOONKeF8
+9vfloX/3//7f/rfs2fP2tkR1yIFAAweKQAAiYwU8C7aAgAGjxQAAFg9pVy4
cuXKl770JamEv/KVrxw/fjzKkg0NDV/4whdkyddee806v7CwUOv8mTNnRlo3
yv1rwhqpV6UDgAEjBQAgkZECAJDISAEAgNVTyoWf/exnWmO/+OKLWRGYH8n+
7ne/04XHjh3b3Nzc2dm5YcMGvYKcxIrMifQq5AIADBIpANfq7e2VpuWmTZve
fPPNt99+++DBg0G3wDPu3bu3YsWKoKFobvDgwYPS0tKCAHkg/w1a4Pbt2zJ/
1apV8hm+cOFCpB2MF3kLPvroI/l7zM/P37NnT21trXmqpaWlPLLPPvssfqV+
wpkzZ94PEbbLwrWfoqeNFACAREYKAACsnkYuXLx48RkbDh06pMtfuXLlO9/5
js589tlnNRGeCVyPrri4OMoLkQsAMEikANypvb191qxZvifNmDHj7t27QUt2
dXXNmTNHnl2/fn1cihqJ/CEkJydbyz9+/HiZaRY4fvz4uHHjgnawra0tjmW2
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
sszvpBcr5q/nALhEpHFE586d07936/UBWlpa9E/ehdeNsTOsyP0++eSTGTNm
6JGX5s+JEyekspXHMj/eRbPLOhSqoaFBP1pBy+iF6bxyBgcY2bybAvoLgqAa
Xv4b/Zun1lETJkx4+gV0Jkr/ic0Rvy5hTQH3f4qARCbf06Qy9AUuEWYdwR6W
C/t49caOJSUl1pkHDx7Ub9HyWL5I5+bmBl2oQb9pHzhwYFjLGs7169d9gd/B
Wa+VIY/1+kjWnw9o71zQnrqBGallOhL9gZsEaU9RaGeXCz9FACJ9z8zJydHq
9Gi/rKwsmfPWW2/JY1f9vlW7fRYuXGidqVdCFnv37tXy6w0LkpOT5bGrOlhi
ftV3+S/LnPZihf31HACXiDKOSPt4RUdHh3W+1gAuvG6M/WFF7idfsPWnW93d
3fpN23qPTveIORRK9kI/Rdbb8XR2durMpqamYS8ygCd4OgXy8/NDzxRIzSMz
5dupPzA4p66uLugrqF4VzUNnCuyP+B1+MVPA/Z8iIGH19fVpL1BmZqZ8Yet5
UujyLuzj1ZH248ePl6pe59y/f187W7Zs2eIPnCnQ8ZnmWg36gwKpguTraNzK
3c/Ulm+//bYec/lXr5InO2X98qxX23PhT4ylqaKXfs3Ly9MrTsu/BQUFmlnc
0RhwvyjfM3V+JO75Fie1pfaZVFVVWefrpZMi0caCG9j5qu/aX5ZZhe3Fsv/r
OQBuEH0ckTTq9UrC1iF/MlP/5F11bTQVc1iRy/X29sp37Hnz5lmvxqBdXqF3
BHYJO0OhNPWkpWYW0J2aOHFiHEoMwMLrKSAVvi/k5wM6WGjDhg3+/lx48803
rQts375dZubk5AxrWW0I23/iaMTv8IuZAu7/FAEJy1wuIKxr164FLe/CPt6u
ri497Th27NilS5cWFBTor1anTp2qVz/u7OzUBV5//XX5mq0XdpAKqra2Nt5l
/z960wT9tr9mzZqZM2fqf0+ePGmWkd3U32HpLXjcZv/+/Vpm+W6/evVq3QU5
yGfOnAld2IWfIiCRRf+eKV+qNz9Jb0e7cOFCeeye4St6TSGpJ4POTsrX1KDy
6ygj+Woqj99///14FdjK5ld91/6yLGYvlv1fzwGIOzvjiDZt2uQL3I5WLxog
q+hVHUIvO+8GMYcVuZ/e51diS/8rla1ez//QoUPxLVgkdoZC6dit2bNnt7e3
y3/lX/31x65du+JceiCxjYAUkEpee6ErKip0TmNjo3YT6Q2LpZ7R7ouamhpd
QB7o6Ec3XHciSGj/idMRv8PPTgq4/FMEJCxTQ4YlTfug5cvLy815WPdoaWkp
KCjQjnSVl5dnvSbGrVu39AaRaurUqdbhK25w9OhR68Dd9PT0oLGXsgu+wF0s
ddC+C0lTxboLklkmdoO481MEJKYBfM90530K5Gu/L/BjsZhLuu0+BfbfAtf+
sswfqxfL/q/nAMSdnXFE8jc+adIkX+AqDStXrtQ7mI8ZM8adF0mOOazI/fQX
EL7AT+GkmaPllwfxLlc0MYdCSeTpjqSmpsqboudusrKyXNLNBSSskZEC27Zt
0wJL2VavXq1fRFesWKG3rXz06FF6erousGDBAqlOdfjKwoULXVgFhZ4pcDri
Ny5ipoD7P0UAvK67u7shIFKfg16M7vbt25oObiOlampqunr1aktLS7zLMkCy
C83NzXKQdWgQAPcbwPdMd54p0N8L5+fnx1zSbWcKbL4FLv9lWcxeLDu/ngPg
BjbHEd27dy83N9cM1Jk1a1bYX5K6RMxhRe5XXl6uPV1q1apV7j/NEXMoVGNj
4+zZs80C8ilyZ8YBCWXEpMCBAwcmTpyoxZOvpvL909pT1NzcLEFg9ksq2E2b
NrnwNIE/3EhLpyN+4yVmCrj/UwQAAJBQBvA9880335SnPvroo+EvbRSrV6+W
UgXdvD6s+vp6X+CHrsNQKjtsvgXu/2VZzF6smI0FAJ7T1dUllapXRrnEHFbk
clr+Tz/91P3nCAw7Q6FaW1vr6uru3LnT19c3nGUDMHjuT4Hm5uabN29GGiza
0dEh9ap8zXbnaNIRwE4KuP9TBAAAAMCpmL1YI+DXcwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPCUdHR0VFRVr
1qzJzMzMysqSB+Xl5a2trfEuV2z3798v6NfW1ha6wN27d/XZ9957bwhft7u7
u6mpSR/X1NTI9vfs2eNoC729vWvXri2IoLCwcAhLCwAAAAAAAABAFJ9++umM
GTN8IdLS0uSpeJcuBimhKfCRI0dCFygvL9dnZ82aNVQveu3atfT09K1bt+p/
KysrZfu5ubmONvL48ePQY26MGTNmqEoLAAAAOMI4IqcYRwRgJCEFnCIFAIwY
ixYt8vl8U6dOPXz4cH3AkSNHUlNTZeakSZN6enriXcBorGcK3njjjdAFZs+e
PeRnCrZv3y4bHKozBRJPR0OcOHFiqEoLADHRFnCKtgCAEYxxRE4xjgjASEIK
OEUKABgx2traRo8eLdVOVVWVdX51dbVWR5cuXYpX2eywpoDsSFA30a1bt8yz
rj1TcOPGjaEqGAAMAG0Bp2gLABjZGEfkFOOIAIwkpIBTpACAEePmzZtaF9XV
1QU9tWLFirlz50qNpP+VWmvv3r0yc8aMGRMmTMjIyCgqKjIjTq9evbp8+fKP
PvpIlpfaePLkyYsXLz506JA/cNIhLy9vypQpmZmZJSUl3d3d1le5ePFifn5+
enr6tGnTZAunTp1yVH5NgaSkpHnz5skDCTLrszt37pSZ2dnZQSnw8OHDLVu2
zJkzR2JO9nHTpk0tLS3mWdkv2c07d+7IA1k3JSVl6dKln3zyiT4rlX9aWpps
UIJSClxTU2NS4OTJk7rvss133nmno6MjSsntnCm4fPmyvISEspREi3H+/HmZ
39nZKUk0f/58Lf/mzZuDhv729fXJWnJg5bAvWLBg//798l/ZlLxN/sAxl8dl
ZWXWVXbs2GEWUFHeGn27ZZuSVvJAXkUOrxTj0aNH1m2eO3du48aNM2fOlO8Y
8nk4ffq0zJSvGbKKfCTkCFgXljSU+eY4Axg2tAWcoi0AYARjHNEAMI4IwIhB
CgwAKQBgxOjr60tJSZG6KCsr69SpU52dnWEX6+3tnTNnjtZaSUlJo0aN0sdp
aWnaiaQ1oTzle9L69euDZhYXF5vNlpWV6cwxY8aMGzdOH5va1Q5zpmDv3r2h
3UQZGRkyc/fu3dYUkGiYMGGCvtb48eP1waRJk0xtrGNrJ0+eHLQv2lVujoM6
c+aM7nuoBQsWROlhs5MCR48eDdrmwYMH7969m56erv81OyJvouyXWbGkpMTM
l2NrVpeiyrOHDx+Wx8uXL7e+1uLFi80CMd8a3eWxY8cGFS87O1s+UbrMsWPH
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
o7Fz585Dhw5Ff1EACIu2AG0BALBiHBHjiAAkMlKAFACAwevu7r5//37oUM/o
2tvba2trGxsbrV39MUm9LavIiqbmj1kY2X59fX2ki1ooqX6l3o60TSHVtdS0
+/fvt1/UwZDyRNlNmSlPNTU1ydEYnvIAGJFoC9AWAAArxhH5GUcEIIGRAn5S
AAAQi/b8jBs3rr29Pd5lAYAhQ1vAT1sAAJ4CxhENOcYRAfAQUmDIkQIA4Abb
t2+fPHmydsjI43gXBwDciLbAkKMtAABuxjgiAEhkpAAAJKbS0lI9TZCfnx/9
FpYAgJGKtgAAQDGOCAASGSkAAImst7f3s88+a2lpiXdBAABxQFsAAGDFOCIA
SGSkAAAAAJCYaAsAAKwYRwQAiYwUAAAAABITbQEAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
++67NdWF0dHRysrK3bt3O+xjY2M+n6+ioqKqqqq1tTXUfaQKPHzU6OLtzfP5
MCeogMEqcO3aNbVssSIlJeUPf/iD/cOUAKqxsTE9PV0VSEtLq6+vD1MhY0RR
N2zdVYBMgZFRgAIVMFgF5h1UYF4aNkBCgQqgArGGcaSI0CVqMGnUSKMwgUzB
s88++81vfvMHP/hB4EvLly9Xvvovf/mLKqk8vGPpRuGHP/yhcumTk5OW8dvf
/rY6fenSpW+++WYYXairq1OvfuMb32hvb//+97+vqS5s3rxZvuvs7Gy7cXR0
NCsrK8lGTk5OmEn88PBRo4u3N8/nw5ygAsargMRW58+f7+/vv337dtACfr//
ypUrUmBiYiJ8VYwRRd2wdVcBMgVGRgEKVMB4FZhHUIF5adgACQUqgArEGsaR
IkKXqMGkUSONwgQyBWF48sknlRAob//II4/I4be+9a3Akjk5OcqxnzlzxjI+
/vjjP/nJT44fPz4zu6RjeF342te+VlJS8sknn8ihprpw5MgRlQhwZAq2bt0q
xoKCgt7e3u7u7ry8PDlct25dqHrw8FGji7c3z+fDnKACXlCB+YIxoqgbtu4q
QKbAyChAgQqgAu5BBWLdsAEWHlQAFYg187hwthfQJWowadRIozAh1jHCvK90
v2C64PP5lCf/3ve+pyxqRZunnnoqsLC4dFX4wIEDlnF4eNjaD68LIgf2eyx1
1IWrV6+qJSwdmYKenh41GYU1j5/sqFms+/r6glaFh48aXby9eT4fwoAKKIxX
gXkkXipgwBiR7ipApsCwKECBCihQAfeQKYhpwwaIC6gAKhBrGESKCF2iBpNG
jTQKE3imIChnz5790pe+JM550aJF7e3tM7ML1ivH/rOf/SywfFVVlXp17969
QSsMrwsOtNOFqampwsJC+Za3bdvmyBTU1dWJpayszF5+06ZNYqypqQlaGx4+
anTx9ub5fJgTVMBsFZhfGCOKumHrrgJkCoyMAhSoACrgHlQgdg0bIF6gAqhA
rGEcKSJ0iRpMGjXSKEwgUxDIhQsX1GNlwrJly5RxbGxMLSvzi1/8IvCU+vp6
VX7nzp1B6zRbF/bt2ydfcUlJSV9fnyNTsGHDBrE0Njbay/t8PjGWlpYGrQ0P
HzW6eHvzfD7MCSpgtgrML4wRRd2wdVcBMgVGRgEKVAAVcA8qEKOGDRBHUAFU
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
GEtLS4OejgqgArpsqIB7UIHEIfFHhKKDNhYRuuiFvkqhtUCQKfAU586de+SR
R0QX0tPT430tISE6IDrQZdPa+RMdeJNYqMDg4GBxcbH9kQF7poB5J1ABVCBh
N1TAgyxALNDS0pI0u6jx+fPnZz7NGogxsEyolDEqgArosqEC7kEFEgQtRoSi
gzYWEbrohb5KobVAkClQjI6Ovvzyy0899dRDDz30hS984bHHHnvuuec6OzsD
S/r9/u3btz/55JNf/vKXv/jFLz799NP5+fk3btwIX//09PT3v//9e+65Z+/e
vUELjIyMrFy58n/+z//5X/7Lf/n617/+L//yLxs3bpycnJyH9/YpmzZt+tu/
/VsRhccff/w///M/57Hm+YXogOhAl01r50904AAViJrGxka1Wn1zc7NKAdgz
Bcw7gQqgAgm7oQJ2UIF54cSJE8nJyfJ1W/MRyYcjh21tbfZi8sGKMS8vL2gl
qAAqoMuGCrgHFfCICsQRdcNSvK9CG3TRC32VQmuBiLU6WHcYzktt8lFHsc1Z
bUdHx1e/+tW7AhA3npWVZS95+/btH//4x4Eln3jiiTBTLgurVq1SJR3TeCre
f//9r3zlK4HV/uM//uOciuMSEaZHHnnk/vvv//Wvf33r1q15qTNGxMvDEx3g
8z3l/BcsOkAFFAarwJ/+9KedO3eqt5+WlubIFDDvBCqACiTspuMYESoQNQsQ
C7S0tKg0gXh++aCUsbCwUCzt7e32km1tbWLMz88PWo/9IbVYXGcoUAFUABWY
X5I+y7zUiQpETQKOCA0ODu7fv3/btm1btmxpaGi4dOmSo8DY2JhEDRUVFVVV
Va2traOjo2FqI00QEbrohb5KobVA6PVMQRRNYk5duH79+je+8Q3lh5955pnq
6uo33nhj9erVDzzwgDLu3LnTKiwyoYyPP/54ZWWlFJZTlOW73/2u+N7A+kVK
Vq5cabn6QF0Qd/ff//t/V6/+y7/8i7jKffv2/fSnP1WW733ve3f+uSnEx4oA
zVdtsYMxIqIDXTatnf+C+X8FKuARFQh8poB5J1ABVCBhN1RAgQrMC+oJMqGi
osI+BlVeXi7GQ4cO2QsfPHhQjCUlJUGrQgVQAV02VMA9qIDxKhApra2tKnCw
SE5Oliu0CsjHIp+2vUBOTk6YdAyZgojQRS/0VQqtBYJMwSuvvKI88Isvvmi3
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
GBjwW+F73/ue3PT9738/8L7p6el6x1BHy4fKhe9+97u6/Juv+8IXvvAZ32/i
6Z/l5eU2n4UzUTUGYESQAq5DZRmAEUQKuA4pAGAEkQIAAKvRy4VFixZp/yxd
cW5ubtB1fv7zn8sKX/va18xvxxm//vWv5aY333zzxYsXQe8bKhe+853vfMaG
oqIiO88CAMY3UsB1qCwDMIJIAdchBQCMIFIA44N8hM6ePbtt27Y1a9Zs3bq1
srLSr4DF6sSJE3l5ebdv3x7LFoZRXV2tLd++ffvFixf9btWnJp/Y9evXy8e+
tbU1Jo0Mr729fdOmTR9++KHf8ra2NvnSkucjV+TPmDTPePr0aU5OTpgfbBz+
CuPAKOXCihUrtPt96623Dhw4EGq1lJQUXc3vRe7q6vrKV74iy995551Q9w2V
CytXrpwRzNe//nVZ+Q/+4A/0z8uXL9t4eQBgnCMFXIrKMgAjghRwKVIAwIgg
BTAOvHr1atGiRZ7XpaamBh1Ur6urS0xMlBVOnDgx9k31I2m+Zs0av5bLEjN3
Jk9t2bJlfis4cJh67dq10rBZs2ZZF964cWPKlCnWlk+dOlUWxqqR3d3dGRkZ
0owtW7aM0grjw2jkwu3bt7/4xS9KJ/zlL3/57NmzYdaUL7ef//znZc1f/vKX
1uX5+fna5/udrssqzPlrguJX6QAgECkAAPGMFACAeEYKYBzYuHGjx+OZNm3a
zp07b9269dFHH82YMUOWZGdn+63Z3d2dmpqqo9ZOmCn4+OOP9RcFd+3aJS2X
fydMmCBLjhw5oisUFhZq/eChQ4fk/0tlZeXkyZMTExNjON4eSF5JfUmtMwV9
fX0zZ86UhRkZGefPn79w4UJmZqb8KQt7enrGvpEtLS3vvfeetjPoOP/wVxg3
RiMXfvKTn2iP/c477ywMQT7huvKvfvUrXXnSpEnysnd1dRUUFOgvyEmsyJJQ
j0IujHtNTU3ST+bm5hYVFZ07d66joyPUmqEKnWKusbHx4MGDGzZskOZJxx54
0Ff4KrOYa25u3rdvn8Tu+vXr9+zZU19f77dCf3//qVOn5P+svE0HDhyoq6uL
RTPDifgpevnyZXl5ubxHmzdvltiNw7MBkgIAEM9IAQCIZ6QA3K6np2fixIke
j6eiosIsPH36tI7oyv6+dWUdeHfOTMHq1aulJWvXrjVL1q9fL0tWrlzp9Q1W
aFOPHz9uVtCnNmfOnBg0N5jHjx8nJSUFzhTcu3dPF5r/7A8fPtQld+/eHeNG
HjlyxDQy6Dj/8FcYT0Y8F27cuPEZG8zn/Pbt29/4xjd04RtvvKGJ8Bnf79GV
lpaGeSByYXw7c+aMzqUa6enpoX7TLGihU8zJUzA/IWu6zadPn+qtEavMYq6y
stLvLUhISLCe+Kmzs1Mnha3M3LcTRPwUtbe3T58+3bpCSkpKmK+j4xIpAADx
jBQAgHhGCsDtGhsbFyxY8O677z5//tws7Orq0h38+/fvm4WXLl3SMfalS5c6
ZKbg/fff9xt2lo+9LJEWyvWamhq5npSUZB0m6uvr019Pkicegxa/ThqzePFi
aYyWdVgH5erq6vQtMCMwHR0dOj5z/fr1MW5nQkKCPG5WVpZOFQWO8w9/hfFE
OvkhXMJs8KOPPrKTC6dOnTJ3aW5u/tnPfva5z33O3Pqtb31LthO+5ZIsunL4
+DB+/OMfy8rf/va37ayM2JKPhE4Kr169+urVq6dPn5aeX/5cvnx54MpBC51i
Tjpt7Uk2bdp069atQ4cOaeFVTk6OrhCxyiy2Hj58qO3Jzs4+d+7cxYsXpeX6
OktrdR3tISWRDx48KAu3bdumK0icxbbxys6nKC8vT5ZkZmZKm+U77cKFC+XP
3/72tzFs9tgjBeB8QQvHZOHvgnHOZF/EqquozrwWW6Fq92SHK/AtCP87A2OM
yrKISAE4lv3TIDq2vtgIevZM5xfnhqkvfv78+cHQHj16FMNmW4VPAed/lxgD
pADGpU8//VTHW7q7u3WJ9FrJycmy8ObNm3okvxNmCo4cOeLx/Xr/nTt3vL7R
df3dJD1E85NPPvEElA9IP6YDL04418bevXt11EjnBayDcpJx+oIXFhbK9+3O
zs7i4mL5c/LkyWP/60NZWVkSAdIkSdug4/zDXwGjQT42smsp/01qamqcc1g1
YkJ6RR2CNr36lStXZMmECRP8fsAnVKFTzEm/IU167733zIe5urra4/t9Oe0V
w1eZxZzsFEhjpGPv6+vTJfJE5s2bJwt1L0yehfTw8qfsC5h7aYnBzp07Y9Po
10X8FMk3BPkzMTHRHHsgV3R+xIF7avGAFEAoQQvHLl686AlGvlHHqp1WEauu
ojrzWsyFqt1LT08PfAvkecWkkYGoLHMXUgBWUZ0G0Zn1xUbQs2c6vzg3fH3x
3bt3g6awOnnyZGwbryKmgMO/S8QbUgAjRb5m61GCq1evNgt1BGbHjh3muhNm
CuRjv3nzZhNzemXZsmUvXrzwDv5cj/S95rcpvL6eTVeTK7Fr+P+6c+eOtE2a
Lfsv+ltDfkF87do1nSyY6OPx1UfE9mXfv3+/J+w4//BXADAabt68WVpaav2G
Kf2kdobWIZQwhU6x1d3drV9Km5ubzUL5tiPfOeVrz8DAgDdSlVnMFRcXy+vp
V8hZUlLiGSyLkEQ7dOhQfn6+9cicrVu3OqfPjPgp2rVrl9+XB6E/CSXPdKyb
CyCEUIVjegTLb37zm+LXOeQ4xohVV/bPvBZzod6C3t5eDbuioiLrW2D9kdgY
orIMcK+oToPozPpiI9TZMx1enBuxvvjp06fFAebMmaMjQg8ePIj1M7CVAg7/
LgFgCDo7O/XHhaZMmWIG2I8dOyZL5Jue9bhNJ8wUtLW1aWOspBfSdkoaSrR5
fMegat3rixcvzCxzZWVlDFsur3NKSoo0Q6uJg84UyCvs94vckuNjf5ICK2YK
gPGho6MjPz9f/jPKtzvr8jCFTrHV1NQk7Zk3b55075cvXy4tLS0pKZF9HOuh
EeGrzJwpKytLWrhr166gt8p+jU6Cyw7dGDfMjsBPkU7WlJWVWVfTSoRVq1bF
oo0A/IUpHNMhC/naH6u2hRGx6iqqM6/FVpi34P79+7Jw+vTpsWpbeFSWAe5l
/zSIjq0vNoKePdP5xbkR64sDtba26pOK+WGuyk6VupO/SwAYgra2toyMDJ2y
vHbtmi5sbGyUpJD/++Yn1JwzU7BixQqPr6ZVWtve3i7/6uSymdPU36bw+I7G
T09P18jTX7o+d+5cDFuuP6Oxfv16/TNwpkBPsqATH60+euipNN78ovXYY6YA
cLvm5uZly5bpbvv06dOtx9hELHSKIR18kISSxlvnT5cuXapFZN5IVWYOpLPw
8prX1tb63STfw2fPnq1PQTpMp/3OdqhPkU58+O0a6NPkgFLACcIXjumBi4E9
khNErLqyf+a12Ar/Fpw8edLJU6tUlgHuZfM0iI6tLzZCnT3T+cW5EeuL/QwM
DCxfvtw6ahRzdqrUnfxdAkC0mpqa9D/11KlTrWPRuuO/aNGi04O0jPSDDz6Q
69Yf9hljr169SkxMTEhIMNPiXt+z0LwzuwlXrlwxtWnyLKqqqvT3P2V5jBr+
vz8rpO2pqKjQl1SP450yZYpc14ZpZPiFgg6CFRUVxajhzBQArqffrtWMGTOu
Xr2qy+0UOsWQ+eE4j++MxufOndu9e7cePpqXl6frhK8yc5rq6mqdtvbbX1A6
a6/0bDVj38IwQn2KtNkSZNaVJXY9vrLEWLQUwGvCFI5JP6P/qQ8ePPj+++/L
f+eNGzdKTxXD1oZnp+oq8MxrMRe+dm/79u06ZJSfn7948eLly5eXlpY6dr6b
yjLARWyeBtGx9cUqqrNnOrw4V4WpL9aDbaZMmfLs2bOxb5gdgSnguu8SAMJ4
8OCBnnxqzpw5Dx8+tN7kd1IqPzH8X68nLJ4xY4bfcj2XmV99lnRZ+gNEkoNa
WdDU1DR2bX2d9vmhpKenewefhd9PJOlTTklJiVHDmSkAXE/6wJaWlmvXrq1b
t077nE8//dRro9AptszPpZaWlpqF+nNDnsGDWCJWmTmHpIBOE8hX6KD1AvKM
5G2S79j6G3qLFy8e+0aGEepTpAeh+eWv/vqH7CnEqLEA/k/4wrEbN24E/V66
efPm2DU5OJtVV0HPvBZbEWv39BBZP8nJyU776R4qywA3ingaRCfXFyubZ890
eHGuEaa+WNqsb9bevXtj0rbwQqWAi75LAAivoaFh2rRpuiNvPWu5kq5p++u0
15WeQa77TSuMJf19HumdrIcJ9ff367jKJ598ItfXrl27ePFi6/k6z50754n1
73/evXvX7yXNzc3VyJbrv/vd72QdLTTbvXu39Y6VlZUeX2VEjBrOTAEwrqSl
pXl8RxbZKXSKratXr2oLrYdWPn/+XMfb5VabVWZOoD/OIDZs2BCx3uHChQu6
cmA6O4T5FMl1zbLDhw9bV5APlceRZxQF4krEwrFDhw5pb7Njx466urr79+9v
2rRJlzjk55ENO1VXQc+8FlsR34KBgQFprSxMTU2Vzr+xsVF2W/QMpAsWLHBU
fRyVZYAbhT8NosPri73RnD3T4cW5Knx9se4CyN6NMwsKQqWAi75LAAhDvpTq
4R+ys9/e3t73uqB3cch5CiTL9PQumzdvlmehC7W+dcKECToupIcSbd++XW9t
bW2dO3euLDl+/HjM2h1MYBDr+W6mTp1qflhVMkJ/HirU+W7GADMFgEu1tLTI
Vzi/0ZIDBw7oiISdQqfYamho0MaYs2UprRqQb9pRVZnFikRVUVGRPpHS0lKT
XKq7u1t21sxJglRvb68mXWzPraPCf4rk+rZt2zyv130I+dPj+82oMW0rgNdF
LBxrbm6WrlL6Uuu99Dv/0qVLx7StkUSsugp65rWYi/gWSChcvnz56NGj1tnt
2tpaHUq6cePGWLc4NCrLANeJeBpEh9cXR3X2TIcX53pt1BdrrbT0sWPfNjtC
pYCLvksACMOc8zeoO3fuBN7FITMF4vjx49rO1NTUDz74QL+deiznu9eD8HWk
a+3atfo7dXIlts0OFBjE3d3dOgI2adKkVatW5eXlaeNlnRjOiTNTALjUypUr
5b/ezp07rQvlT4+vQMxOoVNsdXZ2apW0OWRFF+qvyT179ixilVksWu2voKBA
98j8fllOybugT8F6IjZzsrmbN2+OYUuDC/8p8g4e6zV//nzrCpplR48eHdO2
ArAYcuGYHtM4bdq0sWytfUGrrkKdeS22hlO7p6VbR44cGbPWRoXKMsAVwp8G
0fn1xUM7e6Yzi3Mj1he3tLToCk74/h+RNQWCcvh3CQCBPvroozAzBaYYzWrN
mjVy06lTp8a+tYHOnz+vA0Fq+vTpfg07ePCgHpCpJBwdWH1WX18vbZs7d651
4fPnz/Py8nSuWa1duza2BdTyYkozCgoKRm8FAKNBD/yWb/vmJ+Pu3bunw+zl
5eWB6zvtOCLv4PHq0k/qDxCZ4/PnzZvntVdlFlt6Yk1x8uRJv/K9/v5+r6V8
YOvWrVrTJ/9qxe7UqVOdcDrOiJ8ieRd0Utv89IQkssf3I9t6qiAAMWGncKyt
re3+/ft+YymXL192yN69zaqrMGdeiy07b0FPT09jY6P0q3731foIJ8wUUFkG
uFf40yA6v7444tkznV+c641UX2zo70ukpaWNbesii5gCDv8uASCuPHv2THqk
UKPo8sW7oaFB9h0cOEcQkTZeOGGYCIBLdXV16a+xeXyHf69du1aPVJe9hqCH
sjhwpqC1tVVP7CXfM9etW5eZmenxVT2YQ0YjVpnFluxkhdq7Wblypa5z8uRJ
XSJ7Qxs3bpw/f77+ef78+dg2Xtn5FO3Zs8fjq5tY5aOT3Q7ZOwPilv0zZK1Z
s8Z6Rz3uMSsrK0YN///sVF2FP/NabNl5C8xvg5jf1hCy86ITsk74GSUqywD3
Cn8aROfXF0c8e6bzi3O9keqLDf0RD783ywkipoDDv0sAAADAePr0qX7nV4mJ
iVu3brV+l7YKWugUc/IUsrOzTaWV7NdcunTJukLEKrNY6e/vlxc84kyB1/d7
ztaDplJSUpwwOmRE/BQNDAyUlZWZ8+XJDqYDd3MABE4Hmyrj2tpaXSJX9P/y
sWPHYtTM/y9i1dUQzrwWW4FvQU9Pj77ga9eu1Z+tln/z8vI8vhIJJ5zRmMoy
wL2iPQ2iA48a8uP3m9jOL86NWF9szJs3z5lH2kRMAYd/lwAAAICfjo4O+cLW
0NAQ9ORZriBf9evr68P8oFD4KjPnk52F5ubmmpoaJ/xoUlARP0XyFB49eiQr
+J2BGoBDBA4Byf/rlJQU3cFfunSpKRpatmyZQ0baw1ddDeHMa7EVdBTu6NGj
2uB33313w4YN+hzljfCbFo8VKssA94r2NIiumynwOr441059sdf3TmnPKV+k
Y9jaoCKmgPO/SwAAAAAAAKughWMtLS2yU28GLiZPnrxt2zZH7dqHqboawpnX
YitU7d7x48etzzEtLc0cmekEVJYB7hXVaRCdWV9sFfTsmY4tzrVfX9zY2Ki9
qzMP64qYAs7/LgEAAAAAAOzo7OxsaGhobGz0+zEEh3B+1dXwyXNsaWm5f//+
q1evYt2W4KgsA9xr3J8GMR5iIuYipoDDv0sAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAArnDr1q3i4uLs7Oy5c+cuX75crl+9ejXWjbLlyJEjeT7Hjx8P
ukJFRYWuUF9fP4KP29PT09zcrNdra2tl+wcOHIhqC9XV1XmhueX1BwAAAAAA
AAC43cDAwM6dOz3BlJaW9vf3x7qBEaxdu1ZbO2fOHHkufrf29vZOnTpVV/jk
k09G6kHv3LmTkpJSXFysf547d062n52dHdVGdu3aFfRlV9HOOwAAAAAAAAAA
MDS3bt3SoemNGzfevHmzsbFRlmzZskUXHj58ONYNjMDMFIi7d+/63Xrp0iVz
6wjOFOgg/4jMFCxcuPB0MPJGjFRrAcAPdWTRoo4MAAAAAACMbzt27PB4POnp
6X4H5GdlZcnyZcuWxaphNllnCuS5+N2al5fn8JmC1atXj1SrACAi6siGgDoy
AAAAAAAw7q1fvz7oePW1a9fS0tKys7PNwFF9ff2WLVuysrKSk5NnzJghN1VX
V5v1a2pqZCOnTp06ffr0ypUrp0+fvnz5cj3mUza1du1auYtscPfu3T09PeZe
XV1du3btWrJkiWwzMzNz+/bt7e3tUbVfR42WLl0q/86ePds6cNTd3Z2UlDRl
ypQ5c+b4jRrJ9VWrVs3xkWafP3/e74mcPHmyqqpKrkizFy1aJA3r6OjQFYqL
i+fOnavjVLJCbW2tGTWS7ehzl+eyY8eOzs7OMC23M1NQWFiYk5Nz48YN2aCO
U8mTkuWyJDc3V5bIU5YtWN8I1djYWFpamp6eLk3duHHjw4cPZTtFRUV6a35+
vtyrpaXFur4sMSt4I701sqZs8MmTJ3JFHmXmzJnyel65csWvGVevXpWnMH/+
/FmzZsnnQd8C+SDJY8kb19vba115z549sjxwIwBGEHVkQ0AdGYBxhsqyaFFZ
BmA8IQWiRQoAiB/Hjh3zeDwJCQklJSVhRiqkW5N1dPhl0qRJZijmxIkTuoKO
nEyYMMHvOMktW7b4LSwtLdW7tLa2pqSk6MJp06bplZkzZ0Y1YKKjRh999NG7
774rV+7cuWNuqqqqkiWbN2+eP3++ddSoqKhIH2uij2mn9YlYn6MyZRcZGRnW
5ZcuXdK7BFq6dGlfX1+oltuZKdApicmTJ+sGZ82a1d/fX15ebtqflJSk180Q
lnj69OmMGTN0Bb2iW0hNTdUVZDvyZ11dnblLTU2NdYWIb42sKUumT5/u95St
cxZnzpwx7UxMTNTr169f7+jo0GZbx/Fevnyp78XDhw/DvCAAhok6siGgjgzA
uEFl2RBQWQZg3CAFhoAUABBXOjo69IB809/m5+dXVVX5Hdu/aNEiuTUnJ6e1
tVU65Nra2sWLF8uSrKwsXcGMli9ZsqSpqenx48fvvfeeLsnIyLhy5Yo8UGFh
occ34Kx30XKG1NRUHRx+9uyZtmT58uX2269JUV5eXlBQ4Hl9wFxvunbtmnWm
oLq6Wlt18ODBPp/Dhw/rJIiOcpsnIo25evVqZ2fnkSNHdMmtW7d0y0FHjfSZ
Pnjw4OXLl/v379cl8meolutG5s6duyuAGcPXmQJpngRHZWWlPFBDQ4O2du/e
vdJ4ifKTJ0/qXExNTY3eKzMzU5NL6yDk3dQV7M8URHxrdKZANisNe/r0aXNz
88KFC2WJvOm6gnxC9EHLysqknfKa6BuUnp4ubd60aZNcz83NNQ3QGStpuf23
HsAQUEdGHZmXOjIgjlFZNgRUlgEYN0iBISAFAMSbnp4e6fTMoeMqMTGxrKxM
B2FevnyZm5ubmZlpHWeQ3kxWS0lJ0T+1t0xISGhra7OuIBoaGnRJU1OTLunr
63vy5Ilel9XMNmVNXWj/wHIzU3D9+nXrwFFHR8fEiROTk5P7+/utMwXyROT6
hg0brBvJz8/XoSfzROS+5omItLQ0WXjmzBn9M2hSWJ+7PKjWOFjHo/yEmVM+
evSorqPDU1u3bjX30hCXl906PqZPat26dXJd2qBvn/XN0jIKmzMFdt4anSn4
8MMPzQoXLlyQJfPmzdM/9+3bJ3+uXLnSrNDZ2SnNzsjIqK+vl+8k+iK/evVK
b9XjmT/++ONQLxeAEUEdmWmn9YlQR0YdGRAnqCwbAirLAIwbpMAQkAIA4lN/
f/+dO3f27dsn6WD28XXw2Xjy5MmVK1cqKioKCgp0VGH27Nl6k/aWs2bNMivf
v3/f4xt+MUs6Ojp0s93d3Z9++qleLykp2WOhCy9evCjtkW2eDeHmzZu6TTNT
IOvrIIYOHOk8hR4waR010nUuXbpkfV46cJ2cnGyeiNzFusL7778vC48dO6Z/
Bk2KuXPnWu+iDTty5EioF1w3Mm/evI8CyEun6+io0alTp8y9tJQjNTXV+qIt
WbJE415WkDfIXDf8BoXCjxpFfGu8g6NGVVVVZguyNR1H0j9zcnLkz8rKyqDP
Xb6W6FPTUcfHjx/r4NLLly9DvVwARgR1ZNSReakjA+IYlWVUlnmpLAPiGClA
CnhJAQBhSRCY47qNtra2devW6biH9if379/XYSI/fjMF0rGYjUiHIEukpzVL
pJfTe8kVHSUIpaKiQloVZgUzgWtGjbyDB47qYI50XGYgxTpqpAcx+tWpmWIH
STF9Imb0Q+lB++FnCvzm3zds2OCxMVNg5/hSM1rlHZzpCEoy0es7g09gY7RM
IMyo0e3bt80KEd8a7+CokbVhWnRgZgp0IslvRsZKiw60nXv37vUETEsBGCXU
kVFHRh0ZELeoLDPttD4RKsuoLAPiBClg2ml9IqQAKQBAyf9K6f+lJw88llt6
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
rnbr1i0dEN64cePNmzcbGxtlyZYtW3Th4cOHx7jZQyPPThs8NjMF4u7du363
Xrp0ydw6ljMF27Ztky08fPhwOBspKCgw8wK/+93v7t27J58f+UgkJCQMv4UA
xgZ1ZFGhjow6MgAAAAAA4sGRI0c8Hs+qVavCr7Zjxw5ZLT093W9wICsrS8eN
R7ONI2bsZwrkdfO7NS8vLyYzBcN37do1M1vkd5N+ioLOjABwFOrIokUdGXVk
AAAAAACMDy9evPjwww8zMjKSk5MzMzO3bdv2/PlzvSk3N3f+/Pmyyz99+vTV
q1cfPHgw1EbWr18fdODi2rVraWlp2dnZOnCUn58v67S0tJgVGhsbZUlRUZFZ
cvv27bVr16akpMiDLlu2rLS0tLOzU2+qqamRlSsrKw8fPrx06dIZM2ZIC0+e
POk3KnXjxg1ZLluYPXu2rF9dXe3XqqtXrxYWFspTmzVr1vLly3Vwpq6ubtWq
VTrEsWLFCnlNdOWurq5du3YtWbJEX5/t27e3t7dbt/bo0SNZIT09fe7cuZs2
bTp79qydUSNpv/wrLbQOHHV3dyclJU2ZMmXOnDnWUaPe3t6KioqcnJzU1NRp
06YtWLBAXjHTjMBRo/r6+i1btmRlZUmb5VWS19/6Ishzl03JqyRPR16l4uJi
eVytKZDnYucRg1q3bp00QzZo3i9D3qAUn9OnT9vcfpiPgQr/Lke8O4CgqCOL
FnVkHurIgPGFyrKoUFlGZRkwzpACUSEFSAFgnJFecdq0abqnbw5rTE5Olv19
uXXSpEnWQwQ3bNgQajvHjh2TFRISEkpKSmSboVabNWuWrFZXV2eW6BhLamqq
/nn37t2JEyfqw5njWuVWHa06d+6caYysplvTQ1jNBsvLy80KZguSWWaFM2fO
mBUSExP1uqTh5cuXrU/2N7/5jazc2tqakpKiS8wLNXPmTPMcnz59On36dH3u
1gNxI44affTRR++++65cuXPnjrlJx+g2b96sEzQ6aiSxlZGRoZudMGGCjsAI
6Yf7+vq8AaNG1dXVZh3rOyir6QpyR/lz8uTJulxeRnkI6/GlER8xkASBPn15
/YOuYL1jxO2H/xhEfJcj3h1AKNSRRYs6MurIgPGEyrJoUVkW9GNAZRngUqRA
tEgBUgAYT6SbWrRokcc32qND348fP9YhXFmu3bvu74eZI1DStepB8qYPzM/P
r6qq8jsKPeJMwebNm+VP6UvljtIA6bgmTJggS/SIcTNTII/18uVLWSJ9qa5w
6dIlr282U4ed9+7dK72WbOHkyZO6gjyQrFBbW6t/lpWVyQqyET0kUl4BWTlw
1EhrJaR5euDls2fP9GkuX75cV8jMzNRu8Pnz57KF06dP6/YjJkV5ebk+tHUW
Q2+6du2adaZA/vX4ZiKuXLnS09Mjr8zRo0e1nbKmNyAp9D3NyclpbW2Vt1ie
8uLFi2VJVlaWrqAzBbLBAwcOVFZWyqvqfT0pIj5iIFnHfrpF3H74j0HEdzn8
3YE4Rx0ZdWTUkQEIhcqyaFFZ5qGyDBhHSIFokQKkADCeNDQ06ICttX9obm7W
YVXZK/fanikQPT09xcXF5sB7lZiYWFZWZgZGIs4USGeicSNb0yWnT5+uqKjQ
FupMgTTvyZMnZgtFRUUe33H4cl2zKSUlxToUk5ubKwvXrVsn1/ft2yfXV65c
aW7t7OyU9TMyMurr6/2SQh5F/zRjHeZFE9IkiU59jtZxsMLCQjtJUV5efv36
devAkTzoxIkTk5OT+/v7rTMFEgTZ2dm7du2ybkRH+8+ePet9PSlevnwpzzcz
M9PaJGm/vizW+27dutW6QetMQcRHDCTfDfRlsVMxF3H74T8GEd/l8HcH4hl1
ZHqdOjLqyAAERWVZtKgso7IMGE9IgWiRAqQAMJ7oUI/sv/stl45dlh89etQb
zUyB6u/vv3Pnzr59+2QjZkxGx2+9NkaNTJcyZcoU6VGlD2xrazMr66jRe++9
Z33Eq1evakjJdT14Xra2x2LJkiVmhZycHLleWVkZtPF+SfHpp5/qnyUlJdYN
6sKLFy/qQJPfC3jz5k07SVFeXi6vlY446cCRjufrobbWUSPV3d1dW1t75swZ
aYAEt46KnDx50hsiKZ48eXLlypWKioqCggId+Jo9e7bepKNGp06dsq4fWH0W
5hEDycr6dstrEuqJB94l1PbDfwwivsvh7w7ELerIqCOjjgwAlWVUllFZBsQz
UoAUIAUAhHLgwAHP6wfYK53W1HOy2Bw1kq7g1atXfgvb2tq09xCaDoGjRvI/
2jpqJN3m7t27zcGBSrpf6cq8g6NGkkrWR7l//77Hd5yhXNeB96Ck+5UVdMxc
h5gC+Y0a6UxKKNLRSXR6LCNIqqmpyU5S6HGYWhChA0eaUzruYR010tfEHA5q
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
neoFgLhFHdmIo44MwBigsozKMgDxjBQgBQAAwyG5pj2zZNONGzdi3RwAwKij
jgzAeEVlmZfKMgBxjBTwkgIAgOFpb2+XFIvq0FkAgBtRRwYAdlBZNuKoLAPg
IqTAiCMFAAAAAEehjgwAQGUZAMQzUgAAAACAlzoyAIhjVJYBQDwjBQAAAAAA
AEBlGQDEM1IAAAAAAAAAXirLACC+kQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABO
8/z58xMnTmzfvn3ZsmVz585dsmTJpk2bqqur+/r6hrPZly9fRnuXjo6ObT73
7t0bzkMDQNy6f/++dqQXL14MusLAwEBxcbGscOnSpTFu20ipqqqS9peVlcW6
IQDgOA8ePNgWQLr93bt3Hzt27MmTJ7Fu4AggBQAAAIDRUF1dnZyc7Alm9uzZ
N2/eHMI2nz59um7duqVLl0Z7x5aWFn3okydPDuFxAQCnT5/WjnTy5MnSqQau
0N/frysUFxePffNGxAcffCDtnzNnTqwbAgCOc+7cuaBf7NWECRPy8/ODpoOL
kAIAMBy3bt0qKytbt27dggULsrKyCgsLjx079vjx47F59CEcUzocHI8KAPZJ
IpgdB/mynZubW1JSkpeXN3XqVF2YmJh44sSJaDe7cuVKue+SJUuivSMzBQAw
TGamQGRnZw8MDPitwEwBAIxjZqYgOTl5vk9qaurMmTMnTpxo0mHWrFljPFAz
skgBABga2REoKSkJOpWclJR04cKFUX30IR9TOhyMMgGATRcvXjSJUFFRIZFh
burs7NyyZYs59OjBgwdRbXn58uXMFABATFhnCsTRo0f9VmCmAADGMTNTUF1d
bV3e19d348aN9PR0vXXDhg2xauHwkQIAMDTS+ZtxnlWrVhUWFkqPumjRIrPv
UFFRMXqPPuRjSoeDUSYAsKO7u1u+XWuHWVNTE7iC7E1oNy4WL14caiPPnz8P
XB5+pqC/v//p06e9vb2BNwX24c+ePbNOYYQiq/X09IRfR1Zw9dFTAGCH30xB
UlJSc3OzdYXwMwVhuugh6OrqChoTgeQRg67Z1tYW2L37jRF1dnba6d7tJIXX
d+4eO7kDAM4UaqZASYe5YMECXaGqqiroFmz2lqF2BKxIAQBwDukqExMTpf9M
S0uTL/zWmyQy9KbZs2ePXgOGfEzpcDBTAAB2VFRUaG+5adOmUOt0dHTMnz9f
V2ts/H/svX1QVee96J9omrSTzLmn57Rpc6eZdObOnNPbiU17M/fcO/nlZDqn
t+d30k76cjO/SU/v9LR/dHhVSSCaRMSAAbUhpAFEKshFpVAtCGggxjcCUSFo
1CSKoERRB42BqiCUrcJm/77DM1mzst9YG9ns/Tzr85k1zF7PfvbDgr3297O/
z3e9fGK1X79+vbGxUcJ7cnKymoZat27dxYsX5amzZ8/KS1S7iEYe//73v7de
eOzYsby8vNTUVFXCzs7O3rlzp/2ruBXD9+3bJynAc889p8Z/9dVXu7u7A7fw
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
5c1NS0sbGhpSLRMTExkZGdK4ceNG30zvZRmTU1E0ivNkB6AFfjMGsd4cmAsC
KwU+feaIDEB3C1ApYI4I9MLr9SYlJU1bKZicnGxqakpNTbXOPm5oaAgzLJUC
cgF9wQKhwAIQbagURKoMgNgS/14YGRl5+eWXn3jiiQceeOBLX/rSggULnnnm
mUOHDgX2lK/EmzZtevzxx7/61a9++ctffvLJJ3Nzc69fvx5+fPmG/P3vf3/e
vHnbtm2bdmP27t07f/7873znOzP8Y+YQVQiorq62N6qbmslTvpneyzJ6GxwG
jeI82QFoBxYw1QJ+XLhwQd7rl156yd6oyxyRAehuASoFzBHFECwQbeT/dunS
pf7+fo/HE74nuQC5gL5ggVBgASwQbagURKoMgNgyW59Z2b1nsEw7bGdn59e+
9rU7ApAwnpGRYe85Pj7+4x//OLDno48+Ojg4GOZXZGVlqZ5bt24NvzHnzp37
xje+IT3/63/9r07+J7FFFQL8KgXy/0zQ8F6WGsV5sgPQDixgqgWcE9EcUfyn
k/GJ7hagUmDkHNHsnlmGBdxArCxALhBzCxgAFggECyiwQLShUhCpMgBiyyx6
YdY/EUNDQ9/85jdV0H7qqadqamreeuutFStW3HvvvaqxqqrK6iyaUI2PPPJI
RUWFdJaXqJbvfe97k5OTgeOLSpYtW2YZJLwXPvroo//yX/6L6qmFFxoaGqzT
Byy2b98ujZs3b/ZpdS9LjeJ8qB2b7ADiFixgqgWiAWWCGaO7BagUGDlHpMAC
WMA55ALkAvqCBUKBBbBAtKFSENGnQCKwLsscv60wZ8SzF373u9+pOPz888/b
248dO3bPPfdI+4MPPqhaLl++/MUvflFaFixYMDw8rBrFBb/97W/VCLt37/Yb
/OjRo9/97nfvsBHKCzdv3nz55Ze/8IUvWD218MK1a9dSUlLk/bX+dvkvqZtX
qnsTaHQvS43ifKgdm+wA4hYsYKoFogGVghmjuwWoFDBHNC1YwA2QC5AL6AsW
CAUWwALRhkpBRJ8CXXxhpClAEc9e+NGPfiRB+L777hsbG/N76je/+Y0K0QMD
A7L62muvqdXS0lJ7N/HF/Pnzpf2nP/2pvT0vL++uu+5SL7n77rvDeOHMmTMP
P/yw6iAvufPOOzXywrZt29TphPL3lpWVLVq0SB6vXbvW6/WqDrrcy1KjOB9q
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
gQXAOVgAC+iyYAHnYAGINlQKIlKGLr4wadZII0FQKYDb5OOPP05MTExLS7ty
5cq5c+f8KgVr1qyRltbWVvtLZDXMrQrIDlybHYDBYAFwDhZwrQWYIzIyC1Bg
AXAOFsACuixYwDlYAKINlYKIlKGLL0yaNdJIEFQKFCMjIy+//PITTzzxwAMP
fOlLX1qwYMEzzzxz6NChwJ5er3fTpk2PP/74V7/61S9/+ctPPvlkbm7u9evX
w48/OTn5/e9/f968edu2bbvNDYgrPB5PZmamvL/vvfeerAZWCuSfIy3t7e32
V8nfJY3Z2dlBxyQ7cG12AAaDBUy1QDTAAq61AHNERmYBCiyABZyDBbCALgsW
cA4WwALRhkpBRMrQxRcmzRppJAi9KgWyk8xgmXbYzs7Or33ta3cEIGE8IyPD
3nN8fPzHP/5xYM9HH310cHAwzK/IyspSPbdu3Xo7GxBvbNy4Ud7c9evXq9XA
SoG6f0FHR4f9Ve3t7dIoPg06ZoKN6G15IBrFeVOzAzCMhM8zK2NiATcw9/Ff
gQVibgHmiEzNArCADwtEAhbAArosWMAJWECBBaINlYKIlKGLL0yaNdJIENpV
CmZ9vxoaGvrmN7+p4vBTTz1VU1Pz1ltvrVix4t5771WNVVVVVmeJ0qrxkUce
qaiokM7yEtXyve99b3JyMnB8UcmyZcusUB/ohYg2IK7o6upS0t+zZ0/7FOqG
BYsXL5bHH330kfQpLS2Vlr1799pfKP3VfQ2CDstxRK7NDsBgsICRFogSWMC1
FmCOyMgsQIEFsIBzsAAW0GXBAs7BAlggDCMjI/LP3LJli1/76Ohoc3NzWVlZ
ZWVlW1ubdAszCMeaRqQMXXxh0qyRRoKIth1mvYI86/vV7373OxV+n3/+eXv7
sWPH7rnnHml/8MEHVcvly5e/+MUvSsuCBQuGh4dVo7jgt7/9rRph9+7dfoMf
PXr0u9/97h02Ar3gfAPiDXW7gVDk5ORIH9GcPK6rq7O/UFalUVwQdFiyA9dm
B2AwWMBIC0QJLOBaCzBHZFgWYAcLYAHnYAEsoMuCBZyDBbBAGNatW+d3bQrf
VPkgIyPDPsWUmZkZ5sQNzimISBm6+MKkWSONBME5BT/60Y8k9t53331jY2N+
T/3mN79REXtgYEBWX3vtNbVaWlpq7ya+mD9/vrT/9Kc/tbfn5eXddddd6iV3
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
6T6uOHPmzEMPPSTZwWzJYuvWrUuXLpWf9sba2lp5x9euXSuP6+vr5XFxcbG9
Q0lJiTRKt6Bjkh2QHeiyaB38yQ7cyaxbIBrE6msDFsACWCAakAvEFbpYICa/
FwtgASwQPbBArIjbSoEBV7HWyBpUChBEHNoh/r0gUejll19+4oknHnjggS99
6UsLFix45plnDh06FNjT6/Vu2rTp8ccf/+pXv/rlL3/5ySefzM3NvX79evjx
Jycnv//978+bN2/btm1BOwwPDy9btuy///f//jd/8zff+MY3fvGLX6xdu/bm
zZuz8Ld9RklJyd///d9LavDII4/85S9/mcWR/VizZo284/X19fK4qKhIHjc1
Ndk7SPyXxsLCwqAvJzsgO9Bl0Tr4kx34gQXiByyABXRZsIBzsAAWcA4WwAK6
LFjAOVggVhaIz0qBGVex1sgaVAoQRBzaYbY+s/KvnsEy7bASmr72ta/dEYCE
8YyMDHvP8fHxH//4x4E9H3300TDFTSErK0v19Dv8XnHy5Mn7778/cNh/+Zd/
mdY4DhExPfTQQ/fcc88rr7xy69atWRkzKK2traocfPbsWd9nVQNpDOwTKsiT
HZAd6LJoHfw1zQ6wwIyZMwvcPlgAC+iyYAHnYAEs4BzOLMMCuixYwAmze2YZ
FoiU+KwUmHEVa42sQaUAQcSnHWZlnBnsEtN6YWho6Jvf/KaKw0899VRNTc1b
b721YsWKe++9VzVWVVVZnUUTqvGRRx6pqKiQzvIS1fK9731PvoEHji8qkYhn
hfpAL4yMjPzDP/yDevYXv/iFxMzt27f/9Kc/VS2PPfbY7f/fFM3NzSKg2Rot
KEeOHElMTJS32/ozc3NzZbW9vd3e7dChQ9KYnZ0ddBDmiMgOdFm0Dv5zFv8V
WMAlFpgVsAAW0GXBAs7BAljAOVgAC+iyYAHnYIFYWSA+KwVmXMVaI2tQKUAQ
cWiHePbC7373OxWBn3/+eXv7sWPH7rnnHml/8MEHVcvly5e/+MUvSsuCBQus
yqa44Le//a0aYffu3X6DHz169Lvf/e4dNgK98H//7/9VTy1atMjeLo5Q7WfO
nIn0HxUTWltbVZmgqKhIbKgaV69eLS0dHR32nu3t7dKYm5sbdBz7leiivtE2
NIrzZAdxsmgd/Ocg/id8nlkZEwu4AeaIsIAuCxZwDhbAAs7BAlhAlwULOAcL
xMoC8VkpCIp2V7HWyBpUChBEHNohnr3wox/9SGLvfffdNzY25vfUb37zGxWZ
BwYGZPW1115Tq6WlpfZu4ov58+dL+09/+lN7e15e3l133aVecvfdd4fywpNP
PintMsK1a9fs7a2treolJSUlEf2XYoKq+QplZWX2M5rlfyWNe/futXfes2eP
uiRd0KHIDsgOdFm0Dv5kBxZYYBaR/Ki4uHh0dNSvXVrku70IorKysq2tbWRk
JMwgWAAL6LJgAedgAZdYYFbAAlhAlwULOAcLxMoCulQKdLyKtUbWoFKAIOLQ
DvHshaeffvpb3/rWD37wg8CnXnzxRRWZP/zwQ9VTRfirV6/69fzhD38oT4kF
7Hec+c53vqNevnjx4rfffjuUF44fP75x48Y33njDr33nzp1BNRRvTE5OVldX
qzJBXV2d3wl3NTU1qt3eKKvSWFFREXRAsgOyA10WrYM/2YEFFpgtDh8+rFxw
5coVe/vIyEhGRob9BJPMzMwwl3LFAlhAlwULOAcLuMECQREF7AoGFsACWCDm
CxZQmG0BLSoFml7FWiNrUClAEHFoh3j2Qhgef/xxJQIV7R966CFZ/fa3vx3Y
MzMzU8VwCfJW4yOPPPKTn/zk8OHDPls5OOj9awIZHx9XlWXh/PnzM/4T5oDN
mzer4m9bW1vgs6rsm5WVZW9cvny5NLa0tAQdkOyA7ECXRevgT3bgBCzgkMnJ
SfkDJQ0JWikoLy+Xxry8vN7e3u7ubvl6H+ZwIB8WwAL6LFjAOVjAbAuE4ejR
ownBOHbsWKiXYAEsoMuCBZyDBWJlgfivFOh7FWuNrEGlAEHEiR10uUJ1KJqb
m1VYtu4go+5o88QTTwR2LigoUJ137txpNdqnShx6YWxsTKLfihUrrOrzM888
M7PtnxtOnDih3t8DBw5MfB6v1ysdPB5PWlqavRx88ODBhKnb3Ie6+gTZAdmB
LovWwZ/sYFqwgEMGBgby8/Ptxrf/4T09PdKSlJRkXc1VHiQnJ0tjX19f0AHn
8hu+HSyABbBANCAXUBhsgfBs375d3v1XXnll6+e5dOlSqJdgASygy4IFnIAF
FLGyQJxXCrS+irVG1qBSgCDi0w6zMs6ceeHUqVNf+cpX7pi6WJyqY46Pj6tA
/fOf/zywf2VlpXp227ZtQQd06AVrHMW///u/+13MJ97IyckJepiQYJ0919jY
mDB10kHhFKpe3NnZGWpMKgVkB7osWgf/OYv/CixgqgWEpqYmeX9TUlJaWlpU
CcCeFqnv/8XFxfaXlJSUSGNtbW3QAbEAFtBlwQLOwQIGWyA8a9euTQi41nR4
sAAW0GXBAs7BArGywP/6X//r2WefvZ0RooQBV7HWyBpUChBEHNpBLy+cO3dO
nVYmLFmyRDWOjo7eeeed0vKrX/0q8CUNDQ2qf1VVVdAxHXohOztbychSw//+
3//7r3/9a6R/wtzg9XqTkpKmrRRIzG9qarKuSpGSkiL/rjDDkh2QHeiyaB38
yQ7CgAUi4p133pG/Wl1xWiK8X6WgqKhIWsQC9pc0NzdLY2FhYdABsQAW0GXB
As7BAgZbIDwvvviivPvqDpUOwQJYQJcFCzgHC8TKAvfff//69etn/PLoYcBV
rDWyBpUCBBGHdtDIC0eOHPn617+uYvLTTz9tXSdtYmJi3rx50vjLX/4y8FXV
1dXqJX5FTwuHXhgaGhoeHr5x44b0X7BggXqJ7icdK7xe76VLl/r7+z0eT/ie
ZAdkB7osWgd/soP/v737jo0jve8/7jufS+BDYqc4OSNGYgSBg/gcJzDgPwLD
MGDEsBM4Bf7DQIDY+SNY9d6odipHWZR0VKWkk0SdROkknXovpk71VE69nXqX
qCMlqheSkiju7xN+w+c3N9tmKXI5w32/sCCWs8/MPjO7+3yfZ7/zzKZCFHgZ
iXMKioqKEs8mtc5/qp8qIAoQBaJyIwoERxTIkyjg8/jxYztTaNOmTZMnTy4s
LCwtLdURTr8WUYAoEJUbUSA4okCbRIHi4mLV+ZNPPmne6q2nfVzFOkJRg0wB
ASKE0SEqcWHDhg2vv/66tcZq/11QMG+88YaW/+xnP0tcccqUKbZWeXl50i1n
+/s1cvfu3W984xta5ZVXXjl37lzwvYg6RgeMDqJyi3Tjz+ggKaLAS0rMFBQW
Fno7+Wb//v1aOHz48KQbIQoQBaJyIwoERxTIkyjgc/r06aRTj+fMmZNmLaIA
USAqN6JAcESBXEaB+vp6Nb8dO3Z87bXXBg0aFHzFnGkfV7GOUNQgU0CACGF0
iERcmDFjhpvkNWDAgMTLwX3/+9/XQz/4wQ8S11VDZyumariaERdk5MiRttaS
JUuCrxV1jA4YHUTlFunGn9FBIqLAy0vMFIwePVpL7Pquzp49e7SwsLAw6UaI
AkSBqNyIAsERBfIkCviUl5fbNz+q/+XLl69evTp79mxb4osLXkQBokBUbkSB
4IgCOYsCmzdvfu2117TKt771rbKyMjtFP1TazVWsIxQ1yBQQIEIYHcIfF1wL
rNAwffr0pGV+8YtfqMDXv/71xMb2N7/5jR569dVXHz58mHTdNHFh48aNU6ZM
SdrouZ+zKSkpCbIX7YMFgtw/b4TaeUYHIblFuvHPZfvfgh9qokDIJWYKdDC1
5MMPP/QW0xBGC4uLi5NuxDtYaN3qfhZRgChAFGhZvrF/i2yTKBAtt27d2rt3
75EjR7wLtbN6P4wdOzbVWkQBokBUbkSB9IgCXjmLAvfu3du1a1dlZWXA8iEX
5qtYRyhqkCkgQIQqOpiQx4UJEyZY8/v666+rlU5VbPDgwVbM9xMqdXV1X/3q
V7X8zTffTLVuqrigdu9rX/ualv/1X/914lr9+/e3tbZt25ZxL9oNziNidBCV
W6Qb/5y1/4YokCdRIDFTsHDhQi3xXbJV/2rh7Nmzk26EKEAUiMqNKBAcUSBP
okAQBw8e1PuhZ8+eqQoQBYgCUbkRBYIjChAFWhuZgqxCRlTiRXQjRaQDBJmC
c+fOfelLX1Lb+5WvfOXjjz9OU7KiouILX/jC5xJ+UKasrMxab98vs3ulySD/
8pe/tId8SeRr1679/u//vpbrSV/mx+4jh9EBo4Oo3CLd+DM6cIgCLSgxU2A/
Xuw7MkOGDNFC3yDLIQoQBaJyIwoERxTIkyjgc//+/atXr+qvd+GxY8fIFBAF
iAJhuBEFDFGgfSBTkFXIiEq8iG6kiHSAIFPw05/+1JrlN998c3gKighW+Ne/
/rUV7tKlS3V1dV1d3bx58774xS9aWNGSVM+SJi5s27bt1Vdf1UN/+Id/uGTJ
khcvXtTX15eXl3/rW9+yVX7729++5HGLFkYHjA6icot048/owCEKtKDETEFt
bW2PHj1inh813r17t/7t3bv3o0ePkm6EKEAUiMqNKBAcUSBPooDP+PHj9dJP
nTrVu3DFihVaWFRUlGotogBRICo3okBwRIH8jAK5xDXrsgoZUYkX0Y0UkQ4Q
Obs2XYtsrcXjwunTpz8XwM6dO638uXPnvvnNb9rCV155xSLC5xqvR+e7tIJP
+t+vefvtt91zffnLX7aMtvn3f//3EP4GTatidMDoICq3SDf+jA4MUaBlJWYK
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
njZt2sqVK8+cOeN7VG+53bt3z5s3T2/OjRs3Xr58ORfVTaGysnLTpk0zZ86c
PXt2eXm5i+wPHjzYlJq6AW1YZ1NVVbVixQodQx3qffv21dTUuIcOHz6cquYf
ffRRG9bZSXXYnfRvoXasleLChAkTrPl9/fXX9aFLVWzw4MFWzPe5rqur++pX
v6rlb775Zqp1U8WFiRMn9k3mG9/4hgr/wR/8gf177NixAIcHANo5ogAA5DOi
AADkM6IAouvp06eFhYWxWGzu3Lm+h9atWxf7LO8sktra2lGjRvkKbNmyJbfV
/z979+518wRN//797969q4cuXrwYS23Xrl1tUmFvzTt16uSt0ogRI+7fv2+P
6pOYquYFBQVtW/N42sNu0r+F2rfWiAvnzp370pe+pEb4K1/5yscff5ymZEVF
xRe+8AWV/NWvfuVdXlZWZm3+0KFDU62b5vdrkuKqdACQiCgAAPmMKAAA+Ywo
gIiqrq5+55137CtcX6ZA76tOnTp16NDhd7/73bVr19auXWvFTpw4YQXmz5+v
f3v16rVp06azZ88uXLjQCpw/fz7He1FZWWm/NzR79mzVpLy8vF+/fvq3pKQk
3jhjYnGCgoKCWOO1B69fv57j2nrdunVLdVBNpkyZogO7Z8+et956S/+OHz/e
Cnz00Ue+mtthF99viORe+sMeD/AWat9aIy789Kc/tRb7zTffHJ6CDrsV/vWv
f22Fu3Tpok96XV3dvHnz7ApyCitakupZiAvt3s2bN9etWzdjxgy9xKdOnfL9
+FG8sWlas2aNGhmVWbVqlT6/bVLPRM2YI6ZWdNasWepT5b62aaSZSmaOHj36
uwTpe4M5lnEXXrx4oeV6j02bNk1/c983aHNEAYRW1D+/GVvIUM16TvTo0aPE
+ovvU3no0CENr6ZOnbpo0aLDhw+3VW2TCrILGTsb7R5RAADyGVEAUbRly5au
Xbu6k719mYJx48ZpobqmboneJFoyefJk3X/27Fm3bt3076ZNm1wBm2KwfPny
nO2CUc31vO+88467AJe61pYIUD0Ty9+5c8cqv3fv3tzW1G/9+vWWbXn69Kkt
OX78uJZ06tQp1XURP/jgA5t3oI95DmuaRMbDnv4t1O61eFw4ffr05wLYuXOn
lT937tw3v/lNW/jKK69YRPhc4/Xoli1bluaJiAvt28cff+xt+WXIkCGPHz92
BXbs2OGb6NShQ4eQzAbKdo7Y5cuXO3bsqIdCcrk2k34qmdGSxB0cOXJkW9XZ
J+MuPHz4sLi42Ff/NWvWtGGdc48ogHBqB5/f9C1kqGY9J3X48OGkUezIkSNW
QF3rqVOn+h7VksRLDbeVjLuQsbORD4gCCK2MJwUpKKxbt25WI93xdVPbnBpD
NTKWS33//fc1eEnMRUblGsjl5eVTpkxJ2jyGOV8cD/AuIl9MFEAU2QnhRUVF
dpq6N1Pw9OlTe/TKlStuoT77scavjGpqatQJV5tWVlbmPQ1JrXQs2VWMWpWq
auMdtVRuoWKHeqrnz59P/AVwLRk/frzKq8nKZT2TUszSJ9T77ZZGZ9advnPn
TmL5s2fP6qGOHTu27VSIeIDDnvEt1Ba1zik18s24pdng2rVrg8SF3bt3u1X0
6vz85z9/7bXX3KPf/va3tZ30NVdkscLpw4fzk5/8RIW/853vBCmMtqW3hF0x
TC2/eg6XLl2yS5xNmDDBvn+4ceOGfbSLi4v37dunTmlJSYk1Smp/2rr62c0R
Uys0ZMgQq3x4MgUZp5KJOtL2KmiA493TzZs3t2HNnSC7oFGDlvTp00ePaqQ2
ffp0eyGuXr3ahjXPMaIAQqgdfH4ztpDhmfWcyurVq1Wft99+2xfO3My4bdu2
WYd5xYoV2gX9tV0OT74j/S5k7GzkCaIAwinjSUGnT5/u3r27t0CPHj20sA3r
7PXkyZORI0f60pTq83u/P4nKNZAPHDiQ9Muf8OeLM76LyBfHiQKIJnXe9u3b
p9Zm48aNsc9+w3/58mX7sPu+abfWQP29xK2p+60IokfV3LV61T2qqqr0pIMG
DXr27NmxY8f0Tl66dOnBgwdTtaLbt29XecW+e/fu5bKeQdTU1JSVlal6GrUl
PlpXV6fd1KPawdzXzSfjYW/GWwitpLa2VpFao0t9SMPTu0CbsElJ9sm1JfX1
9fZ1uqUs16xZo/u9e/fWciug94y1PFq3zeqdWpo5Yu5abbEwZQqCTCW7evWq
fU3XdtVMJ+MuVFdXW6b41KlTbq3hw4fHQnZacv4gCsBpB5/f9C1kqGY9p2Ip
eA1JUhWYMmWKCkybNs0tmTFjhpZMnDgxJxXMLP0uZOxsIMeIAnAynhSkT6td
UriwsPDAgQMa4FsTqoVJL9eQe5bO7tmzp1p11Xnt2rV9+/a1PbICkbgGckND
g5pQ95uPvkxByPPFGd9F5IvDhiiAZtiwYYMvU3Dy5MmknXAtSWxjNegYMGCA
tQzaSI5nFZ05c8YCmV3rxhk7duzDhw99hVW33r1769HVq1fnspIZqS1V/a29
1UFOetbT5s2b9aiGP2E4IT/jYc/qLQQgN2xG1caNG70L7czAmTNnxhsvEda/
f3/fNMOlS5fGPD9BEh5p5ogdPXo01vjL72qUQpUpCDKVTI/q30mTJrVRHTPI
uAsrV66MNf6EjXctjdoUF5JOlwOQM+3g85u+hQzPrOc0bCpcmtNmJk+e7Kuw
XjXrZuekgpml34WMnQ0AbSXjSUFXrlyxoOAudX7jxg1bcvHixTard5Nnz57Z
zDjvTNs9e/ZYDe2U9fBfA9m+/PF+i+KLsCHPF2d8F5EvBtqBxEzBsWPHtGTg
wIG+kjZD+dChQ96FhYWFrombP39+jqcU7d271z27xjX79u3TGMfCx6xZs3yF
Dx48GGu8ek/YJhTYl1qmb9++Sb9IHzZsWKxxqnXuq5co42HP6i0EIDdsrq6v
h2Z9ObXkqdYqKipSgRUrVrR+BbOTao7YgwcPLCl85swZ62mHJ1Pgk3QqmYY2
lprRQ6NHjx4/fvyyZcsSc98hkbgLigKxxlkeVVVVW7duVcegvLxc99u2ngAS
RfHzm20L2VaznlPRQMn6z5s2bZo8ebKCb2lpqa9jvGXLlljj5T4uXLgQb5yo
a2fMhuTqGRl3oXmdDQA5kPGkILsygLjfJlCksBMavXPN2kplZaUCVq9evdTb
dwvr6uqszlevXo3ENZDt4kidO3dWnLVj68sUhDxfnPFdRL4YaAcSMwWffPKJ
JQF9JQcOHKjlx44d8y5Us1ZdXa2+opoLPapOey4q3eSjjz6yuOC9gpZ1sBOb
3AkTJmjhu+++m8saBvHs2TMdw5MnT6puVnO9BN4CGinY8hs3brRVJb0yHvas
3kIAcsNamPnz53sXDh48OOmn1di38epah+2iYWnmiFl2YMmSJe5+CDMFaaaS
2TwIH+2sxm5tV98kUu2CnSW1YMEC7/VLNRriJCIgPKL7+Q3eQrbtrOdUTp8+
nVh/mTNnjitTW1urf225pTlEL01IUsYZd6EZnQ0Abch7UtCLFy+sg22ngKo5
shPyu3XrFpKrDyWybx40Wnn69GkkroG8bds2Hd7q6mrdt5MtfV9bhTxfnJT3
XUS+GGgHEjMFFRUV1jT5SlpnNdXvWtoZ+zFPAjoHTpw4YU/q7Tw/ePDAUsne
k/PVFFvJM2fO5Kx6zWBzB3y9axsvaIzQVrXyyXjYm/cWAtCq3EUv9+/fb0vs
Mg6xxtlMieUPHTpkH2rfSSNhkGqOmKU2hg8fbsOZ0GYKUk0l07jGfkVuyJAh
2sfKysp9+/bZBWPfeuutUI3RUu2CzT6W/v37a6Sj99jo0aNjjRdCdzPZAbSt
iH5+s2oh23bWcyrl5eVWpSVLlly+fPnq1auzZ8+2Je4HdzSSsuDlpUAckhCQ
cRey7WwAaEOJJwWdPHnSkgWdG+lO165dQ9iXNk+ePLGrFqjZjEfwGshJ5xSE
PF+cyPcuIl8MtAOJmYJHjx5Zc+R+7yzumdV169YtLb948aLaYe92nj9/bj8i
pk57zipv30iL+y1IY5dB886EtcupDRs2LGd1y6i6ulrR6u7du96F9gPTqr9b
oqNtPxyvMVHO65hcxsOe8S2U8yoD+N/ThNw3JwMb2fc/vjbHqMtnaYLJkyeH
5FRMr6RzxCorK9Vaao+uXbtmS0KbKUg1layhoeHYsWNbt271zqpWr9tei9On
T7ddlf1S7YJNMNS4xp02UF9fbwO08FwnHMhzEf38ZtVCtu2s51TUB967d++R
I0e8Cy1UuctKWIAbPHiwXiD1qPXXOtjjx49viyr7ZdyFrDobANpQ0pOC1G12
v7Rr+vXrF4YfKUhUW1trE826d+9uX6pE7hrISTMFIc8X+yS+i8gXA+1AYqYg
3pR1dR9t2bdvn5b06tVL9xUprMvnvdSbu4RdLk/aV3SwTLc3QayF9tW691xT
a2xXrlyZs7plZD8Bv3z5cu9C/Rv77PQB+10htbThCQ1BDnv6txCANqGGes6c
OfZR7dmz56xZs6znNmrUKG+xFStWWHdu5syZ4Wl5nFRzxGze68iRI/c0GT58
uJa89957uu9Ly4ZH0qlkScts2bIlZ7XKincX7Axk36/q6N/wfFMHwKsdfH7T
t5BtMus5K1ZDBeV44/mxHTt2VLffO4mjqqrKBlneFEmoeHchHrizAaANJT0p
6Pz58+576TuN7PrzKhm2ywKoSbekZOfOnd0prJG7BnLSTEHI88VeSd9F5IuB
diBppsB+ZuXtt99WfzXe2Gu1q42tXbs27pk+8P7779svnuuvzTzt0aOH9zTy
HFi4cKE1QTYbq6GhwUY0vgBh86lzOd8hI5s+0L17d/frA1euXLFOtfcadPbz
wWFrVDMe9vRvIQBtSP2327dv62+86aNaWlpqD7nPcqzxh0h8F/kMiVRzxCxB
mUoYziPKOJXs2bNnlZWV3l9hM9bfDkOmIOMuTJ8+PfGbRssUjxgxIqd1BfBZ
Uf/8ZmwhwzPrOZX79+9fvXrVl7Owk2Dta/YjR44kPevSetHuCkVtKOMuOGk6
GwDaVqqTgiwvMGPGDG9huxKOLzS0raqqqoKCAvv2yZvCiNw1kBMzBRHKF6c5
tYx8MRB1STMFjx49suZULbA+19YODx8+3PICcc8Eoj59+qjXN3ToUPv3wIED
Oa6/2lW7kp6aoHfffVeNj2WWvYFAAwfLdYbhIqtOXV2dzYOLNU4imDZtmrX/
Ggt4W1prgTV2a8OqJsp42DO+hQDk2P79+4uLi30/AWznqGzfvt3+nTdvnp04
tGPHjraoYyCp5ohp1xZ9lv2cpRpY3Q/DL8JnnErmTuVyF1CSx48fW0/b9/VX
m8i4C3pdYgmnH+ul0UK9u3JaVwCfFfXPb8YWMjyznlMZP368ajJ16lTvQuvq
FxUVxZv2URX2nnn14sULu4aS75o/bSLjLgTpbABoK+lPCrKkpG8UYBnMwYMH
57amKV2/ft3ODiooKPB17yN3DeTETEH488XxwKeWkS8GomvTpk1J+/9VVVVv
v/22OxtTTZPva/Y9e/Z4T+C06VE5rPj/d/fuXfVILRdgVT169Ki3QGVlZazx
ty/DdrVt1dxO3zKq4fvvv+8d3cjMmTP1kK+/HQYZD3vGtxCAXNLg3TJ67sps
1mfT+F1d6HjTjF3ZtWtX/WdZHy8kgs8RC9vvFGScSvbs2TO7Nuy0adMsYOnv
rFmzbDQUhitBZdwFvbvs8nTl5eVWQLHAEschGd0AeSvqn9+MLWSoZj0ntXbt
Wouz7sdDdcd2yr5Fr62ttV2YM2eO++5Fr46lD8JwNmnGXcjY2QDQhtKfFGSp
QN/ZOCppY/lc1TGdioqKnj17qj6FhYVJrykXrWsgJ2YKwp8vjmd6F5EvBtq9
R48eXb169fbt20kThWqybt26pdYsDB1XtaXXrl0LQ02yVVNToz62ol7YEhlB
ZDzs6d9CAHJGI3TrpHXr1m3atGl2uQZ1RC9fvmwFRowYEUth4sSJbVr3/y+r
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
mr7KDhIp1Irqk6sPo7XeXmqp+vbtG2s6jd8ihdouV+DgwYPeSGGePHmiKKPP
u60rCxcujDdFiqlTp3oLW6972LBh8aYv2NX2nkpgbaA17N7+f7xxyGDfIfsi
hWV4NQJK3JqoHbYCaoe9W7PMRcBMgf0SkA6L2jSNO9zYwRspFNSsVopHq1at
0hG7f/++7UhipkDb0Ygj1jhhUAdw+/btFy5cOHz4cCwhU+DNZcc/GykyPmNS
1j77Xh3H8iATJkwIvv1Ub4OMr3L61YG8xTwyH+aRMY8MyCtEAR+iAFEAyCvk
i+Pki5uQLwaQlGKB9am80wHUctqsKPvMBokUatns2+nE37jXQ7Y19V3jTaf0
q4V0BTZs2OAihT74aslnzJihaOVWf++991RA7Vi8KVKoafVOZVq9enWs8Yzx
eNNwwHvVO9FTq20pLy/Xfe1I7LPfGOsp9Ow2iPBFCvvOX4HA29tU46PtKyaq
Sbx582ascRqX9wBa/iVgpkDP3q9fP/1r+WU3jc4bKYYNG2ZjFm+d7YR8G/h4
I4VlXvSou9ig2NwHPZH9mzFTkPEZk7JqyM6dO30PXbx40bLA9lD67Wd8G6R/
lTOuDuQt5pH5MI+MeWRAXiEK+BAFiAJAXiFf7EO+mHwxAJ/a2lr7mnru3Ln2
3bvaLuvB6mNrEwQCRgo7n1z0mXXfUd+5c8eye127drXsXlFRUaxxYpQVqKys
tDyCixT2pX1paalLF9pX6DaocbPP3MXQPv30U7u8nrfNVJPlWrx79+5Zmnv1
6tX6135upkuXLi716bZ58+ZNPandt+SjAoe1saqw62ouW7Ys1ngpv4cPH6q8
+57fesJ6OmuHA44X5IMPPnB9WnX1baE3Ulh4dd+r60nLysqsvF6d+Gcjhd3X
y+fm/WlP7Qjory3JmCnI+IxJ6S1k1e7UqZOinhs/KmDZWf3abF1dXZDtp38b
ZHyV068O5C3mkRnmkcWZRwbkJaKAIQrEiQJAXiJf7EO+mHwxgETue3I1FPoo
2YddPX+XGQwYKR4+fOi9Tp362NZrjTV9b2zF1LraQrXY6h/aNLeYJ1K4xrlf
v36KMvaVr+zduzf+2V+0UVdTIcNaG4U2W10NkTWSGr+o4VXjaT/potGE/ZqJ
2hDLVmi5Wmz3uyrz58+3LVi1tdkxY8bEG7/ltgJqXUtLS60Bd/WJe348ZeTI
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

    "], {{0, 627.}, {1031., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1031., 627.},
  PlotRange->{{0, 1031.}, {0, 627.}}]], "Output",
 CellChangeTimes->{{3.86815049215523*^9, 3.868150508679482*^9}, {
   3.868150546146822*^9, 3.86815059876188*^9}, 3.868150646608404*^9, {
   3.868150682583807*^9, 3.868150685340914*^9}, {3.8681508098053827`*^9, 
   3.8681508285252666`*^9}, {3.868151021359612*^9, 3.868151026830414*^9}, {
   3.8681510994861937`*^9, 3.868151113399651*^9}, 3.8681512991762114`*^9, {
   3.8681513406625767`*^9, 3.868151390139419*^9}, {3.8681515210342216`*^9, 
   3.868151529995667*^9}, {3.8681515683179398`*^9, 3.868151616971231*^9}, 
   3.868826384203328*^9, 3.86882699071535*^9, 3.868827419466486*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"76d67d53-89ee-49fe-a0d1-a9099a04de6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patientsPerMonth", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.868150728725708*^9, 3.868150728844829*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"38b249cd-d0c9-46c1-9a64-9f5978a4598b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"February\"\>", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"February\"\>", ",", "65"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"February\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"February\"\>", ",", "36"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8681507271541033`*^9, 3.8681507290441437`*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"69b0faa8-9550-48a2-a0f7-12fe44fa5cce"]
}, Open  ]]
},
WindowSize->{1440, 811},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9659b36e-5357-4bff-8edd-2c7e772b8da9"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 521, 14, 32, "Input",ExpressionUUID->"08c64d2c-ed50-4094-912b-def6686df134"],
Cell[1104, 38, 651, 14, 40, "Output",ExpressionUUID->"8f9938c5-3f36-46da-a516-553fe84cc802"]
}, Open  ]],
Cell[1770, 55, 1523, 41, 60, "Input",ExpressionUUID->"2116110f-e2d8-43ef-8d61-822b6f5c2c9a"],
Cell[3296, 98, 551, 14, 52, "Input",ExpressionUUID->"2611c52c-0467-41e2-b0af-7f70b7583846"],
Cell[CellGroupData[{
Cell[3872, 116, 410, 9, 30, "Input",ExpressionUUID->"f215646e-4a24-4854-bbfd-96f144248ed6"],
Cell[4285, 127, 3035, 83, 45, "Output",ExpressionUUID->"cc5176b0-0c4a-4272-8a2a-a5dbbc2ddbbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7357, 215, 220, 3, 30, "Input",ExpressionUUID->"385fe0a9-dc01-489e-a667-49fcb43cc9a1"],
Cell[7580, 220, 7891, 178, 251, "Output",ExpressionUUID->"b06f7d1a-aa5a-467b-b89f-ec1eb7da5f90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15508, 403, 571, 14, 30, "Input",ExpressionUUID->"6f132cf9-fd49-46e1-a193-5113c7b74e90"],
Cell[16082, 419, 12725, 306, 262, "Output",ExpressionUUID->"c693615a-7b72-4240-98cd-5e8bd738d7dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28844, 730, 341, 7, 30, "Input",ExpressionUUID->"c819bfe6-a5fc-4bbb-ae1d-d6e400d2503c"],
Cell[29188, 739, 1413, 41, 45, "Output",ExpressionUUID->"e397239a-95fe-422a-85b5-a88edb8d744d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30638, 785, 714, 17, 52, "Input",ExpressionUUID->"879d61bd-929c-4411-8162-8983d6b7c285"],
Cell[31355, 804, 15151, 393, 257, "Output",ExpressionUUID->"4ccf57a2-9252-4b97-8058-28aba0f8977a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46543, 1202, 199, 3, 30, "Input",ExpressionUUID->"c53cec10-2c69-4c97-b924-da0081c15fae"],
Cell[46745, 1207, 9292, 224, 202, "Output",ExpressionUUID->"ab84d77e-d72c-4a4c-87de-cdb55d18383b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56074, 1436, 509, 13, 30, "Input",ExpressionUUID->"5877ca12-33f1-4aea-8d26-3dd5a414cd87"],
Cell[56586, 1451, 486, 8, 34, "Output",ExpressionUUID->"e1f2c67d-172b-429e-8e5e-681ee1f6af18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57109, 1464, 471, 10, 30, "Input",ExpressionUUID->"43482e20-8497-450f-b2fd-df71ece8a1a1"],
Cell[57583, 1476, 900, 18, 34, "Output",ExpressionUUID->"7ba945ce-97dd-42d5-ac4c-22455a2c53d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58520, 1499, 465, 10, 30, "Input",ExpressionUUID->"523338af-9c2b-4580-8b54-1a7913a94f18"],
Cell[58988, 1511, 897, 18, 34, "Output",ExpressionUUID->"effbf94e-5b96-4e67-969f-9ea7202dc57d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59922, 1534, 371, 8, 30, "Input",ExpressionUUID->"8a7dc86e-fb0c-4b1b-a693-fd4dd9e9a606"],
Cell[60296, 1544, 1907, 38, 60, "Output",ExpressionUUID->"058a2a6f-491d-4465-a171-7e11327d81f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62240, 1587, 857, 20, 52, "Input",ExpressionUUID->"93a4a58b-40b4-4bba-9efe-f3571427e185"],
Cell[63100, 1609, 53315, 1251, 284, "Output",ExpressionUUID->"f28ece34-07d9-4c73-8310-282e44a5d3f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116452, 2865, 1301, 31, 73, "Input",ExpressionUUID->"63084c81-0a30-451b-9db2-8e4d9d45e96e"],
Cell[117756, 2898, 1504, 34, 60, "Output",ExpressionUUID->"c8228a9a-ceac-4530-b0da-8e36dc4d9aa3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119297, 2937, 1102, 30, 52, "Input",ExpressionUUID->"4ca3f15d-8d2b-4823-9243-9be770888bc1"],
Cell[120402, 2969, 23189, 544, 253, "Output",ExpressionUUID->"95e8553a-d0eb-41ac-acc7-b9e4fce2fc49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143628, 3518, 1579, 40, 73, "Input",ExpressionUUID->"790ce8b4-39a0-4f7f-9ac4-e0750290fd67"],
Cell[145210, 3560, 1085, 21, 56, "Output",ExpressionUUID->"c3c4fa1f-7683-4d57-8782-d59b7fa4054a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146332, 3586, 691, 15, 30, "Input",ExpressionUUID->"9a7e64b2-c847-4960-aa81-3b4b378fea40"],
Cell[147026, 3603, 1949, 61, 112, "Output",ExpressionUUID->"58d874bf-1847-4ecf-895e-d06bc5f672b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149012, 3669, 1552, 40, 73, "Input",ExpressionUUID->"677ff07c-4564-4f55-8be5-5d67d5689fd4"],
Cell[150567, 3711, 1635, 36, 167, "Output",ExpressionUUID->"9ca8386b-6691-4881-bf25-5a8850c3058f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152239, 3752, 625, 17, 30, "Input",ExpressionUUID->"77a1ea58-a060-4f09-9d99-3a9144952df3"],
Cell[152867, 3771, 1168, 27, 56, "Output",ExpressionUUID->"c00eb06c-3577-4169-8491-533de3716e16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154072, 3803, 183, 2, 30, "Input",ExpressionUUID->"43f1de13-719d-42e4-a349-6591ef8df1c9"],
Cell[154258, 3807, 1124, 26, 56, "Output",ExpressionUUID->"e5876439-019f-4608-9792-320c0bbe26c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155419, 3838, 831, 22, 30, "Input",ExpressionUUID->"3cc72c7e-c96a-4070-a3dc-2f09fe4dfcde"],
Cell[156253, 3862, 4131, 110, 98, "Output",ExpressionUUID->"c69a6308-ab59-4813-bcbe-6102f094559a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160421, 3977, 1146, 29, 73, "Input",ExpressionUUID->"a2b327e3-0702-4ba2-af7e-2a9b06be4a70"],
Cell[161570, 4008, 21198, 473, 402, "Output",ExpressionUUID->"a8d3c2e0-e68b-4a16-af18-1544977e6f64"]
}, Open  ]],
Cell[182783, 4484, 2431, 64, 136, "Input",ExpressionUUID->"ebfb9b8c-8a7c-4549-ad9f-d98f156dcf6a"],
Cell[CellGroupData[{
Cell[185239, 4552, 792, 21, 52, "Input",ExpressionUUID->"502c01d3-97ae-4b67-81ac-d4ffc290edd0"],
Cell[186034, 4575, 8260, 182, 253, "Output",ExpressionUUID->"2bd2435f-9068-4ab5-bc16-fe4426e70938"]
}, Open  ]],
Cell[194309, 4760, 158, 3, 35, "Text",ExpressionUUID->"a539b3da-2029-460a-8de2-e897fa8ee01e"],
Cell[CellGroupData[{
Cell[194492, 4767, 1785, 44, 178, "Input",ExpressionUUID->"277cd5cb-2741-4137-95c3-f183b7804914"],
Cell[196280, 4813, 133231, 2190, 402, "Output",ExpressionUUID->"7c9ff6d2-5674-4457-b176-18a380b0312e"]
}, Open  ]],
Cell[329526, 7006, 175, 3, 30, "Input",ExpressionUUID->"b6da5e69-2318-49a6-a63c-fab8946de393"],
Cell[CellGroupData[{
Cell[329726, 7013, 191, 2, 30, "Input",ExpressionUUID->"ac0c2f44-3c90-4732-82dc-277aa6fdea59"],
Cell[329920, 7017, 4061, 109, 98, "Output",ExpressionUUID->"65c5d49f-08ef-4244-a047-6812df5b71c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334018, 7131, 185, 2, 30, "Input",ExpressionUUID->"c187a99a-d848-49ed-8728-967aa3dcd46b"],
Cell[334206, 7135, 1437, 41, 45, "Output",ExpressionUUID->"7c715b76-bfe0-4934-b318-b2d071ce7967"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335680, 7181, 289, 6, 30, "Input",ExpressionUUID->"33e4c614-4d7b-4210-bd59-566601bbe19f"],
Cell[335972, 7189, 381, 10, 34, "Output",ExpressionUUID->"0ef1b9bb-4cc6-4a78-937d-440225ebc3ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336390, 7204, 253, 5, 30, "Input",ExpressionUUID->"199dbd48-bc1f-4b31-a5ae-04897e294dfb"],
Cell[336646, 7211, 204, 4, 34, "Output",ExpressionUUID->"4d1777c7-b350-4dbd-851f-84d21353d91d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336887, 7220, 252, 5, 30, "Input",ExpressionUUID->"39a717e7-deec-4750-99fa-8a256f8c93ed"],
Cell[337142, 7227, 204, 4, 34, "Output",ExpressionUUID->"c15795c4-1f36-475a-a304-4e49bee50920"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337383, 7236, 251, 5, 30, "Input",ExpressionUUID->"bca9d98a-8964-48c8-b1b1-079cb34137fa"],
Cell[337637, 7243, 206, 4, 34, "Output",ExpressionUUID->"295300c3-2d79-4786-8d18-99a185b0a636"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337880, 7252, 237, 4, 30, "Input",ExpressionUUID->"2a637d53-2449-4073-bfb0-01fd1d254d51"],
Cell[338120, 7258, 1053, 28, 34, "Output",ExpressionUUID->"116a07e0-88be-4af0-92ad-4261d6d2a3d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339210, 7291, 338, 6, 30, "Input",ExpressionUUID->"0d27218a-a193-426d-ba18-2761cd465c4a"],
Cell[339551, 7299, 546, 13, 34, "Output",ExpressionUUID->"d690a032-7312-4ed6-80fa-a0fbed488c69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340134, 7317, 544, 14, 52, "Input",ExpressionUUID->"244212b0-c437-4918-b994-7616fb3690d8"],
Cell[340681, 7333, 1629, 42, 236, "Output",ExpressionUUID->"4ac0a1c1-1cdd-44f1-8fda-940891f2bf44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342347, 7380, 178, 2, 30, "Input",ExpressionUUID->"c51d4830-91ca-4b62-9d20-8a6ac9f01e29"],
Cell[342528, 7384, 821, 14, 56, "Output",ExpressionUUID->"98945524-c976-4aa9-8987-74524c6709a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343386, 7403, 603, 12, 30, "Input",ExpressionUUID->"329426bc-353d-460c-a060-48e2fb63b272"],
Cell[343992, 7417, 1445, 38, 247, "Output",ExpressionUUID->"6188bbf8-d355-4d36-a2a8-49fd0f0d7383"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345474, 7460, 276, 7, 30, "Input",ExpressionUUID->"020079fd-3254-495a-aaba-b8550f7a702a"],
Cell[345753, 7469, 218, 4, 34, "Output",ExpressionUUID->"07a535b0-cc10-44d9-9fd6-71725bf6a1de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346008, 7478, 351, 7, 30, "Input",ExpressionUUID->"01a0c44e-976e-4adf-a54c-4ce159cd3c68"],
Cell[346362, 7487, 1348, 37, 247, "Output",ExpressionUUID->"793f17db-1096-4a3f-a302-4603e9c82950"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347747, 7529, 2203, 52, 157, "Input",ExpressionUUID->"0203d8d7-1d87-4c48-a8fa-1287bf8356d1"],
Cell[349953, 7583, 186542, 3062, 644, "Output",ExpressionUUID->"76d67d53-89ee-49fe-a0d1-a9099a04de6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[536532, 10650, 263, 5, 30, "Input",ExpressionUUID->"38b249cd-d0c9-46c1-9a64-9f5978a4598b"],
Cell[536798, 10657, 502, 12, 34, "Output",ExpressionUUID->"69b0faa8-9550-48a2-a0f7-12fe44fa5cce"]
}, Open  ]]
}
]
*)

